{"ast":null,"code":"\"use strict\";\n\nvar _objectSpread = require(\"/Users/taykim/Desktop/cs98/project-22f-zk-vote/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\nvar _taggedTemplateLiteral = require(\"/Users/taykim/Desktop/cs98/project-22f-zk-vote/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/taggedTemplateLiteral.js\").default;\nvar _createForOfIteratorHelper = require(\"/Users/taykim/Desktop/cs98/project-22f-zk-vote/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8, _templateObject9, _templateObject10, _templateObject11, _templateObject12, _templateObject13, _templateObject14, _templateObject15, _templateObject16, _templateObject17, _templateObject18;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.checkStrictMode = exports.getErrorPath = exports.Type = exports.useFunc = exports.setEvaluated = exports.evaluatedPropsToName = exports.mergeEvaluated = exports.eachItem = exports.unescapeJsonPointer = exports.escapeJsonPointer = exports.escapeFragment = exports.unescapeFragment = exports.schemaRefOrVal = exports.schemaHasRulesButRef = exports.schemaHasRules = exports.checkUnknownRules = exports.alwaysValidSchema = exports.toHash = void 0;\nvar codegen_1 = require(\"./codegen\");\nvar code_1 = require(\"./codegen/code\");\n// TODO refactor to use Set\nfunction toHash(arr) {\n  var hash = {};\n  var _iterator = _createForOfIteratorHelper(arr),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var item = _step.value;\n      hash[item] = true;\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return hash;\n}\nexports.toHash = toHash;\nfunction alwaysValidSchema(it, schema) {\n  if (typeof schema == \"boolean\") return schema;\n  if (Object.keys(schema).length === 0) return true;\n  checkUnknownRules(it, schema);\n  return !schemaHasRules(schema, it.self.RULES.all);\n}\nexports.alwaysValidSchema = alwaysValidSchema;\nfunction checkUnknownRules(it) {\n  var schema = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : it.schema;\n  var opts = it.opts,\n    self = it.self;\n  if (!opts.strictSchema) return;\n  if (typeof schema === \"boolean\") return;\n  var rules = self.RULES.keywords;\n  for (var key in schema) {\n    if (!rules[key]) checkStrictMode(it, \"unknown keyword: \\\"\".concat(key, \"\\\"\"));\n  }\n}\nexports.checkUnknownRules = checkUnknownRules;\nfunction schemaHasRules(schema, rules) {\n  if (typeof schema == \"boolean\") return !schema;\n  for (var key in schema) {\n    if (rules[key]) return true;\n  }\n  return false;\n}\nexports.schemaHasRules = schemaHasRules;\nfunction schemaHasRulesButRef(schema, RULES) {\n  if (typeof schema == \"boolean\") return !schema;\n  for (var key in schema) {\n    if (key !== \"$ref\" && RULES.all[key]) return true;\n  }\n  return false;\n}\nexports.schemaHasRulesButRef = schemaHasRulesButRef;\nfunction schemaRefOrVal(_ref, schema, keyword, $data) {\n  var topSchemaRef = _ref.topSchemaRef,\n    schemaPath = _ref.schemaPath;\n  if (!$data) {\n    if (typeof schema == \"number\" || typeof schema == \"boolean\") return schema;\n    if (typeof schema == \"string\") return (0, codegen_1._)(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\", \"\"])), schema);\n  }\n  return (0, codegen_1._)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\", \"\", \"\", \"\"])), topSchemaRef, schemaPath, (0, codegen_1.getProperty)(keyword));\n}\nexports.schemaRefOrVal = schemaRefOrVal;\nfunction unescapeFragment(str) {\n  return unescapeJsonPointer(decodeURIComponent(str));\n}\nexports.unescapeFragment = unescapeFragment;\nfunction escapeFragment(str) {\n  return encodeURIComponent(escapeJsonPointer(str));\n}\nexports.escapeFragment = escapeFragment;\nfunction escapeJsonPointer(str) {\n  if (typeof str == \"number\") return \"\".concat(str);\n  return str.replace(/~/g, \"~0\").replace(/\\//g, \"~1\");\n}\nexports.escapeJsonPointer = escapeJsonPointer;\nfunction unescapeJsonPointer(str) {\n  return str.replace(/~1/g, \"/\").replace(/~0/g, \"~\");\n}\nexports.unescapeJsonPointer = unescapeJsonPointer;\nfunction eachItem(xs, f) {\n  if (Array.isArray(xs)) {\n    var _iterator2 = _createForOfIteratorHelper(xs),\n      _step2;\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var x = _step2.value;\n        f(x);\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n  } else {\n    f(xs);\n  }\n}\nexports.eachItem = eachItem;\nfunction makeMergeEvaluated(_ref2) {\n  var mergeNames = _ref2.mergeNames,\n    mergeToName = _ref2.mergeToName,\n    mergeValues = _ref2.mergeValues,\n    resultToName = _ref2.resultToName;\n  return function (gen, from, to, toName) {\n    var res = to === undefined ? from : to instanceof codegen_1.Name ? (from instanceof codegen_1.Name ? mergeNames(gen, from, to) : mergeToName(gen, from, to), to) : from instanceof codegen_1.Name ? (mergeToName(gen, to, from), from) : mergeValues(from, to);\n    return toName === codegen_1.Name && !(res instanceof codegen_1.Name) ? resultToName(gen, res) : res;\n  };\n}\nexports.mergeEvaluated = {\n  props: makeMergeEvaluated({\n    mergeNames: function mergeNames(gen, from, to) {\n      return gen.if((0, codegen_1._)(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\", \" !== true && \", \" !== undefined\"])), to, from), function () {\n        gen.if((0, codegen_1._)(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\", \" === true\"])), from), function () {\n          return gen.assign(to, true);\n        }, function () {\n          return gen.assign(to, (0, codegen_1._)(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\"\", \" || {}\"])), to)).code((0, codegen_1._)(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral([\"Object.assign(\", \", \", \")\"])), to, from));\n        });\n      });\n    },\n    mergeToName: function mergeToName(gen, from, to) {\n      return gen.if((0, codegen_1._)(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral([\"\", \" !== true\"])), to), function () {\n        if (from === true) {\n          gen.assign(to, true);\n        } else {\n          gen.assign(to, (0, codegen_1._)(_templateObject8 || (_templateObject8 = _taggedTemplateLiteral([\"\", \" || {}\"])), to));\n          setEvaluated(gen, to, from);\n        }\n      });\n    },\n    mergeValues: function mergeValues(from, to) {\n      return from === true ? true : _objectSpread(_objectSpread({}, from), to);\n    },\n    resultToName: evaluatedPropsToName\n  }),\n  items: makeMergeEvaluated({\n    mergeNames: function mergeNames(gen, from, to) {\n      return gen.if((0, codegen_1._)(_templateObject9 || (_templateObject9 = _taggedTemplateLiteral([\"\", \" !== true && \", \" !== undefined\"])), to, from), function () {\n        return gen.assign(to, (0, codegen_1._)(_templateObject10 || (_templateObject10 = _taggedTemplateLiteral([\"\", \" === true ? true : \", \" > \", \" ? \", \" : \", \"\"])), from, to, from, to, from));\n      });\n    },\n    mergeToName: function mergeToName(gen, from, to) {\n      return gen.if((0, codegen_1._)(_templateObject11 || (_templateObject11 = _taggedTemplateLiteral([\"\", \" !== true\"])), to), function () {\n        return gen.assign(to, from === true ? true : (0, codegen_1._)(_templateObject12 || (_templateObject12 = _taggedTemplateLiteral([\"\", \" > \", \" ? \", \" : \", \"\"])), to, from, to, from));\n      });\n    },\n    mergeValues: function mergeValues(from, to) {\n      return from === true ? true : Math.max(from, to);\n    },\n    resultToName: function resultToName(gen, items) {\n      return gen.var(\"items\", items);\n    }\n  })\n};\nfunction evaluatedPropsToName(gen, ps) {\n  if (ps === true) return gen.var(\"props\", true);\n  var props = gen.var(\"props\", (0, codegen_1._)(_templateObject13 || (_templateObject13 = _taggedTemplateLiteral([\"{}\"]))));\n  if (ps !== undefined) setEvaluated(gen, props, ps);\n  return props;\n}\nexports.evaluatedPropsToName = evaluatedPropsToName;\nfunction setEvaluated(gen, props, ps) {\n  Object.keys(ps).forEach(function (p) {\n    return gen.assign((0, codegen_1._)(_templateObject14 || (_templateObject14 = _taggedTemplateLiteral([\"\", \"\", \"\"])), props, (0, codegen_1.getProperty)(p)), true);\n  });\n}\nexports.setEvaluated = setEvaluated;\nvar snippets = {};\nfunction useFunc(gen, f) {\n  return gen.scopeValue(\"func\", {\n    ref: f,\n    code: snippets[f.code] || (snippets[f.code] = new code_1._Code(f.code))\n  });\n}\nexports.useFunc = useFunc;\nvar Type;\n(function (Type) {\n  Type[Type[\"Num\"] = 0] = \"Num\";\n  Type[Type[\"Str\"] = 1] = \"Str\";\n})(Type = exports.Type || (exports.Type = {}));\nfunction getErrorPath(dataProp, dataPropType, jsPropertySyntax) {\n  // let path\n  if (dataProp instanceof codegen_1.Name) {\n    var isNumber = dataPropType === Type.Num;\n    return jsPropertySyntax ? isNumber ? (0, codegen_1._)(_templateObject15 || (_templateObject15 = _taggedTemplateLiteral([\"\\\"[\\\" + \", \" + \\\"]\\\"\"])), dataProp) : (0, codegen_1._)(_templateObject16 || (_templateObject16 = _taggedTemplateLiteral([\"\\\"['\\\" + \", \" + \\\"']\\\"\"])), dataProp) : isNumber ? (0, codegen_1._)(_templateObject17 || (_templateObject17 = _taggedTemplateLiteral([\"\\\"/\\\" + \", \"\"])), dataProp) : (0, codegen_1._)(_templateObject18 || (_templateObject18 = _taggedTemplateLiteral([\"\\\"/\\\" + \", \".replace(/~/g, \\\"~0\\\").replace(/\\\\//g, \\\"~1\\\")\"], [\"\\\"/\\\" + \", \".replace(/~/g, \\\"~0\\\").replace(/\\\\\\\\//g, \\\"~1\\\")\"])), dataProp); // TODO maybe use global escapePointer\n  }\n\n  return jsPropertySyntax ? (0, codegen_1.getProperty)(dataProp).toString() : \"/\" + escapeJsonPointer(dataProp);\n}\nexports.getErrorPath = getErrorPath;\nfunction checkStrictMode(it, msg) {\n  var mode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : it.opts.strictSchema;\n  if (!mode) return;\n  msg = \"strict mode: \".concat(msg);\n  if (mode === true) throw new Error(msg);\n  it.self.logger.warn(msg);\n}\nexports.checkStrictMode = checkStrictMode;","map":{"version":3,"sources":["../../lib/compile/util.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkStrictMode = exports.getErrorPath = exports.Type = exports.useFunc = exports.setEvaluated = exports.evaluatedPropsToName = exports.mergeEvaluated = exports.eachItem = exports.unescapeJsonPointer = exports.escapeJsonPointer = exports.escapeFragment = exports.unescapeFragment = exports.schemaRefOrVal = exports.schemaHasRulesButRef = exports.schemaHasRules = exports.checkUnknownRules = exports.alwaysValidSchema = exports.toHash = void 0;\nconst codegen_1 = require(\"./codegen\");\nconst code_1 = require(\"./codegen/code\");\n// TODO refactor to use Set\nfunction toHash(arr) {\n    const hash = {};\n    for (const item of arr)\n        hash[item] = true;\n    return hash;\n}\nexports.toHash = toHash;\nfunction alwaysValidSchema(it, schema) {\n    if (typeof schema == \"boolean\")\n        return schema;\n    if (Object.keys(schema).length === 0)\n        return true;\n    checkUnknownRules(it, schema);\n    return !schemaHasRules(schema, it.self.RULES.all);\n}\nexports.alwaysValidSchema = alwaysValidSchema;\nfunction checkUnknownRules(it, schema = it.schema) {\n    const { opts, self } = it;\n    if (!opts.strictSchema)\n        return;\n    if (typeof schema === \"boolean\")\n        return;\n    const rules = self.RULES.keywords;\n    for (const key in schema) {\n        if (!rules[key])\n            checkStrictMode(it, `unknown keyword: \"${key}\"`);\n    }\n}\nexports.checkUnknownRules = checkUnknownRules;\nfunction schemaHasRules(schema, rules) {\n    if (typeof schema == \"boolean\")\n        return !schema;\n    for (const key in schema)\n        if (rules[key])\n            return true;\n    return false;\n}\nexports.schemaHasRules = schemaHasRules;\nfunction schemaHasRulesButRef(schema, RULES) {\n    if (typeof schema == \"boolean\")\n        return !schema;\n    for (const key in schema)\n        if (key !== \"$ref\" && RULES.all[key])\n            return true;\n    return false;\n}\nexports.schemaHasRulesButRef = schemaHasRulesButRef;\nfunction schemaRefOrVal({ topSchemaRef, schemaPath }, schema, keyword, $data) {\n    if (!$data) {\n        if (typeof schema == \"number\" || typeof schema == \"boolean\")\n            return schema;\n        if (typeof schema == \"string\")\n            return (0, codegen_1._) `${schema}`;\n    }\n    return (0, codegen_1._) `${topSchemaRef}${schemaPath}${(0, codegen_1.getProperty)(keyword)}`;\n}\nexports.schemaRefOrVal = schemaRefOrVal;\nfunction unescapeFragment(str) {\n    return unescapeJsonPointer(decodeURIComponent(str));\n}\nexports.unescapeFragment = unescapeFragment;\nfunction escapeFragment(str) {\n    return encodeURIComponent(escapeJsonPointer(str));\n}\nexports.escapeFragment = escapeFragment;\nfunction escapeJsonPointer(str) {\n    if (typeof str == \"number\")\n        return `${str}`;\n    return str.replace(/~/g, \"~0\").replace(/\\//g, \"~1\");\n}\nexports.escapeJsonPointer = escapeJsonPointer;\nfunction unescapeJsonPointer(str) {\n    return str.replace(/~1/g, \"/\").replace(/~0/g, \"~\");\n}\nexports.unescapeJsonPointer = unescapeJsonPointer;\nfunction eachItem(xs, f) {\n    if (Array.isArray(xs)) {\n        for (const x of xs)\n            f(x);\n    }\n    else {\n        f(xs);\n    }\n}\nexports.eachItem = eachItem;\nfunction makeMergeEvaluated({ mergeNames, mergeToName, mergeValues, resultToName, }) {\n    return (gen, from, to, toName) => {\n        const res = to === undefined\n            ? from\n            : to instanceof codegen_1.Name\n                ? (from instanceof codegen_1.Name ? mergeNames(gen, from, to) : mergeToName(gen, from, to), to)\n                : from instanceof codegen_1.Name\n                    ? (mergeToName(gen, to, from), from)\n                    : mergeValues(from, to);\n        return toName === codegen_1.Name && !(res instanceof codegen_1.Name) ? resultToName(gen, res) : res;\n    };\n}\nexports.mergeEvaluated = {\n    props: makeMergeEvaluated({\n        mergeNames: (gen, from, to) => gen.if((0, codegen_1._) `${to} !== true && ${from} !== undefined`, () => {\n            gen.if((0, codegen_1._) `${from} === true`, () => gen.assign(to, true), () => gen.assign(to, (0, codegen_1._) `${to} || {}`).code((0, codegen_1._) `Object.assign(${to}, ${from})`));\n        }),\n        mergeToName: (gen, from, to) => gen.if((0, codegen_1._) `${to} !== true`, () => {\n            if (from === true) {\n                gen.assign(to, true);\n            }\n            else {\n                gen.assign(to, (0, codegen_1._) `${to} || {}`);\n                setEvaluated(gen, to, from);\n            }\n        }),\n        mergeValues: (from, to) => (from === true ? true : { ...from, ...to }),\n        resultToName: evaluatedPropsToName,\n    }),\n    items: makeMergeEvaluated({\n        mergeNames: (gen, from, to) => gen.if((0, codegen_1._) `${to} !== true && ${from} !== undefined`, () => gen.assign(to, (0, codegen_1._) `${from} === true ? true : ${to} > ${from} ? ${to} : ${from}`)),\n        mergeToName: (gen, from, to) => gen.if((0, codegen_1._) `${to} !== true`, () => gen.assign(to, from === true ? true : (0, codegen_1._) `${to} > ${from} ? ${to} : ${from}`)),\n        mergeValues: (from, to) => (from === true ? true : Math.max(from, to)),\n        resultToName: (gen, items) => gen.var(\"items\", items),\n    }),\n};\nfunction evaluatedPropsToName(gen, ps) {\n    if (ps === true)\n        return gen.var(\"props\", true);\n    const props = gen.var(\"props\", (0, codegen_1._) `{}`);\n    if (ps !== undefined)\n        setEvaluated(gen, props, ps);\n    return props;\n}\nexports.evaluatedPropsToName = evaluatedPropsToName;\nfunction setEvaluated(gen, props, ps) {\n    Object.keys(ps).forEach((p) => gen.assign((0, codegen_1._) `${props}${(0, codegen_1.getProperty)(p)}`, true));\n}\nexports.setEvaluated = setEvaluated;\nconst snippets = {};\nfunction useFunc(gen, f) {\n    return gen.scopeValue(\"func\", {\n        ref: f,\n        code: snippets[f.code] || (snippets[f.code] = new code_1._Code(f.code)),\n    });\n}\nexports.useFunc = useFunc;\nvar Type;\n(function (Type) {\n    Type[Type[\"Num\"] = 0] = \"Num\";\n    Type[Type[\"Str\"] = 1] = \"Str\";\n})(Type = exports.Type || (exports.Type = {}));\nfunction getErrorPath(dataProp, dataPropType, jsPropertySyntax) {\n    // let path\n    if (dataProp instanceof codegen_1.Name) {\n        const isNumber = dataPropType === Type.Num;\n        return jsPropertySyntax\n            ? isNumber\n                ? (0, codegen_1._) `\"[\" + ${dataProp} + \"]\"`\n                : (0, codegen_1._) `\"['\" + ${dataProp} + \"']\"`\n            : isNumber\n                ? (0, codegen_1._) `\"/\" + ${dataProp}`\n                : (0, codegen_1._) `\"/\" + ${dataProp}.replace(/~/g, \"~0\").replace(/\\\\//g, \"~1\")`; // TODO maybe use global escapePointer\n    }\n    return jsPropertySyntax ? (0, codegen_1.getProperty)(dataProp).toString() : \"/\" + escapeJsonPointer(dataProp);\n}\nexports.getErrorPath = getErrorPath;\nfunction checkStrictMode(it, msg, mode = it.opts.strictSchema) {\n    if (!mode)\n        return;\n    msg = `strict mode: ${msg}`;\n    if (mode === true)\n        throw new Error(msg);\n    it.self.logger.warn(msg);\n}\nexports.checkStrictMode = checkStrictMode;\n//# sourceMappingURL=util.js.map"]},"metadata":{},"sourceType":"script"}