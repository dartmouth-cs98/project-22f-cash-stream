{"ast":null,"code":"\"use strict\";\n\nimport _get from \"/Users/taykim/Desktop/cs98/cfa-createflow-metamask-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/taykim/Desktop/cs98/cfa-createflow-metamask-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _regeneratorRuntime from \"/Users/taykim/Desktop/cs98/cfa-createflow-metamask-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _classCallCheck from \"/Users/taykim/Desktop/cs98/cfa-createflow-metamask-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/taykim/Desktop/cs98/cfa-createflow-metamask-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/taykim/Desktop/cs98/cfa-createflow-metamask-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/Users/taykim/Desktop/cs98/cfa-createflow-metamask-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/taykim/Desktop/cs98/cfa-createflow-metamask-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport { Signer } from \"@ethersproject/abstract-signer\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { hexlify, hexValue, isHexString } from \"@ethersproject/bytes\";\nimport { _TypedDataEncoder } from \"@ethersproject/hash\";\nimport { checkProperties, deepCopy, defineReadOnly, getStatic, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nimport { accessListify } from \"@ethersproject/transactions\";\nimport { fetchJson, poll } from \"@ethersproject/web\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nvar logger = new Logger(version);\nimport { BaseProvider } from \"./base-provider\";\nvar errorGas = [\"call\", \"estimateGas\"];\nfunction spelunk(value) {\n  if (value == null) {\n    return null;\n  }\n  // These *are* the droids we're looking for.\n  if (typeof value.message === \"string\" && value.message.match(\"reverted\") && isHexString(value.data)) {\n    return {\n      message: value.message,\n      data: value.data\n    };\n  }\n  // Spelunk further...\n  if (typeof value === \"object\") {\n    for (var key in value) {\n      var result = spelunk(value[key]);\n      if (result) {\n        return result;\n      }\n    }\n    return null;\n  }\n  // Might be a JSON string we can further descend...\n  if (typeof value === \"string\") {\n    try {\n      return spelunk(JSON.parse(value));\n    } catch (error) {}\n  }\n  return null;\n}\nfunction checkError(method, error, params) {\n  // Undo the \"convenience\" some nodes are attempting to prevent backwards\n  // incompatibility; maybe for v6 consider forwarding reverts as errors\n  if (method === \"call\") {\n    var result = spelunk(error);\n    if (result) {\n      return result.data;\n    }\n    logger.throwError(\"missing revert data in call exception\", Logger.errors.CALL_EXCEPTION, {\n      error: error,\n      data: \"0x\"\n    });\n  }\n  // @TODO: Should we spelunk for message too?\n  var message = error.message;\n  if (error.code === Logger.errors.SERVER_ERROR && error.error && typeof error.error.message === \"string\") {\n    message = error.error.message;\n  } else if (typeof error.body === \"string\") {\n    message = error.body;\n  } else if (typeof error.responseText === \"string\") {\n    message = error.responseText;\n  }\n  message = (message || \"\").toLowerCase();\n  var transaction = params.transaction || params.signedTransaction;\n  // \"insufficient funds for gas * price + value + cost(data)\"\n  if (message.match(/insufficient funds|base fee exceeds gas limit/)) {\n    logger.throwError(\"insufficient funds for intrinsic transaction cost\", Logger.errors.INSUFFICIENT_FUNDS, {\n      error: error,\n      method: method,\n      transaction: transaction\n    });\n  }\n  // \"nonce too low\"\n  if (message.match(/nonce too low/)) {\n    logger.throwError(\"nonce has already been used\", Logger.errors.NONCE_EXPIRED, {\n      error: error,\n      method: method,\n      transaction: transaction\n    });\n  }\n  // \"replacement transaction underpriced\"\n  if (message.match(/replacement transaction underpriced/)) {\n    logger.throwError(\"replacement fee too low\", Logger.errors.REPLACEMENT_UNDERPRICED, {\n      error: error,\n      method: method,\n      transaction: transaction\n    });\n  }\n  // \"replacement transaction underpriced\"\n  if (message.match(/only replay-protected/)) {\n    logger.throwError(\"legacy pre-eip-155 transactions not supported\", Logger.errors.UNSUPPORTED_OPERATION, {\n      error: error,\n      method: method,\n      transaction: transaction\n    });\n  }\n  if (errorGas.indexOf(method) >= 0 && message.match(/gas required exceeds allowance|always failing transaction|execution reverted/)) {\n    logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n      error: error,\n      method: method,\n      transaction: transaction\n    });\n  }\n  throw error;\n}\nfunction timer(timeout) {\n  return new Promise(function (resolve) {\n    setTimeout(resolve, timeout);\n  });\n}\nfunction getResult(payload) {\n  if (payload.error) {\n    // @TODO: not any\n    var error = new Error(payload.error.message);\n    error.code = payload.error.code;\n    error.data = payload.error.data;\n    throw error;\n  }\n  return payload.result;\n}\nfunction getLowerCase(value) {\n  if (value) {\n    return value.toLowerCase();\n  }\n  return value;\n}\nvar _constructorGuard = {};\nexport var JsonRpcSigner = /*#__PURE__*/function (_Signer) {\n  _inherits(JsonRpcSigner, _Signer);\n  var _super = _createSuper(JsonRpcSigner);\n  function JsonRpcSigner(constructorGuard, provider, addressOrIndex) {\n    var _this;\n    _classCallCheck(this, JsonRpcSigner);\n    logger.checkNew(this instanceof JsonRpcSigner ? this.constructor : void 0, JsonRpcSigner);\n    _this = _super.call(this);\n    if (constructorGuard !== _constructorGuard) {\n      throw new Error(\"do not call the JsonRpcSigner constructor directly; use provider.getSigner\");\n    }\n    defineReadOnly(_assertThisInitialized(_this), \"provider\", provider);\n    if (addressOrIndex == null) {\n      addressOrIndex = 0;\n    }\n    if (typeof addressOrIndex === \"string\") {\n      defineReadOnly(_assertThisInitialized(_this), \"_address\", _this.provider.formatter.address(addressOrIndex));\n      defineReadOnly(_assertThisInitialized(_this), \"_index\", null);\n    } else if (typeof addressOrIndex === \"number\") {\n      defineReadOnly(_assertThisInitialized(_this), \"_index\", addressOrIndex);\n      defineReadOnly(_assertThisInitialized(_this), \"_address\", null);\n    } else {\n      logger.throwArgumentError(\"invalid address or index\", \"addressOrIndex\", addressOrIndex);\n    }\n    return _this;\n  }\n  _createClass(JsonRpcSigner, [{\n    key: \"connect\",\n    value: function connect(provider) {\n      return logger.throwError(\"cannot alter JSON-RPC Signer connection\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"connect\"\n      });\n    }\n  }, {\n    key: \"connectUnchecked\",\n    value: function connectUnchecked() {\n      return new UncheckedJsonRpcSigner(_constructorGuard, this.provider, this._address || this._index);\n    }\n  }, {\n    key: \"getAddress\",\n    value: function getAddress() {\n      var _this2 = this;\n      if (this._address) {\n        return Promise.resolve(this._address);\n      }\n      return this.provider.send(\"eth_accounts\", []).then(function (accounts) {\n        if (accounts.length <= _this2._index) {\n          logger.throwError(\"unknown account #\" + _this2._index, Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"getAddress\"\n          });\n        }\n        return _this2.provider.formatter.address(accounts[_this2._index]);\n      });\n    }\n  }, {\n    key: \"sendUncheckedTransaction\",\n    value: function sendUncheckedTransaction(transaction) {\n      var _this3 = this;\n      transaction = shallowCopy(transaction);\n      var fromAddress = this.getAddress().then(function (address) {\n        if (address) {\n          address = address.toLowerCase();\n        }\n        return address;\n      });\n      // The JSON-RPC for eth_sendTransaction uses 90000 gas; if the user\n      // wishes to use this, it is easy to specify explicitly, otherwise\n      // we look it up for them.\n      if (transaction.gasLimit == null) {\n        var estimate = shallowCopy(transaction);\n        estimate.from = fromAddress;\n        transaction.gasLimit = this.provider.estimateGas(estimate);\n      }\n      if (transaction.to != null) {\n        transaction.to = Promise.resolve(transaction.to).then(function (to) {\n          return __awaiter(_this3, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n            var address;\n            return _regeneratorRuntime().wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    if (!(to == null)) {\n                      _context.next = 2;\n                      break;\n                    }\n                    return _context.abrupt(\"return\", null);\n                  case 2:\n                    _context.next = 4;\n                    return this.provider.resolveName(to);\n                  case 4:\n                    address = _context.sent;\n                    if (address == null) {\n                      logger.throwArgumentError(\"provided ENS name resolves to null\", \"tx.to\", to);\n                    }\n                    return _context.abrupt(\"return\", address);\n                  case 7:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee, this);\n          }));\n        });\n      }\n      return resolveProperties({\n        tx: resolveProperties(transaction),\n        sender: fromAddress\n      }).then(function (_ref) {\n        var tx = _ref.tx,\n          sender = _ref.sender;\n        if (tx.from != null) {\n          if (tx.from.toLowerCase() !== sender) {\n            logger.throwArgumentError(\"from address mismatch\", \"transaction\", transaction);\n          }\n        } else {\n          tx.from = sender;\n        }\n        var hexTx = _this3.provider.constructor.hexlifyTransaction(tx, {\n          from: true\n        });\n        return _this3.provider.send(\"eth_sendTransaction\", [hexTx]).then(function (hash) {\n          return hash;\n        }, function (error) {\n          return checkError(\"sendTransaction\", error, hexTx);\n        });\n      });\n    }\n  }, {\n    key: \"signTransaction\",\n    value: function signTransaction(transaction) {\n      return logger.throwError(\"signing transactions is unsupported\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"signTransaction\"\n      });\n    }\n  }, {\n    key: \"sendTransaction\",\n    value: function sendTransaction(transaction) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var _this4 = this;\n        var blockNumber, hash;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.provider._getInternalBlockNumber(100 + 2 * this.provider.pollingInterval);\n              case 2:\n                blockNumber = _context3.sent;\n                _context3.next = 5;\n                return this.sendUncheckedTransaction(transaction);\n              case 5:\n                hash = _context3.sent;\n                _context3.prev = 6;\n                _context3.next = 9;\n                return poll(function () {\n                  return __awaiter(_this4, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n                    var tx;\n                    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n                      while (1) {\n                        switch (_context2.prev = _context2.next) {\n                          case 0:\n                            _context2.next = 2;\n                            return this.provider.getTransaction(hash);\n                          case 2:\n                            tx = _context2.sent;\n                            if (!(tx === null)) {\n                              _context2.next = 5;\n                              break;\n                            }\n                            return _context2.abrupt(\"return\", undefined);\n                          case 5:\n                            return _context2.abrupt(\"return\", this.provider._wrapTransaction(tx, hash, blockNumber));\n                          case 6:\n                          case \"end\":\n                            return _context2.stop();\n                        }\n                      }\n                    }, _callee2, this);\n                  }));\n                }, {\n                  oncePoll: this.provider\n                });\n              case 9:\n                return _context3.abrupt(\"return\", _context3.sent);\n              case 12:\n                _context3.prev = 12;\n                _context3.t0 = _context3[\"catch\"](6);\n                _context3.t0.transactionHash = hash;\n                throw _context3.t0;\n              case 16:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[6, 12]]);\n      }));\n    }\n  }, {\n    key: \"signMessage\",\n    value: function signMessage(message) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var data, address;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                data = typeof message === \"string\" ? toUtf8Bytes(message) : message;\n                _context4.next = 3;\n                return this.getAddress();\n              case 3:\n                address = _context4.sent;\n                _context4.next = 6;\n                return this.provider.send(\"personal_sign\", [hexlify(data), address.toLowerCase()]);\n              case 6:\n                return _context4.abrupt(\"return\", _context4.sent);\n              case 7:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n    }\n  }, {\n    key: \"_legacySignMessage\",\n    value: function _legacySignMessage(message) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var data, address;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                data = typeof message === \"string\" ? toUtf8Bytes(message) : message;\n                _context5.next = 3;\n                return this.getAddress();\n              case 3:\n                address = _context5.sent;\n                _context5.next = 6;\n                return this.provider.send(\"eth_sign\", [address.toLowerCase(), hexlify(data)]);\n              case 6:\n                return _context5.abrupt(\"return\", _context5.sent);\n              case 7:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n    }\n  }, {\n    key: \"_signTypedData\",\n    value: function _signTypedData(domain, types, value) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        var _this5 = this;\n        var populated, address;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return _TypedDataEncoder.resolveNames(domain, types, value, function (name) {\n                  return _this5.provider.resolveName(name);\n                });\n              case 2:\n                populated = _context6.sent;\n                _context6.next = 5;\n                return this.getAddress();\n              case 5:\n                address = _context6.sent;\n                _context6.next = 8;\n                return this.provider.send(\"eth_signTypedData_v4\", [address.toLowerCase(), JSON.stringify(_TypedDataEncoder.getPayload(populated.domain, types, populated.value))]);\n              case 8:\n                return _context6.abrupt(\"return\", _context6.sent);\n              case 9:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n    }\n  }, {\n    key: \"unlock\",\n    value: function unlock(password) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n        var provider, address;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                provider = this.provider;\n                _context7.next = 3;\n                return this.getAddress();\n              case 3:\n                address = _context7.sent;\n                return _context7.abrupt(\"return\", provider.send(\"personal_unlockAccount\", [address.toLowerCase(), password, null]));\n              case 5:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n    }\n  }]);\n  return JsonRpcSigner;\n}(Signer);\nvar UncheckedJsonRpcSigner = /*#__PURE__*/function (_JsonRpcSigner) {\n  _inherits(UncheckedJsonRpcSigner, _JsonRpcSigner);\n  var _super2 = _createSuper(UncheckedJsonRpcSigner);\n  function UncheckedJsonRpcSigner() {\n    _classCallCheck(this, UncheckedJsonRpcSigner);\n    return _super2.apply(this, arguments);\n  }\n  _createClass(UncheckedJsonRpcSigner, [{\n    key: \"sendTransaction\",\n    value: function sendTransaction(transaction) {\n      var _this6 = this;\n      return this.sendUncheckedTransaction(transaction).then(function (hash) {\n        return {\n          hash: hash,\n          nonce: null,\n          gasLimit: null,\n          gasPrice: null,\n          data: null,\n          value: null,\n          chainId: null,\n          confirmations: 0,\n          from: null,\n          wait: function wait(confirmations) {\n            return _this6.provider.waitForTransaction(hash, confirmations);\n          }\n        };\n      });\n    }\n  }]);\n  return UncheckedJsonRpcSigner;\n}(JsonRpcSigner);\nvar allowedTransactionKeys = {\n  chainId: true,\n  data: true,\n  gasLimit: true,\n  gasPrice: true,\n  nonce: true,\n  to: true,\n  value: true,\n  type: true,\n  accessList: true,\n  maxFeePerGas: true,\n  maxPriorityFeePerGas: true\n};\nexport var JsonRpcProvider = /*#__PURE__*/function (_BaseProvider) {\n  _inherits(JsonRpcProvider, _BaseProvider);\n  var _super3 = _createSuper(JsonRpcProvider);\n  function JsonRpcProvider(url, network) {\n    var _this7;\n    _classCallCheck(this, JsonRpcProvider);\n    logger.checkNew(this instanceof JsonRpcProvider ? this.constructor : void 0, JsonRpcProvider);\n    var networkOrReady = network;\n    // The network is unknown, query the JSON-RPC for it\n    if (networkOrReady == null) {\n      networkOrReady = new Promise(function (resolve, reject) {\n        setTimeout(function () {\n          _this7.detectNetwork().then(function (network) {\n            resolve(network);\n          }, function (error) {\n            reject(error);\n          });\n        }, 0);\n      });\n    }\n    _this7 = _super3.call(this, networkOrReady);\n    // Default URL\n    if (!url) {\n      url = getStatic(_this7.constructor, \"defaultUrl\")();\n    }\n    if (typeof url === \"string\") {\n      defineReadOnly(_assertThisInitialized(_this7), \"connection\", Object.freeze({\n        url: url\n      }));\n    } else {\n      defineReadOnly(_assertThisInitialized(_this7), \"connection\", Object.freeze(shallowCopy(url)));\n    }\n    _this7._nextId = 42;\n    return _this7;\n  }\n  _createClass(JsonRpcProvider, [{\n    key: \"_cache\",\n    get: function get() {\n      if (this._eventLoopCache == null) {\n        this._eventLoopCache = {};\n      }\n      return this._eventLoopCache;\n    }\n  }, {\n    key: \"detectNetwork\",\n    value: function detectNetwork() {\n      var _this8 = this;\n      if (!this._cache[\"detectNetwork\"]) {\n        this._cache[\"detectNetwork\"] = this._uncachedDetectNetwork();\n        // Clear this cache at the beginning of the next event loop\n        setTimeout(function () {\n          _this8._cache[\"detectNetwork\"] = null;\n        }, 0);\n      }\n      return this._cache[\"detectNetwork\"];\n    }\n  }, {\n    key: \"_uncachedDetectNetwork\",\n    value: function _uncachedDetectNetwork() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {\n        var chainId, getNetwork;\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.next = 2;\n                return timer(0);\n              case 2:\n                chainId = null;\n                _context8.prev = 3;\n                _context8.next = 6;\n                return this.send(\"eth_chainId\", []);\n              case 6:\n                chainId = _context8.sent;\n                _context8.next = 19;\n                break;\n              case 9:\n                _context8.prev = 9;\n                _context8.t0 = _context8[\"catch\"](3);\n                _context8.prev = 11;\n                _context8.next = 14;\n                return this.send(\"net_version\", []);\n              case 14:\n                chainId = _context8.sent;\n                _context8.next = 19;\n                break;\n              case 17:\n                _context8.prev = 17;\n                _context8.t1 = _context8[\"catch\"](11);\n              case 19:\n                if (!(chainId != null)) {\n                  _context8.next = 28;\n                  break;\n                }\n                getNetwork = getStatic(this.constructor, \"getNetwork\");\n                _context8.prev = 21;\n                return _context8.abrupt(\"return\", getNetwork(BigNumber.from(chainId).toNumber()));\n              case 25:\n                _context8.prev = 25;\n                _context8.t2 = _context8[\"catch\"](21);\n                return _context8.abrupt(\"return\", logger.throwError(\"could not detect network\", Logger.errors.NETWORK_ERROR, {\n                  chainId: chainId,\n                  event: \"invalidNetwork\",\n                  serverError: _context8.t2\n                }));\n              case 28:\n                return _context8.abrupt(\"return\", logger.throwError(\"could not detect network\", Logger.errors.NETWORK_ERROR, {\n                  event: \"noNetwork\"\n                }));\n              case 29:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this, [[3, 9], [11, 17], [21, 25]]);\n      }));\n    }\n  }, {\n    key: \"getSigner\",\n    value: function getSigner(addressOrIndex) {\n      return new JsonRpcSigner(_constructorGuard, this, addressOrIndex);\n    }\n  }, {\n    key: \"getUncheckedSigner\",\n    value: function getUncheckedSigner(addressOrIndex) {\n      return this.getSigner(addressOrIndex).connectUnchecked();\n    }\n  }, {\n    key: \"listAccounts\",\n    value: function listAccounts() {\n      var _this9 = this;\n      return this.send(\"eth_accounts\", []).then(function (accounts) {\n        return accounts.map(function (a) {\n          return _this9.formatter.address(a);\n        });\n      });\n    }\n  }, {\n    key: \"send\",\n    value: function send(method, params) {\n      var _this10 = this;\n      var request = {\n        method: method,\n        params: params,\n        id: this._nextId++,\n        jsonrpc: \"2.0\"\n      };\n      this.emit(\"debug\", {\n        action: \"request\",\n        request: deepCopy(request),\n        provider: this\n      });\n      // We can expand this in the future to any call, but for now these\n      // are the biggest wins and do not require any serializing parameters.\n      var cache = [\"eth_chainId\", \"eth_blockNumber\"].indexOf(method) >= 0;\n      if (cache && this._cache[method]) {\n        return this._cache[method];\n      }\n      var result = fetchJson(this.connection, JSON.stringify(request), getResult).then(function (result) {\n        _this10.emit(\"debug\", {\n          action: \"response\",\n          request: request,\n          response: result,\n          provider: _this10\n        });\n        return result;\n      }, function (error) {\n        _this10.emit(\"debug\", {\n          action: \"response\",\n          error: error,\n          request: request,\n          provider: _this10\n        });\n        throw error;\n      });\n      // Cache the fetch, but clear it on the next event loop\n      if (cache) {\n        this._cache[method] = result;\n        setTimeout(function () {\n          _this10._cache[method] = null;\n        }, 0);\n      }\n      return result;\n    }\n  }, {\n    key: \"prepareRequest\",\n    value: function prepareRequest(method, params) {\n      switch (method) {\n        case \"getBlockNumber\":\n          return [\"eth_blockNumber\", []];\n        case \"getGasPrice\":\n          return [\"eth_gasPrice\", []];\n        case \"getBalance\":\n          return [\"eth_getBalance\", [getLowerCase(params.address), params.blockTag]];\n        case \"getTransactionCount\":\n          return [\"eth_getTransactionCount\", [getLowerCase(params.address), params.blockTag]];\n        case \"getCode\":\n          return [\"eth_getCode\", [getLowerCase(params.address), params.blockTag]];\n        case \"getStorageAt\":\n          return [\"eth_getStorageAt\", [getLowerCase(params.address), params.position, params.blockTag]];\n        case \"sendTransaction\":\n          return [\"eth_sendRawTransaction\", [params.signedTransaction]];\n        case \"getBlock\":\n          if (params.blockTag) {\n            return [\"eth_getBlockByNumber\", [params.blockTag, !!params.includeTransactions]];\n          } else if (params.blockHash) {\n            return [\"eth_getBlockByHash\", [params.blockHash, !!params.includeTransactions]];\n          }\n          return null;\n        case \"getTransaction\":\n          return [\"eth_getTransactionByHash\", [params.transactionHash]];\n        case \"getTransactionReceipt\":\n          return [\"eth_getTransactionReceipt\", [params.transactionHash]];\n        case \"call\":\n          {\n            var hexlifyTransaction = getStatic(this.constructor, \"hexlifyTransaction\");\n            return [\"eth_call\", [hexlifyTransaction(params.transaction, {\n              from: true\n            }), params.blockTag]];\n          }\n        case \"estimateGas\":\n          {\n            var _hexlifyTransaction = getStatic(this.constructor, \"hexlifyTransaction\");\n            return [\"eth_estimateGas\", [_hexlifyTransaction(params.transaction, {\n              from: true\n            })]];\n          }\n        case \"getLogs\":\n          if (params.filter && params.filter.address != null) {\n            params.filter.address = getLowerCase(params.filter.address);\n          }\n          return [\"eth_getLogs\", [params.filter]];\n        default:\n          break;\n      }\n      return null;\n    }\n  }, {\n    key: \"perform\",\n    value: function perform(method, params) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee9() {\n        var tx, feeData, args;\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                if (!(method === \"call\" || method === \"estimateGas\")) {\n                  _context9.next = 8;\n                  break;\n                }\n                tx = params.transaction;\n                if (!(tx && tx.type != null && BigNumber.from(tx.type).isZero())) {\n                  _context9.next = 8;\n                  break;\n                }\n                if (!(tx.maxFeePerGas == null && tx.maxPriorityFeePerGas == null)) {\n                  _context9.next = 8;\n                  break;\n                }\n                _context9.next = 6;\n                return this.getFeeData();\n              case 6:\n                feeData = _context9.sent;\n                if (feeData.maxFeePerGas == null && feeData.maxPriorityFeePerGas == null) {\n                  // Network doesn't know about EIP-1559 (and hence type)\n                  params = shallowCopy(params);\n                  params.transaction = shallowCopy(tx);\n                  delete params.transaction.type;\n                }\n              case 8:\n                args = this.prepareRequest(method, params);\n                if (args == null) {\n                  logger.throwError(method + \" not implemented\", Logger.errors.NOT_IMPLEMENTED, {\n                    operation: method\n                  });\n                }\n                _context9.prev = 10;\n                _context9.next = 13;\n                return this.send(args[0], args[1]);\n              case 13:\n                return _context9.abrupt(\"return\", _context9.sent);\n              case 16:\n                _context9.prev = 16;\n                _context9.t0 = _context9[\"catch\"](10);\n                return _context9.abrupt(\"return\", checkError(method, _context9.t0, params));\n              case 19:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this, [[10, 16]]);\n      }));\n    }\n  }, {\n    key: \"_startEvent\",\n    value: function _startEvent(event) {\n      if (event.tag === \"pending\") {\n        this._startPending();\n      }\n      _get(_getPrototypeOf(JsonRpcProvider.prototype), \"_startEvent\", this).call(this, event);\n    }\n  }, {\n    key: \"_startPending\",\n    value: function _startPending() {\n      if (this._pendingFilter != null) {\n        return;\n      }\n      var self = this;\n      var pendingFilter = this.send(\"eth_newPendingTransactionFilter\", []);\n      this._pendingFilter = pendingFilter;\n      pendingFilter.then(function (filterId) {\n        function poll() {\n          self.send(\"eth_getFilterChanges\", [filterId]).then(function (hashes) {\n            if (self._pendingFilter != pendingFilter) {\n              return null;\n            }\n            var seq = Promise.resolve();\n            hashes.forEach(function (hash) {\n              // @TODO: This should be garbage collected at some point... How? When?\n              self._emitted[\"t:\" + hash.toLowerCase()] = \"pending\";\n              seq = seq.then(function () {\n                return self.getTransaction(hash).then(function (tx) {\n                  self.emit(\"pending\", tx);\n                  return null;\n                });\n              });\n            });\n            return seq.then(function () {\n              return timer(1000);\n            });\n          }).then(function () {\n            if (self._pendingFilter != pendingFilter) {\n              self.send(\"eth_uninstallFilter\", [filterId]);\n              return;\n            }\n            setTimeout(function () {\n              poll();\n            }, 0);\n            return null;\n          }).catch(function (error) {});\n        }\n        poll();\n        return filterId;\n      }).catch(function (error) {});\n    }\n  }, {\n    key: \"_stopEvent\",\n    value: function _stopEvent(event) {\n      if (event.tag === \"pending\" && this.listenerCount(\"pending\") === 0) {\n        this._pendingFilter = null;\n      }\n      _get(_getPrototypeOf(JsonRpcProvider.prototype), \"_stopEvent\", this).call(this, event);\n    }\n    // Convert an ethers.js transaction into a JSON-RPC transaction\n    //  - gasLimit => gas\n    //  - All values hexlified\n    //  - All numeric values zero-striped\n    //  - All addresses are lowercased\n    // NOTE: This allows a TransactionRequest, but all values should be resolved\n    //       before this is called\n    // @TODO: This will likely be removed in future versions and prepareRequest\n    //        will be the preferred method for this.\n  }], [{\n    key: \"defaultUrl\",\n    value: function defaultUrl() {\n      return \"http:/\\/localhost:8545\";\n    }\n  }, {\n    key: \"hexlifyTransaction\",\n    value: function hexlifyTransaction(transaction, allowExtra) {\n      // Check only allowed properties are given\n      var allowed = shallowCopy(allowedTransactionKeys);\n      if (allowExtra) {\n        for (var key in allowExtra) {\n          if (allowExtra[key]) {\n            allowed[key] = true;\n          }\n        }\n      }\n      checkProperties(transaction, allowed);\n      var result = {};\n      // JSON-RPC now requires numeric values to be \"quantity\" values\n      [\"chainId\", \"gasLimit\", \"gasPrice\", \"type\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"nonce\", \"value\"].forEach(function (key) {\n        if (transaction[key] == null) {\n          return;\n        }\n        var value = hexValue(transaction[key]);\n        if (key === \"gasLimit\") {\n          key = \"gas\";\n        }\n        result[key] = value;\n      });\n      [\"from\", \"to\", \"data\"].forEach(function (key) {\n        if (transaction[key] == null) {\n          return;\n        }\n        result[key] = hexlify(transaction[key]);\n      });\n      if (transaction.accessList) {\n        result[\"accessList\"] = accessListify(transaction.accessList);\n      }\n      return result;\n    }\n  }]);\n  return JsonRpcProvider;\n}(BaseProvider);","map":{"version":3,"sources":["../src.ts/json-rpc-provider.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Signer } from \"@ethersproject/abstract-signer\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { hexlify, hexValue, isHexString } from \"@ethersproject/bytes\";\nimport { _TypedDataEncoder } from \"@ethersproject/hash\";\nimport { checkProperties, deepCopy, defineReadOnly, getStatic, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nimport { accessListify } from \"@ethersproject/transactions\";\nimport { fetchJson, poll } from \"@ethersproject/web\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { BaseProvider } from \"./base-provider\";\nconst errorGas = [\"call\", \"estimateGas\"];\nfunction spelunk(value) {\n    if (value == null) {\n        return null;\n    }\n    // These *are* the droids we're looking for.\n    if (typeof (value.message) === \"string\" && value.message.match(\"reverted\") && isHexString(value.data)) {\n        return { message: value.message, data: value.data };\n    }\n    // Spelunk further...\n    if (typeof (value) === \"object\") {\n        for (const key in value) {\n            const result = spelunk(value[key]);\n            if (result) {\n                return result;\n            }\n        }\n        return null;\n    }\n    // Might be a JSON string we can further descend...\n    if (typeof (value) === \"string\") {\n        try {\n            return spelunk(JSON.parse(value));\n        }\n        catch (error) { }\n    }\n    return null;\n}\nfunction checkError(method, error, params) {\n    // Undo the \"convenience\" some nodes are attempting to prevent backwards\n    // incompatibility; maybe for v6 consider forwarding reverts as errors\n    if (method === \"call\") {\n        const result = spelunk(error);\n        if (result) {\n            return result.data;\n        }\n        logger.throwError(\"missing revert data in call exception\", Logger.errors.CALL_EXCEPTION, {\n            error, data: \"0x\"\n        });\n    }\n    // @TODO: Should we spelunk for message too?\n    let message = error.message;\n    if (error.code === Logger.errors.SERVER_ERROR && error.error && typeof (error.error.message) === \"string\") {\n        message = error.error.message;\n    }\n    else if (typeof (error.body) === \"string\") {\n        message = error.body;\n    }\n    else if (typeof (error.responseText) === \"string\") {\n        message = error.responseText;\n    }\n    message = (message || \"\").toLowerCase();\n    const transaction = params.transaction || params.signedTransaction;\n    // \"insufficient funds for gas * price + value + cost(data)\"\n    if (message.match(/insufficient funds|base fee exceeds gas limit/)) {\n        logger.throwError(\"insufficient funds for intrinsic transaction cost\", Logger.errors.INSUFFICIENT_FUNDS, {\n            error, method, transaction\n        });\n    }\n    // \"nonce too low\"\n    if (message.match(/nonce too low/)) {\n        logger.throwError(\"nonce has already been used\", Logger.errors.NONCE_EXPIRED, {\n            error, method, transaction\n        });\n    }\n    // \"replacement transaction underpriced\"\n    if (message.match(/replacement transaction underpriced/)) {\n        logger.throwError(\"replacement fee too low\", Logger.errors.REPLACEMENT_UNDERPRICED, {\n            error, method, transaction\n        });\n    }\n    // \"replacement transaction underpriced\"\n    if (message.match(/only replay-protected/)) {\n        logger.throwError(\"legacy pre-eip-155 transactions not supported\", Logger.errors.UNSUPPORTED_OPERATION, {\n            error, method, transaction\n        });\n    }\n    if (errorGas.indexOf(method) >= 0 && message.match(/gas required exceeds allowance|always failing transaction|execution reverted/)) {\n        logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n            error, method, transaction\n        });\n    }\n    throw error;\n}\nfunction timer(timeout) {\n    return new Promise(function (resolve) {\n        setTimeout(resolve, timeout);\n    });\n}\nfunction getResult(payload) {\n    if (payload.error) {\n        // @TODO: not any\n        const error = new Error(payload.error.message);\n        error.code = payload.error.code;\n        error.data = payload.error.data;\n        throw error;\n    }\n    return payload.result;\n}\nfunction getLowerCase(value) {\n    if (value) {\n        return value.toLowerCase();\n    }\n    return value;\n}\nconst _constructorGuard = {};\nexport class JsonRpcSigner extends Signer {\n    constructor(constructorGuard, provider, addressOrIndex) {\n        logger.checkNew(new.target, JsonRpcSigner);\n        super();\n        if (constructorGuard !== _constructorGuard) {\n            throw new Error(\"do not call the JsonRpcSigner constructor directly; use provider.getSigner\");\n        }\n        defineReadOnly(this, \"provider\", provider);\n        if (addressOrIndex == null) {\n            addressOrIndex = 0;\n        }\n        if (typeof (addressOrIndex) === \"string\") {\n            defineReadOnly(this, \"_address\", this.provider.formatter.address(addressOrIndex));\n            defineReadOnly(this, \"_index\", null);\n        }\n        else if (typeof (addressOrIndex) === \"number\") {\n            defineReadOnly(this, \"_index\", addressOrIndex);\n            defineReadOnly(this, \"_address\", null);\n        }\n        else {\n            logger.throwArgumentError(\"invalid address or index\", \"addressOrIndex\", addressOrIndex);\n        }\n    }\n    connect(provider) {\n        return logger.throwError(\"cannot alter JSON-RPC Signer connection\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"connect\"\n        });\n    }\n    connectUnchecked() {\n        return new UncheckedJsonRpcSigner(_constructorGuard, this.provider, this._address || this._index);\n    }\n    getAddress() {\n        if (this._address) {\n            return Promise.resolve(this._address);\n        }\n        return this.provider.send(\"eth_accounts\", []).then((accounts) => {\n            if (accounts.length <= this._index) {\n                logger.throwError(\"unknown account #\" + this._index, Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"getAddress\"\n                });\n            }\n            return this.provider.formatter.address(accounts[this._index]);\n        });\n    }\n    sendUncheckedTransaction(transaction) {\n        transaction = shallowCopy(transaction);\n        const fromAddress = this.getAddress().then((address) => {\n            if (address) {\n                address = address.toLowerCase();\n            }\n            return address;\n        });\n        // The JSON-RPC for eth_sendTransaction uses 90000 gas; if the user\n        // wishes to use this, it is easy to specify explicitly, otherwise\n        // we look it up for them.\n        if (transaction.gasLimit == null) {\n            const estimate = shallowCopy(transaction);\n            estimate.from = fromAddress;\n            transaction.gasLimit = this.provider.estimateGas(estimate);\n        }\n        if (transaction.to != null) {\n            transaction.to = Promise.resolve(transaction.to).then((to) => __awaiter(this, void 0, void 0, function* () {\n                if (to == null) {\n                    return null;\n                }\n                const address = yield this.provider.resolveName(to);\n                if (address == null) {\n                    logger.throwArgumentError(\"provided ENS name resolves to null\", \"tx.to\", to);\n                }\n                return address;\n            }));\n        }\n        return resolveProperties({\n            tx: resolveProperties(transaction),\n            sender: fromAddress\n        }).then(({ tx, sender }) => {\n            if (tx.from != null) {\n                if (tx.from.toLowerCase() !== sender) {\n                    logger.throwArgumentError(\"from address mismatch\", \"transaction\", transaction);\n                }\n            }\n            else {\n                tx.from = sender;\n            }\n            const hexTx = this.provider.constructor.hexlifyTransaction(tx, { from: true });\n            return this.provider.send(\"eth_sendTransaction\", [hexTx]).then((hash) => {\n                return hash;\n            }, (error) => {\n                return checkError(\"sendTransaction\", error, hexTx);\n            });\n        });\n    }\n    signTransaction(transaction) {\n        return logger.throwError(\"signing transactions is unsupported\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"signTransaction\"\n        });\n    }\n    sendTransaction(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // This cannot be mined any earlier than any recent block\n            const blockNumber = yield this.provider._getInternalBlockNumber(100 + 2 * this.provider.pollingInterval);\n            // Send the transaction\n            const hash = yield this.sendUncheckedTransaction(transaction);\n            try {\n                // Unfortunately, JSON-RPC only provides and opaque transaction hash\n                // for a response, and we need the actual transaction, so we poll\n                // for it; it should show up very quickly\n                return yield poll(() => __awaiter(this, void 0, void 0, function* () {\n                    const tx = yield this.provider.getTransaction(hash);\n                    if (tx === null) {\n                        return undefined;\n                    }\n                    return this.provider._wrapTransaction(tx, hash, blockNumber);\n                }), { oncePoll: this.provider });\n            }\n            catch (error) {\n                error.transactionHash = hash;\n                throw error;\n            }\n        });\n    }\n    signMessage(message) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const data = ((typeof (message) === \"string\") ? toUtf8Bytes(message) : message);\n            const address = yield this.getAddress();\n            return yield this.provider.send(\"personal_sign\", [hexlify(data), address.toLowerCase()]);\n        });\n    }\n    _legacySignMessage(message) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const data = ((typeof (message) === \"string\") ? toUtf8Bytes(message) : message);\n            const address = yield this.getAddress();\n            // https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sign\n            return yield this.provider.send(\"eth_sign\", [address.toLowerCase(), hexlify(data)]);\n        });\n    }\n    _signTypedData(domain, types, value) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Populate any ENS names (in-place)\n            const populated = yield _TypedDataEncoder.resolveNames(domain, types, value, (name) => {\n                return this.provider.resolveName(name);\n            });\n            const address = yield this.getAddress();\n            return yield this.provider.send(\"eth_signTypedData_v4\", [\n                address.toLowerCase(),\n                JSON.stringify(_TypedDataEncoder.getPayload(populated.domain, types, populated.value))\n            ]);\n        });\n    }\n    unlock(password) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const provider = this.provider;\n            const address = yield this.getAddress();\n            return provider.send(\"personal_unlockAccount\", [address.toLowerCase(), password, null]);\n        });\n    }\n}\nclass UncheckedJsonRpcSigner extends JsonRpcSigner {\n    sendTransaction(transaction) {\n        return this.sendUncheckedTransaction(transaction).then((hash) => {\n            return {\n                hash: hash,\n                nonce: null,\n                gasLimit: null,\n                gasPrice: null,\n                data: null,\n                value: null,\n                chainId: null,\n                confirmations: 0,\n                from: null,\n                wait: (confirmations) => { return this.provider.waitForTransaction(hash, confirmations); }\n            };\n        });\n    }\n}\nconst allowedTransactionKeys = {\n    chainId: true, data: true, gasLimit: true, gasPrice: true, nonce: true, to: true, value: true,\n    type: true, accessList: true,\n    maxFeePerGas: true, maxPriorityFeePerGas: true\n};\nexport class JsonRpcProvider extends BaseProvider {\n    constructor(url, network) {\n        logger.checkNew(new.target, JsonRpcProvider);\n        let networkOrReady = network;\n        // The network is unknown, query the JSON-RPC for it\n        if (networkOrReady == null) {\n            networkOrReady = new Promise((resolve, reject) => {\n                setTimeout(() => {\n                    this.detectNetwork().then((network) => {\n                        resolve(network);\n                    }, (error) => {\n                        reject(error);\n                    });\n                }, 0);\n            });\n        }\n        super(networkOrReady);\n        // Default URL\n        if (!url) {\n            url = getStatic(this.constructor, \"defaultUrl\")();\n        }\n        if (typeof (url) === \"string\") {\n            defineReadOnly(this, \"connection\", Object.freeze({\n                url: url\n            }));\n        }\n        else {\n            defineReadOnly(this, \"connection\", Object.freeze(shallowCopy(url)));\n        }\n        this._nextId = 42;\n    }\n    get _cache() {\n        if (this._eventLoopCache == null) {\n            this._eventLoopCache = {};\n        }\n        return this._eventLoopCache;\n    }\n    static defaultUrl() {\n        return \"http:/\\/localhost:8545\";\n    }\n    detectNetwork() {\n        if (!this._cache[\"detectNetwork\"]) {\n            this._cache[\"detectNetwork\"] = this._uncachedDetectNetwork();\n            // Clear this cache at the beginning of the next event loop\n            setTimeout(() => {\n                this._cache[\"detectNetwork\"] = null;\n            }, 0);\n        }\n        return this._cache[\"detectNetwork\"];\n    }\n    _uncachedDetectNetwork() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield timer(0);\n            let chainId = null;\n            try {\n                chainId = yield this.send(\"eth_chainId\", []);\n            }\n            catch (error) {\n                try {\n                    chainId = yield this.send(\"net_version\", []);\n                }\n                catch (error) { }\n            }\n            if (chainId != null) {\n                const getNetwork = getStatic(this.constructor, \"getNetwork\");\n                try {\n                    return getNetwork(BigNumber.from(chainId).toNumber());\n                }\n                catch (error) {\n                    return logger.throwError(\"could not detect network\", Logger.errors.NETWORK_ERROR, {\n                        chainId: chainId,\n                        event: \"invalidNetwork\",\n                        serverError: error\n                    });\n                }\n            }\n            return logger.throwError(\"could not detect network\", Logger.errors.NETWORK_ERROR, {\n                event: \"noNetwork\"\n            });\n        });\n    }\n    getSigner(addressOrIndex) {\n        return new JsonRpcSigner(_constructorGuard, this, addressOrIndex);\n    }\n    getUncheckedSigner(addressOrIndex) {\n        return this.getSigner(addressOrIndex).connectUnchecked();\n    }\n    listAccounts() {\n        return this.send(\"eth_accounts\", []).then((accounts) => {\n            return accounts.map((a) => this.formatter.address(a));\n        });\n    }\n    send(method, params) {\n        const request = {\n            method: method,\n            params: params,\n            id: (this._nextId++),\n            jsonrpc: \"2.0\"\n        };\n        this.emit(\"debug\", {\n            action: \"request\",\n            request: deepCopy(request),\n            provider: this\n        });\n        // We can expand this in the future to any call, but for now these\n        // are the biggest wins and do not require any serializing parameters.\n        const cache = ([\"eth_chainId\", \"eth_blockNumber\"].indexOf(method) >= 0);\n        if (cache && this._cache[method]) {\n            return this._cache[method];\n        }\n        const result = fetchJson(this.connection, JSON.stringify(request), getResult).then((result) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                request: request,\n                response: result,\n                provider: this\n            });\n            return result;\n        }, (error) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                error: error,\n                request: request,\n                provider: this\n            });\n            throw error;\n        });\n        // Cache the fetch, but clear it on the next event loop\n        if (cache) {\n            this._cache[method] = result;\n            setTimeout(() => {\n                this._cache[method] = null;\n            }, 0);\n        }\n        return result;\n    }\n    prepareRequest(method, params) {\n        switch (method) {\n            case \"getBlockNumber\":\n                return [\"eth_blockNumber\", []];\n            case \"getGasPrice\":\n                return [\"eth_gasPrice\", []];\n            case \"getBalance\":\n                return [\"eth_getBalance\", [getLowerCase(params.address), params.blockTag]];\n            case \"getTransactionCount\":\n                return [\"eth_getTransactionCount\", [getLowerCase(params.address), params.blockTag]];\n            case \"getCode\":\n                return [\"eth_getCode\", [getLowerCase(params.address), params.blockTag]];\n            case \"getStorageAt\":\n                return [\"eth_getStorageAt\", [getLowerCase(params.address), params.position, params.blockTag]];\n            case \"sendTransaction\":\n                return [\"eth_sendRawTransaction\", [params.signedTransaction]];\n            case \"getBlock\":\n                if (params.blockTag) {\n                    return [\"eth_getBlockByNumber\", [params.blockTag, !!params.includeTransactions]];\n                }\n                else if (params.blockHash) {\n                    return [\"eth_getBlockByHash\", [params.blockHash, !!params.includeTransactions]];\n                }\n                return null;\n            case \"getTransaction\":\n                return [\"eth_getTransactionByHash\", [params.transactionHash]];\n            case \"getTransactionReceipt\":\n                return [\"eth_getTransactionReceipt\", [params.transactionHash]];\n            case \"call\": {\n                const hexlifyTransaction = getStatic(this.constructor, \"hexlifyTransaction\");\n                return [\"eth_call\", [hexlifyTransaction(params.transaction, { from: true }), params.blockTag]];\n            }\n            case \"estimateGas\": {\n                const hexlifyTransaction = getStatic(this.constructor, \"hexlifyTransaction\");\n                return [\"eth_estimateGas\", [hexlifyTransaction(params.transaction, { from: true })]];\n            }\n            case \"getLogs\":\n                if (params.filter && params.filter.address != null) {\n                    params.filter.address = getLowerCase(params.filter.address);\n                }\n                return [\"eth_getLogs\", [params.filter]];\n            default:\n                break;\n        }\n        return null;\n    }\n    perform(method, params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Legacy networks do not like the type field being passed along (which\n            // is fair), so we delete type if it is 0 and a non-EIP-1559 network\n            if (method === \"call\" || method === \"estimateGas\") {\n                const tx = params.transaction;\n                if (tx && tx.type != null && BigNumber.from(tx.type).isZero()) {\n                    // If there are no EIP-1559 properties, it might be non-EIP-a559\n                    if (tx.maxFeePerGas == null && tx.maxPriorityFeePerGas == null) {\n                        const feeData = yield this.getFeeData();\n                        if (feeData.maxFeePerGas == null && feeData.maxPriorityFeePerGas == null) {\n                            // Network doesn't know about EIP-1559 (and hence type)\n                            params = shallowCopy(params);\n                            params.transaction = shallowCopy(tx);\n                            delete params.transaction.type;\n                        }\n                    }\n                }\n            }\n            const args = this.prepareRequest(method, params);\n            if (args == null) {\n                logger.throwError(method + \" not implemented\", Logger.errors.NOT_IMPLEMENTED, { operation: method });\n            }\n            try {\n                return yield this.send(args[0], args[1]);\n            }\n            catch (error) {\n                return checkError(method, error, params);\n            }\n        });\n    }\n    _startEvent(event) {\n        if (event.tag === \"pending\") {\n            this._startPending();\n        }\n        super._startEvent(event);\n    }\n    _startPending() {\n        if (this._pendingFilter != null) {\n            return;\n        }\n        const self = this;\n        const pendingFilter = this.send(\"eth_newPendingTransactionFilter\", []);\n        this._pendingFilter = pendingFilter;\n        pendingFilter.then(function (filterId) {\n            function poll() {\n                self.send(\"eth_getFilterChanges\", [filterId]).then(function (hashes) {\n                    if (self._pendingFilter != pendingFilter) {\n                        return null;\n                    }\n                    let seq = Promise.resolve();\n                    hashes.forEach(function (hash) {\n                        // @TODO: This should be garbage collected at some point... How? When?\n                        self._emitted[\"t:\" + hash.toLowerCase()] = \"pending\";\n                        seq = seq.then(function () {\n                            return self.getTransaction(hash).then(function (tx) {\n                                self.emit(\"pending\", tx);\n                                return null;\n                            });\n                        });\n                    });\n                    return seq.then(function () {\n                        return timer(1000);\n                    });\n                }).then(function () {\n                    if (self._pendingFilter != pendingFilter) {\n                        self.send(\"eth_uninstallFilter\", [filterId]);\n                        return;\n                    }\n                    setTimeout(function () { poll(); }, 0);\n                    return null;\n                }).catch((error) => { });\n            }\n            poll();\n            return filterId;\n        }).catch((error) => { });\n    }\n    _stopEvent(event) {\n        if (event.tag === \"pending\" && this.listenerCount(\"pending\") === 0) {\n            this._pendingFilter = null;\n        }\n        super._stopEvent(event);\n    }\n    // Convert an ethers.js transaction into a JSON-RPC transaction\n    //  - gasLimit => gas\n    //  - All values hexlified\n    //  - All numeric values zero-striped\n    //  - All addresses are lowercased\n    // NOTE: This allows a TransactionRequest, but all values should be resolved\n    //       before this is called\n    // @TODO: This will likely be removed in future versions and prepareRequest\n    //        will be the preferred method for this.\n    static hexlifyTransaction(transaction, allowExtra) {\n        // Check only allowed properties are given\n        const allowed = shallowCopy(allowedTransactionKeys);\n        if (allowExtra) {\n            for (const key in allowExtra) {\n                if (allowExtra[key]) {\n                    allowed[key] = true;\n                }\n            }\n        }\n        checkProperties(transaction, allowed);\n        const result = {};\n        // JSON-RPC now requires numeric values to be \"quantity\" values\n        [\"chainId\", \"gasLimit\", \"gasPrice\", \"type\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"nonce\", \"value\"].forEach(function (key) {\n            if (transaction[key] == null) {\n                return;\n            }\n            const value = hexValue(transaction[key]);\n            if (key === \"gasLimit\") {\n                key = \"gas\";\n            }\n            result[key] = value;\n        });\n        [\"from\", \"to\", \"data\"].forEach(function (key) {\n            if (transaction[key] == null) {\n                return;\n            }\n            result[key] = hexlify(transaction[key]);\n        });\n        if (transaction.accessList) {\n            result[\"accessList\"] = accessListify(transaction.accessList);\n        }\n        return result;\n    }\n}\n//# sourceMappingURL=json-rpc-provider.js.map"]},"metadata":{},"sourceType":"module"}