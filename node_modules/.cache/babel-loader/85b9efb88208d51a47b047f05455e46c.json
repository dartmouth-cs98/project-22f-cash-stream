{"ast":null,"code":"import Ajv from \"ajv\";\nimport { ethers } from \"ethers\";\nimport { SFError } from \"./SFError\";\nvar ajv = new Ajv();\najv.addFormat(\"addressOrEmpty\", {\n  type: \"string\",\n  validate: function validate(x) {\n    return x === \"\" || ethers.utils.isAddress(x);\n  }\n});\najv.addFormat(\"stringNumber\", {\n  type: \"string\",\n  validate: function validate(x) {\n    return !isNaN(Number(x));\n  }\n});\n// Schemas\nvar superTokenRequestSchema = {\n  type: \"object\",\n  additionalProperties: false,\n  properties: {\n    isListed: {\n      type: \"boolean\",\n      nullable: true\n    }\n  }\n};\nvar eventRequestSchema = {\n  type: \"object\",\n  additionalProperties: false,\n  properties: {\n    account: {\n      type: \"string\",\n      format: \"addressOrEmpty\",\n      nullable: true\n    },\n    timestamp_gt: {\n      type: \"number\",\n      nullable: true\n    }\n  }\n};\nvar indexRequestSchema = {\n  type: \"object\",\n  additionalProperties: false,\n  properties: {\n    indexId: {\n      type: \"string\",\n      format: \"stringNumber\",\n      nullable: true\n    },\n    publisher: {\n      type: \"string\",\n      format: \"addressOrEmpty\",\n      nullable: true\n    },\n    token: {\n      type: \"string\",\n      format: \"addressOrEmpty\",\n      nullable: true\n    }\n  }\n};\nvar accountTokenSnapshotRequestSchema = {\n  type: \"object\",\n  additionalProperties: false,\n  properties: {\n    account: {\n      type: \"string\",\n      format: \"addressOrEmpty\",\n      nullable: true\n    },\n    token: {\n      type: \"string\",\n      format: \"addressOrEmpty\",\n      nullable: true\n    }\n  }\n};\nvar indexSubscriptionRequestSchema = {\n  type: \"object\",\n  additionalProperties: false,\n  properties: {\n    subscriber: {\n      type: \"string\",\n      format: \"stringNumber\",\n      nullable: true\n    },\n    approved: {\n      type: \"boolean\",\n      nullable: true\n    }\n  }\n};\nvar streamRequestSchema = {\n  type: \"object\",\n  additionalProperties: false,\n  properties: {\n    sender: {\n      type: \"string\",\n      format: \"addressOrEmpty\",\n      nullable: true\n    },\n    receiver: {\n      type: \"string\",\n      format: \"addressOrEmpty\",\n      nullable: true\n    },\n    token: {\n      type: \"string\",\n      format: \"addressOrEmpty\",\n      nullable: true\n    }\n  }\n};\nfunction wrapValidationWithCustomError(validateFunction) {\n  return function (filter) {\n    if (!validateFunction(filter)) {\n      throw new SFError({\n        type: \"INVALID_OBJECT\",\n        customMessage: \"Invalid Filter Object\",\n        errorObject: validateFunction.errors\n      });\n    }\n  };\n}\n// Validate functions\nexport var validateSuperTokenRequest = wrapValidationWithCustomError(ajv.compile(superTokenRequestSchema));\nexport var validateEventRequest = wrapValidationWithCustomError(ajv.compile(eventRequestSchema));\nexport var validateIndexRequest = wrapValidationWithCustomError(ajv.compile(indexRequestSchema));\nexport var validateIndexSubscriptionRequest = wrapValidationWithCustomError(ajv.compile(indexSubscriptionRequestSchema));\nexport var validateStreamRequest = wrapValidationWithCustomError(ajv.compile(streamRequestSchema));\nexport var validateAccountTokenSnapshotRequest = wrapValidationWithCustomError(ajv.compile(accountTokenSnapshotRequestSchema));","map":{"version":3,"sources":["../../src/validation.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import Ajv from \"ajv\";\nimport { ethers } from \"ethers\";\nimport { SFError } from \"./SFError\";\nconst ajv = new Ajv();\najv.addFormat(\"addressOrEmpty\", {\n    type: \"string\",\n    validate: (x) => x === \"\" || ethers.utils.isAddress(x),\n});\najv.addFormat(\"stringNumber\", {\n    type: \"string\",\n    validate: (x) => !isNaN(Number(x)),\n});\n// Schemas\nconst superTokenRequestSchema = {\n    type: \"object\",\n    additionalProperties: false,\n    properties: {\n        isListed: { type: \"boolean\", nullable: true },\n    },\n};\nconst eventRequestSchema = {\n    type: \"object\",\n    additionalProperties: false,\n    properties: {\n        account: { type: \"string\", format: \"addressOrEmpty\", nullable: true },\n        timestamp_gt: {\n            type: \"number\",\n            nullable: true,\n        },\n    },\n};\nconst indexRequestSchema = {\n    type: \"object\",\n    additionalProperties: false,\n    properties: {\n        indexId: { type: \"string\", format: \"stringNumber\", nullable: true },\n        publisher: { type: \"string\", format: \"addressOrEmpty\", nullable: true },\n        token: { type: \"string\", format: \"addressOrEmpty\", nullable: true },\n    },\n};\nconst accountTokenSnapshotRequestSchema = {\n    type: \"object\",\n    additionalProperties: false,\n    properties: {\n        account: {\n            type: \"string\",\n            format: \"addressOrEmpty\",\n            nullable: true,\n        },\n        token: { type: \"string\", format: \"addressOrEmpty\", nullable: true },\n    },\n};\nconst indexSubscriptionRequestSchema = {\n    type: \"object\",\n    additionalProperties: false,\n    properties: {\n        subscriber: {\n            type: \"string\",\n            format: \"stringNumber\",\n            nullable: true,\n        },\n        approved: { type: \"boolean\", nullable: true },\n    },\n};\nconst streamRequestSchema = {\n    type: \"object\",\n    additionalProperties: false,\n    properties: {\n        sender: { type: \"string\", format: \"addressOrEmpty\", nullable: true },\n        receiver: { type: \"string\", format: \"addressOrEmpty\", nullable: true },\n        token: { type: \"string\", format: \"addressOrEmpty\", nullable: true },\n    },\n};\nfunction wrapValidationWithCustomError(validateFunction) {\n    return (filter) => {\n        if (!validateFunction(filter)) {\n            throw new SFError({\n                type: \"INVALID_OBJECT\",\n                customMessage: \"Invalid Filter Object\",\n                errorObject: validateFunction.errors,\n            });\n        }\n    };\n}\n// Validate functions\nexport const validateSuperTokenRequest = wrapValidationWithCustomError(ajv.compile(superTokenRequestSchema));\nexport const validateEventRequest = wrapValidationWithCustomError(ajv.compile(eventRequestSchema));\nexport const validateIndexRequest = wrapValidationWithCustomError(ajv.compile(indexRequestSchema));\nexport const validateIndexSubscriptionRequest = wrapValidationWithCustomError(ajv.compile(indexSubscriptionRequestSchema));\nexport const validateStreamRequest = wrapValidationWithCustomError(ajv.compile(streamRequestSchema));\nexport const validateAccountTokenSnapshotRequest = wrapValidationWithCustomError(ajv.compile(accountTokenSnapshotRequestSchema));\n//# sourceMappingURL=validation.js.map"]},"metadata":{},"sourceType":"module"}