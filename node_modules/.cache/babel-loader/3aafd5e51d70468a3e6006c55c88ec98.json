{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"/Users/taykim/Desktop/cs98/cfa-createflow-metamask-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray.js\").default;\nvar _taggedTemplateLiteral = require(\"/Users/taykim/Desktop/cs98/cfa-createflow-metamask-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/taggedTemplateLiteral.js\").default;\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar code_1 = require(\"../code\");\nvar codegen_1 = require(\"../../compile/codegen\");\nvar names_1 = require(\"../../compile/names\");\nvar util_1 = require(\"../../compile/util\");\nvar error = {\n  message: \"must NOT have additional properties\",\n  params: function params(_ref) {\n    var _params = _ref.params;\n    return (0, codegen_1._)(_templateObject || (_templateObject = _taggedTemplateLiteral([\"{additionalProperty: \", \"}\"])), _params.additionalProperty);\n  }\n};\nvar def = {\n  keyword: \"additionalProperties\",\n  type: [\"object\"],\n  schemaType: [\"boolean\", \"object\"],\n  allowUndefined: true,\n  trackErrors: true,\n  error: error,\n  code: function code(cxt) {\n    var gen = cxt.gen,\n      schema = cxt.schema,\n      parentSchema = cxt.parentSchema,\n      data = cxt.data,\n      errsCount = cxt.errsCount,\n      it = cxt.it;\n    /* istanbul ignore if */\n    if (!errsCount) throw new Error(\"ajv implementation error\");\n    var allErrors = it.allErrors,\n      opts = it.opts;\n    it.props = true;\n    if (opts.removeAdditional !== \"all\" && (0, util_1.alwaysValidSchema)(it, schema)) return;\n    var props = (0, code_1.allSchemaProperties)(parentSchema.properties);\n    var patProps = (0, code_1.allSchemaProperties)(parentSchema.patternProperties);\n    checkAdditionalProperties();\n    cxt.ok((0, codegen_1._)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\", \" === \", \"\"])), errsCount, names_1.default.errors));\n    function checkAdditionalProperties() {\n      gen.forIn(\"key\", data, function (key) {\n        if (!props.length && !patProps.length) additionalPropertyCode(key);else gen.if(isAdditional(key), function () {\n          return additionalPropertyCode(key);\n        });\n      });\n    }\n    function isAdditional(key) {\n      var definedProp;\n      if (props.length > 8) {\n        // TODO maybe an option instead of hard-coded 8?\n        var propsSchema = (0, util_1.schemaRefOrVal)(it, parentSchema.properties, \"properties\");\n        definedProp = (0, code_1.isOwnProperty)(gen, propsSchema, key);\n      } else if (props.length) {\n        definedProp = (0, codegen_1.or).apply(void 0, _toConsumableArray(props.map(function (p) {\n          return (0, codegen_1._)(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\", \" === \", \"\"])), key, p);\n        })));\n      } else {\n        definedProp = codegen_1.nil;\n      }\n      if (patProps.length) {\n        definedProp = (0, codegen_1.or).apply(void 0, [definedProp].concat(_toConsumableArray(patProps.map(function (p) {\n          return (0, codegen_1._)(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\", \".test(\", \")\"])), (0, code_1.usePattern)(cxt, p), key);\n        }))));\n      }\n      return (0, codegen_1.not)(definedProp);\n    }\n    function deleteAdditional(key) {\n      gen.code((0, codegen_1._)(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\"delete \", \"[\", \"]\"])), data, key));\n    }\n    function additionalPropertyCode(key) {\n      if (opts.removeAdditional === \"all\" || opts.removeAdditional && schema === false) {\n        deleteAdditional(key);\n        return;\n      }\n      if (schema === false) {\n        cxt.setParams({\n          additionalProperty: key\n        });\n        cxt.error();\n        if (!allErrors) gen.break();\n        return;\n      }\n      if (typeof schema == \"object\" && !(0, util_1.alwaysValidSchema)(it, schema)) {\n        var valid = gen.name(\"valid\");\n        if (opts.removeAdditional === \"failing\") {\n          applyAdditionalSchema(key, valid, false);\n          gen.if((0, codegen_1.not)(valid), function () {\n            cxt.reset();\n            deleteAdditional(key);\n          });\n        } else {\n          applyAdditionalSchema(key, valid);\n          if (!allErrors) gen.if((0, codegen_1.not)(valid), function () {\n            return gen.break();\n          });\n        }\n      }\n    }\n    function applyAdditionalSchema(key, valid, errors) {\n      var subschema = {\n        keyword: \"additionalProperties\",\n        dataProp: key,\n        dataPropType: util_1.Type.Str\n      };\n      if (errors === false) {\n        Object.assign(subschema, {\n          compositeRule: true,\n          createErrors: false,\n          allErrors: false\n        });\n      }\n      cxt.subschema(subschema, valid);\n    }\n  }\n};\nexports.default = def;","map":{"version":3,"sources":["../../../lib/vocabularies/applicator/additionalProperties.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst code_1 = require(\"../code\");\nconst codegen_1 = require(\"../../compile/codegen\");\nconst names_1 = require(\"../../compile/names\");\nconst util_1 = require(\"../../compile/util\");\nconst error = {\n    message: \"must NOT have additional properties\",\n    params: ({ params }) => (0, codegen_1._) `{additionalProperty: ${params.additionalProperty}}`,\n};\nconst def = {\n    keyword: \"additionalProperties\",\n    type: [\"object\"],\n    schemaType: [\"boolean\", \"object\"],\n    allowUndefined: true,\n    trackErrors: true,\n    error,\n    code(cxt) {\n        const { gen, schema, parentSchema, data, errsCount, it } = cxt;\n        /* istanbul ignore if */\n        if (!errsCount)\n            throw new Error(\"ajv implementation error\");\n        const { allErrors, opts } = it;\n        it.props = true;\n        if (opts.removeAdditional !== \"all\" && (0, util_1.alwaysValidSchema)(it, schema))\n            return;\n        const props = (0, code_1.allSchemaProperties)(parentSchema.properties);\n        const patProps = (0, code_1.allSchemaProperties)(parentSchema.patternProperties);\n        checkAdditionalProperties();\n        cxt.ok((0, codegen_1._) `${errsCount} === ${names_1.default.errors}`);\n        function checkAdditionalProperties() {\n            gen.forIn(\"key\", data, (key) => {\n                if (!props.length && !patProps.length)\n                    additionalPropertyCode(key);\n                else\n                    gen.if(isAdditional(key), () => additionalPropertyCode(key));\n            });\n        }\n        function isAdditional(key) {\n            let definedProp;\n            if (props.length > 8) {\n                // TODO maybe an option instead of hard-coded 8?\n                const propsSchema = (0, util_1.schemaRefOrVal)(it, parentSchema.properties, \"properties\");\n                definedProp = (0, code_1.isOwnProperty)(gen, propsSchema, key);\n            }\n            else if (props.length) {\n                definedProp = (0, codegen_1.or)(...props.map((p) => (0, codegen_1._) `${key} === ${p}`));\n            }\n            else {\n                definedProp = codegen_1.nil;\n            }\n            if (patProps.length) {\n                definedProp = (0, codegen_1.or)(definedProp, ...patProps.map((p) => (0, codegen_1._) `${(0, code_1.usePattern)(cxt, p)}.test(${key})`));\n            }\n            return (0, codegen_1.not)(definedProp);\n        }\n        function deleteAdditional(key) {\n            gen.code((0, codegen_1._) `delete ${data}[${key}]`);\n        }\n        function additionalPropertyCode(key) {\n            if (opts.removeAdditional === \"all\" || (opts.removeAdditional && schema === false)) {\n                deleteAdditional(key);\n                return;\n            }\n            if (schema === false) {\n                cxt.setParams({ additionalProperty: key });\n                cxt.error();\n                if (!allErrors)\n                    gen.break();\n                return;\n            }\n            if (typeof schema == \"object\" && !(0, util_1.alwaysValidSchema)(it, schema)) {\n                const valid = gen.name(\"valid\");\n                if (opts.removeAdditional === \"failing\") {\n                    applyAdditionalSchema(key, valid, false);\n                    gen.if((0, codegen_1.not)(valid), () => {\n                        cxt.reset();\n                        deleteAdditional(key);\n                    });\n                }\n                else {\n                    applyAdditionalSchema(key, valid);\n                    if (!allErrors)\n                        gen.if((0, codegen_1.not)(valid), () => gen.break());\n                }\n            }\n        }\n        function applyAdditionalSchema(key, valid, errors) {\n            const subschema = {\n                keyword: \"additionalProperties\",\n                dataProp: key,\n                dataPropType: util_1.Type.Str,\n            };\n            if (errors === false) {\n                Object.assign(subschema, {\n                    compositeRule: true,\n                    createErrors: false,\n                    allErrors: false,\n                });\n            }\n            cxt.subschema(subschema, valid);\n        }\n    },\n};\nexports.default = def;\n//# sourceMappingURL=additionalProperties.js.map"]},"metadata":{},"sourceType":"script"}