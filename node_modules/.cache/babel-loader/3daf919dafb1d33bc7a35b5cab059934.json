{"ast":null,"code":"import _objectSpread from \"/Users/taykim/Desktop/cs98/project-22f-zk-vote/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _createClass from \"/Users/taykim/Desktop/cs98/project-22f-zk-vote/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"/Users/taykim/Desktop/cs98/project-22f-zk-vote/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _inherits from \"/Users/taykim/Desktop/cs98/project-22f-zk-vote/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/taykim/Desktop/cs98/project-22f-zk-vote/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { SubgraphQueryHandler } from \"../../subgraphQueryHandler\";\nimport { IndexSubscriptionsDocument } from \"./indexSubscriptions.generated\";\nexport var IndexSubscriptionQueryHandler = /*#__PURE__*/function (_SubgraphQueryHandler) {\n  _inherits(IndexSubscriptionQueryHandler, _SubgraphQueryHandler);\n  var _super = _createSuper(IndexSubscriptionQueryHandler);\n  function IndexSubscriptionQueryHandler() {\n    var _this;\n    _classCallCheck(this, IndexSubscriptionQueryHandler);\n    _this = _super.apply(this, arguments);\n    _this.getAddressFieldKeysFromFilter = function () {\n      return {\n        accountKeys: [\"subscriber\"],\n        tokenKeys: []\n      };\n    };\n    _this.getRelevantAddressesFromResultCore = function (result) {\n      return {\n        tokens: [result.token],\n        accounts: [result.subscriber, result.publisher]\n      };\n    };\n    _this.mapFromSubgraphResponse = function (response) {\n      return response.indexSubscriptions.map(function (x) {\n        return _objectSpread(_objectSpread({}, x), {}, {\n          subscriber: x.subscriber.id,\n          createdAtTimestamp: Number(x.createdAtTimestamp),\n          createdAtBlockNumber: Number(x.createdAtBlockNumber),\n          updatedAtTimestamp: Number(x.updatedAtTimestamp),\n          updatedAtBlockNumber: Number(x.updatedAtBlockNumber),\n          index: x.index.id,\n          indexValueCurrent: x.index.indexValue,\n          indexTotalUnits: x.index.totalUnits,\n          token: x.index.token.id,\n          tokenSymbol: x.index.token.symbol,\n          publisher: x.index.publisher.id\n        });\n      });\n    };\n    _this.requestDocument = IndexSubscriptionsDocument;\n    return _this;\n  }\n  return _createClass(IndexSubscriptionQueryHandler);\n}(SubgraphQueryHandler);","map":{"version":3,"sources":["../../../../../src/subgraph/entities/indexSubscription/indexSubscription.ts"],"names":[],"mappings":";;;;;AAWA,SAGI,oBAAoB,QACjB,4BAA4B;AAEnC,SACI,0BAA0B,QAGvB,gCAAgC;AA0BvC,WAAa,6BAA8B;EAAA;EAAA;EAA3C,yCAAA;IAAA;IAAA;;IAMI,MAAA,6BAA6B,GAAG;MAAA,OAG1B;QACF,WAAW,EAAE,CAAC,YAAY,CAAC;QAC3B,SAAS,EAAE;OACd;IAAA,CAAC;IAEF,MAAA,kCAAkC,GAAG,UACjC,MAAyB;MAAA,OACQ;QACjC,MAAM,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC;QACtB,QAAQ,EAAE,CAAC,MAAM,CAAC,UAAU,EAAE,MAAM,CAAC,SAAS;OACjD;IAAA,CAAC;IAEF,MAAA,uBAAuB,GAAG,UACtB,QAAiC;MAAA,OAEjC,QAAQ,CAAC,kBAAkB,CAAC,GAAG,CAAC,UAAC,CAAC;QAAA,uCAC3B,CAAC;UACJ,UAAU,EAAE,CAAC,CAAC,UAAU,CAAC,EAAE;UAC3B,kBAAkB,EAAE,MAAM,CAAC,CAAC,CAAC,kBAAkB,CAAC;UAChD,oBAAoB,EAAE,MAAM,CAAC,CAAC,CAAC,oBAAoB,CAAC;UACpD,kBAAkB,EAAE,MAAM,CAAC,CAAC,CAAC,kBAAkB,CAAC;UAChD,oBAAoB,EAAE,MAAM,CAAC,CAAC,CAAC,oBAAoB,CAAC;UACpD,KAAK,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE;UACjB,iBAAiB,EAAE,CAAC,CAAC,KAAK,CAAC,UAAU;UACrC,eAAe,EAAE,CAAC,CAAC,KAAK,CAAC,UAAU;UACnC,KAAK,EAAE,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;UACvB,WAAW,EAAE,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM;UACjC,SAAS,EAAE,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC;QAAE;MAAA,CACjC,CAAC;IAAA;IAEP,MAAA,eAAe,GAAG,0BAA0B;IAAC;EACjD;EAAC;AAAA,EAxCkD,oBAKlD","sourceRoot":"","sourcesContent":["import { SubgraphQueryHandler, } from \"../../subgraphQueryHandler\";\nimport { IndexSubscriptionsDocument, } from \"./indexSubscriptions.generated\";\nexport class IndexSubscriptionQueryHandler extends SubgraphQueryHandler {\n    constructor() {\n        super(...arguments);\n        this.getAddressFieldKeysFromFilter = () => ({\n            accountKeys: [\"subscriber\"],\n            tokenKeys: [],\n        });\n        this.getRelevantAddressesFromResultCore = (result) => ({\n            tokens: [result.token],\n            accounts: [result.subscriber, result.publisher],\n        });\n        this.mapFromSubgraphResponse = (response) => response.indexSubscriptions.map((x) => ({\n            ...x,\n            subscriber: x.subscriber.id,\n            createdAtTimestamp: Number(x.createdAtTimestamp),\n            createdAtBlockNumber: Number(x.createdAtBlockNumber),\n            updatedAtTimestamp: Number(x.updatedAtTimestamp),\n            updatedAtBlockNumber: Number(x.updatedAtBlockNumber),\n            index: x.index.id,\n            indexValueCurrent: x.index.indexValue,\n            indexTotalUnits: x.index.totalUnits,\n            token: x.index.token.id,\n            tokenSymbol: x.index.token.symbol,\n            publisher: x.index.publisher.id,\n        }));\n        this.requestDocument = IndexSubscriptionsDocument;\n    }\n}\n//# sourceMappingURL=indexSubscription.js.map"]},"metadata":{},"sourceType":"module"}