{"ast":null,"code":"import _objectSpread from \"/Users/taykim/Desktop/cs98/cs98_fall_demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _createClass from \"/Users/taykim/Desktop/cs98/cs98_fall_demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"/Users/taykim/Desktop/cs98/cs98_fall_demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _inherits from \"/Users/taykim/Desktop/cs98/cs98_fall_demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/taykim/Desktop/cs98/cs98_fall_demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { SubgraphQueryHandler } from \"../../subgraphQueryHandler\";\nimport { IndexesDocument } from \"./indexes.generated\";\nexport var IndexQueryHandler = /*#__PURE__*/function (_SubgraphQueryHandler) {\n  _inherits(IndexQueryHandler, _SubgraphQueryHandler);\n  var _super = _createSuper(IndexQueryHandler);\n  function IndexQueryHandler() {\n    var _this;\n    _classCallCheck(this, IndexQueryHandler);\n    _this = _super.apply(this, arguments);\n    _this.getAddressFieldKeysFromFilter = function () {\n      return {\n        accountKeys: [\"publisher\"],\n        tokenKeys: [\"token\"]\n      };\n    };\n    _this.getRelevantAddressesFromResultCore = function (result) {\n      return {\n        tokens: [result.token],\n        accounts: [result.publisher]\n      };\n    };\n    _this.mapFromSubgraphResponse = function (response) {\n      return response.indexes.map(function (x) {\n        return _objectSpread(_objectSpread({}, x), {}, {\n          createdAtTimestamp: Number(x.createdAtTimestamp),\n          createdAtBlockNumber: Number(x.createdAtBlockNumber),\n          updatedAtTimestamp: Number(x.updatedAtTimestamp),\n          updatedAtBlockNumber: Number(x.updatedAtBlockNumber),\n          indexCreatedEvent: x.indexCreatedEvent.id,\n          publisher: x.publisher.id,\n          token: x.token.id,\n          tokenSymbol: x.token.symbol\n        });\n      });\n    };\n    _this.requestDocument = IndexesDocument;\n    return _this;\n  }\n  return _createClass(IndexQueryHandler);\n}(SubgraphQueryHandler);","map":{"version":3,"sources":["../../../../../src/subgraph/entities/index/index.ts"],"names":[],"mappings":";;;;;AAQA,SAGI,oBAAoB,QACjB,4BAA4B;AAEnC,SACI,eAAe,QAGZ,qBAAqB;AAuB5B,WAAa,iBAAkB;EAAA;EAAA;EAA/B,6BAAA;IAAA;IAAA;;IAMI,MAAA,6BAA6B,GAAG;MAAA,OAG1B;QACF,WAAW,EAAE,CAAC,WAAW,CAAC;QAC1B,SAAS,EAAE,CAAC,OAAO;OACtB;IAAA,CAAC;IAEF,MAAA,kCAAkC,GAAG,UACjC,MAAa;MAAA,OACoB;QACjC,MAAM,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC;QACtB,QAAQ,EAAE,CAAC,MAAM,CAAC,SAAS;OAC9B;IAAA,CAAC;IAEF,MAAA,uBAAuB,GAAG,UAAC,QAAsB;MAAA,OAC7C,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,UAAC,CAAC;QAAA,uCAChB,CAAC;UACJ,kBAAkB,EAAE,MAAM,CAAC,CAAC,CAAC,kBAAkB,CAAC;UAChD,oBAAoB,EAAE,MAAM,CAAC,CAAC,CAAC,oBAAoB,CAAC;UACpD,kBAAkB,EAAE,MAAM,CAAC,CAAC,CAAC,kBAAkB,CAAC;UAChD,oBAAoB,EAAE,MAAM,CAAC,CAAC,CAAC,oBAAoB,CAAC;UACpD,iBAAiB,EAAE,CAAC,CAAC,iBAAiB,CAAC,EAAE;UACzC,SAAS,EAAE,CAAC,CAAC,SAAS,CAAC,EAAE;UACzB,KAAK,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE;UACjB,WAAW,EAAE,CAAC,CAAC,KAAK,CAAC;QAAM;MAAA,CAC7B,CAAC;IAAA;IAEP,MAAA,eAAe,GAAG,eAAe;IAAC;EACtC;EAAC;AAAA,EAnCsC,oBAKtC","sourceRoot":"","sourcesContent":["import { SubgraphQueryHandler, } from \"../../subgraphQueryHandler\";\nimport { IndexesDocument, } from \"./indexes.generated\";\nexport class IndexQueryHandler extends SubgraphQueryHandler {\n    constructor() {\n        super(...arguments);\n        this.getAddressFieldKeysFromFilter = () => ({\n            accountKeys: [\"publisher\"],\n            tokenKeys: [\"token\"],\n        });\n        this.getRelevantAddressesFromResultCore = (result) => ({\n            tokens: [result.token],\n            accounts: [result.publisher],\n        });\n        this.mapFromSubgraphResponse = (response) => response.indexes.map((x) => ({\n            ...x,\n            createdAtTimestamp: Number(x.createdAtTimestamp),\n            createdAtBlockNumber: Number(x.createdAtBlockNumber),\n            updatedAtTimestamp: Number(x.updatedAtTimestamp),\n            updatedAtBlockNumber: Number(x.updatedAtBlockNumber),\n            indexCreatedEvent: x.indexCreatedEvent.id,\n            publisher: x.publisher.id,\n            token: x.token.id,\n            tokenSymbol: x.token.symbol,\n        }));\n        this.requestDocument = IndexesDocument;\n    }\n}\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}