{"ast":null,"code":"import _objectSpread from \"/Users/taykim/Desktop/cs98/cs98_fall_demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _toConsumableArray from \"/Users/taykim/Desktop/cs98/cs98_fall_demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _objectWithoutProperties from \"/Users/taykim/Desktop/cs98/cs98_fall_demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"children\", \"type\", \"name\", \"value\", \"onChange\"];\nimport * as React from 'react';\nimport invariant from 'invariant';\nimport { useUncontrolled } from 'uncontrollable';\nimport chainFunction from './createChainedFunction';\nimport { map } from './ElementChildren';\nimport ButtonGroup from './ButtonGroup';\nimport ToggleButton from './ToggleButton';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar defaultProps = {\n  type: 'radio',\n  vertical: false\n};\nvar ToggleButtonGroup = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n      value: 'onChange'\n    }),\n    children = _useUncontrolled.children,\n    type = _useUncontrolled.type,\n    name = _useUncontrolled.name,\n    value = _useUncontrolled.value,\n    onChange = _useUncontrolled.onChange,\n    controlledProps = _objectWithoutProperties(_useUncontrolled, _excluded);\n  var getValues = function getValues() {\n    return value == null ? [] : [].concat(value);\n  };\n  var handleToggle = function handleToggle(inputVal, event) {\n    if (!onChange) {\n      return;\n    }\n    var values = getValues();\n    var isActive = values.indexOf(inputVal) !== -1;\n    if (type === 'radio') {\n      if (!isActive && onChange) onChange(inputVal, event);\n      return;\n    }\n    if (isActive) {\n      onChange(values.filter(function (n) {\n        return n !== inputVal;\n      }), event);\n    } else {\n      onChange([].concat(_toConsumableArray(values), [inputVal]), event);\n    }\n  };\n  !(type !== 'radio' || !!name) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'A `name` is required to group the toggle buttons when the `type` ' + 'is set to \"radio\"') : invariant(false) : void 0;\n  return /*#__PURE__*/_jsx(ButtonGroup, _objectSpread(_objectSpread({}, controlledProps), {}, {\n    ref: ref,\n    children: map(children, function (child) {\n      var values = getValues();\n      var _child$props = child.props,\n        childVal = _child$props.value,\n        childOnChange = _child$props.onChange;\n      var handler = function handler(e) {\n        return handleToggle(childVal, e);\n      };\n      return /*#__PURE__*/React.cloneElement(child, {\n        type: type,\n        name: child.name || name,\n        checked: values.indexOf(childVal) !== -1,\n        onChange: chainFunction(childOnChange, handler)\n      });\n    })\n  }));\n});\nToggleButtonGroup.defaultProps = defaultProps;\nexport default Object.assign(ToggleButtonGroup, {\n  Button: ToggleButton\n});","map":{"version":3,"names":["React","invariant","useUncontrolled","chainFunction","map","ButtonGroup","ToggleButton","jsx","_jsx","defaultProps","type","vertical","ToggleButtonGroup","forwardRef","props","ref","value","children","name","onChange","controlledProps","getValues","concat","handleToggle","inputVal","event","values","isActive","indexOf","filter","n","process","env","NODE_ENV","child","childVal","childOnChange","handler","e","cloneElement","checked","Object","assign","Button"],"sources":["/Users/taykim/Desktop/cs98/cs98_fall_demo/node_modules/react-bootstrap/esm/ToggleButtonGroup.js"],"sourcesContent":["import * as React from 'react';\nimport invariant from 'invariant';\nimport { useUncontrolled } from 'uncontrollable';\nimport chainFunction from './createChainedFunction';\nimport { map } from './ElementChildren';\nimport ButtonGroup from './ButtonGroup';\nimport ToggleButton from './ToggleButton';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  type: 'radio',\n  vertical: false\n};\nconst ToggleButtonGroup = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    children,\n    type,\n    name,\n    value,\n    onChange,\n    ...controlledProps\n  } = useUncontrolled(props, {\n    value: 'onChange'\n  });\n\n  const getValues = () => value == null ? [] : [].concat(value);\n\n  const handleToggle = (inputVal, event) => {\n    if (!onChange) {\n      return;\n    }\n\n    const values = getValues();\n    const isActive = values.indexOf(inputVal) !== -1;\n\n    if (type === 'radio') {\n      if (!isActive && onChange) onChange(inputVal, event);\n      return;\n    }\n\n    if (isActive) {\n      onChange(values.filter(n => n !== inputVal), event);\n    } else {\n      onChange([...values, inputVal], event);\n    }\n  };\n\n  !(type !== 'radio' || !!name) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'A `name` is required to group the toggle buttons when the `type` ' + 'is set to \"radio\"') : invariant(false) : void 0;\n  return /*#__PURE__*/_jsx(ButtonGroup, { ...controlledProps,\n    ref: ref,\n    children: map(children, child => {\n      const values = getValues();\n      const {\n        value: childVal,\n        onChange: childOnChange\n      } = child.props;\n\n      const handler = e => handleToggle(childVal, e);\n\n      return /*#__PURE__*/React.cloneElement(child, {\n        type,\n        name: child.name || name,\n        checked: values.indexOf(childVal) !== -1,\n        onChange: chainFunction(childOnChange, handler)\n      });\n    })\n  });\n});\nToggleButtonGroup.defaultProps = defaultProps;\nexport default Object.assign(ToggleButtonGroup, {\n  Button: ToggleButton\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}