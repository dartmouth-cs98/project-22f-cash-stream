{"ast":null,"code":"\"use strict\";\n\nvar _taggedTemplateLiteral = require(\"/Users/taykim/Desktop/cs98/cs98_fall_demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/taggedTemplateLiteral.js\").default;\nvar _templateObject;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar codegen_1 = require(\"../../compile/codegen\");\nvar util_1 = require(\"../../compile/util\");\nvar error = {\n  message: \"property name must be valid\",\n  params: function params(_ref) {\n    var _params = _ref.params;\n    return (0, codegen_1._)(_templateObject || (_templateObject = _taggedTemplateLiteral([\"{propertyName: \", \"}\"])), _params.propertyName);\n  }\n};\nvar def = {\n  keyword: \"propertyNames\",\n  type: \"object\",\n  schemaType: [\"object\", \"boolean\"],\n  error: error,\n  code: function code(cxt) {\n    var gen = cxt.gen,\n      schema = cxt.schema,\n      data = cxt.data,\n      it = cxt.it;\n    if ((0, util_1.alwaysValidSchema)(it, schema)) return;\n    var valid = gen.name(\"valid\");\n    gen.forIn(\"key\", data, function (key) {\n      cxt.setParams({\n        propertyName: key\n      });\n      cxt.subschema({\n        keyword: \"propertyNames\",\n        data: key,\n        dataTypes: [\"string\"],\n        propertyName: key,\n        compositeRule: true\n      }, valid);\n      gen.if((0, codegen_1.not)(valid), function () {\n        cxt.error(true);\n        if (!it.allErrors) gen.break();\n      });\n    });\n    cxt.ok(valid);\n  }\n};\nexports.default = def;","map":{"version":3,"sources":["../../../lib/vocabularies/applicator/propertyNames.ts"],"names":[],"mappings":";;;;;;;AAOA,IAAA,SAAA,GAAA,OAAA,CAAA,uBAAA,CAAA;AACA,IAAA,MAAA,GAAA,OAAA,CAAA,oBAAA,CAAA;AAIA,IAAM,KAAK,GAA2B;EACpC,OAAO,EAAE,6BAA6B;EACtC,MAAM,EAAE;IAAA,IAAE,OAAM,QAAN,MAAM;IAAA,QAAM,CAAA,EAAA,SAAA,CAAA,CAAC,2FAAkB,OAAM,CAAC,YAAY;EAAA;CAC7D;AAED,IAAM,GAAG,GAA0B;EACjC,OAAO,EAAE,eAAe;EACxB,IAAI,EAAE,QAAQ;EACd,UAAU,EAAE,CAAC,QAAQ,EAAE,SAAS,CAAC;EACjC,KAAK,EAAL,KAAK;EACL,IAAI,gBAAC,GAAe,EAAA;IAClB,IAAO,GAAG,GAAsB,GAAG,CAA5B,GAAG;MAAE,MAAM,GAAc,GAAG,CAAvB,MAAM;MAAE,IAAI,GAAQ,GAAG,CAAf,IAAI;MAAE,EAAE,GAAI,GAAG,CAAT,EAAE;IAC5B,IAAI,CAAA,CAAA,EAAA,MAAA,CAAA,iBAAiB,EAAC,EAAE,EAAE,MAAM,CAAC,EAAE;IACnC,IAAM,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC;IAE/B,GAAG,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,EAAE,UAAC,GAAG,EAAI;MAC7B,GAAG,CAAC,SAAS,CAAC;QAAC,YAAY,EAAE;MAAG,CAAC,CAAC;MAClC,GAAG,CAAC,SAAS,CACX;QACE,OAAO,EAAE,eAAe;QACxB,IAAI,EAAE,GAAG;QACT,SAAS,EAAE,CAAC,QAAQ,CAAC;QACrB,YAAY,EAAE,GAAG;QACjB,aAAa,EAAE;OAChB,EACD,KAAK,CACN;MACD,GAAG,CAAC,EAAE,CAAC,CAAA,CAAA,EAAA,SAAA,CAAA,GAAG,EAAC,KAAK,CAAC,EAAE,YAAK;QACtB,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC;QACf,IAAI,CAAC,EAAE,CAAC,SAAS,EAAE,GAAG,CAAC,KAAK,EAAE;MAChC,CAAC,CAAC;IACJ,CAAC,CAAC;IAEF,GAAG,CAAC,EAAE,CAAC,KAAK,CAAC;EACf;CACD;AAED,OAAA,CAAA,OAAA,GAAe,GAAG","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst error = {\n    message: \"property name must be valid\",\n    params: ({ params }) => (0, codegen_1._) `{propertyName: ${params.propertyName}}`,\n};\nconst def = {\n    keyword: \"propertyNames\",\n    type: \"object\",\n    schemaType: [\"object\", \"boolean\"],\n    error,\n    code(cxt) {\n        const { gen, schema, data, it } = cxt;\n        if ((0, util_1.alwaysValidSchema)(it, schema))\n            return;\n        const valid = gen.name(\"valid\");\n        gen.forIn(\"key\", data, (key) => {\n            cxt.setParams({ propertyName: key });\n            cxt.subschema({\n                keyword: \"propertyNames\",\n                data: key,\n                dataTypes: [\"string\"],\n                propertyName: key,\n                compositeRule: true,\n            }, valid);\n            gen.if((0, codegen_1.not)(valid), () => {\n                cxt.error(true);\n                if (!it.allErrors)\n                    gen.break();\n            });\n        });\n        cxt.ok(valid);\n    },\n};\nexports.default = def;\n//# sourceMappingURL=propertyNames.js.map"]},"metadata":{},"sourceType":"script"}