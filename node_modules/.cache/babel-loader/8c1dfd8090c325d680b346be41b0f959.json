{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function sent() {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n          case 7:\n            op = _.ops.pop();\n            _.trys.pop();\n            continue;\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n              _.ops.push(op);\n              break;\n            }\n            if (t[2]) _.ops.pop();\n            _.trys.pop();\n            continue;\n        }\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.gql = exports.batchRequests = exports.request = exports.rawRequest = exports.GraphQLClient = exports.ClientError = void 0;\nvar cross_fetch_1 = __importStar(require(\"cross-fetch\")),\n  CrossFetch = cross_fetch_1;\nvar printer_1 = require(\"graphql/language/printer\");\nvar createRequestBody_1 = __importDefault(require(\"./createRequestBody\"));\nvar types_1 = require(\"./types\");\nObject.defineProperty(exports, \"ClientError\", {\n  enumerable: true,\n  get: function get() {\n    return types_1.ClientError;\n  }\n});\n/**\n * Convert the given headers configuration into a plain object.\n */\nvar resolveHeaders = function resolveHeaders(headers) {\n  var oHeaders = {};\n  if (headers) {\n    if (typeof Headers !== 'undefined' && headers instanceof Headers || headers instanceof CrossFetch.Headers) {\n      oHeaders = HeadersInstanceToPlainObject(headers);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function (_a) {\n        var name = _a[0],\n          value = _a[1];\n        oHeaders[name] = value;\n      });\n    } else {\n      oHeaders = headers;\n    }\n  }\n  return oHeaders;\n};\n/**\n * Clean a GraphQL document to send it via a GET query\n *\n * @param {string} str GraphQL query\n * @returns {string} Cleaned query\n */\nvar queryCleanner = function queryCleanner(str) {\n  return str.replace(/([\\s,]|#[^\\n\\r]+)+/g, ' ').trim();\n};\n/**\n * Create query string for GraphQL request\n *\n * @param {object} param0 -\n *\n * @param {string|string[]} param0.query the GraphQL document or array of document if it's a batch request\n * @param {string|undefined} param0.operationName the GraphQL operation name\n * @param {any|any[]} param0.variables the GraphQL variables to use\n */\nvar buildGetQueryParams = function buildGetQueryParams(_a) {\n  var query = _a.query,\n    variables = _a.variables,\n    operationName = _a.operationName;\n  if (!Array.isArray(query)) {\n    var search = [\"query=\" + encodeURIComponent(queryCleanner(query))];\n    if (variables) {\n      search.push(\"variables=\" + encodeURIComponent(JSON.stringify(variables)));\n    }\n    if (operationName) {\n      search.push(\"operationName=\" + encodeURIComponent(operationName));\n    }\n    return search.join('&');\n  }\n  if (typeof variables !== 'undefined' && !Array.isArray(variables)) {\n    throw new Error('Cannot create query with given variable type, array expected');\n  }\n  // Batch support\n  var payload = query.reduce(function (accu, currentQuery, index) {\n    accu.push({\n      query: queryCleanner(currentQuery),\n      variables: variables ? JSON.stringify(variables[index]) : undefined\n    });\n    return accu;\n  }, []);\n  return \"query=\" + encodeURIComponent(JSON.stringify(payload));\n};\n/**\n * Fetch data using POST method\n */\nvar post = function post(_a) {\n  var url = _a.url,\n    query = _a.query,\n    variables = _a.variables,\n    operationName = _a.operationName,\n    headers = _a.headers,\n    fetch = _a.fetch,\n    fetchOptions = _a.fetchOptions;\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body;\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          body = createRequestBody_1.default(query, variables, operationName);\n          return [4 /*yield*/, fetch(url, __assign({\n            method: 'POST',\n            headers: __assign(__assign({}, typeof body === 'string' ? {\n              'Content-Type': 'application/json'\n            } : {}), headers),\n            body: body\n          }, fetchOptions))];\n        case 1:\n          return [2 /*return*/, _b.sent()];\n      }\n    });\n  });\n};\n/**\n * Fetch data using GET method\n */\nvar get = function get(_a) {\n  var url = _a.url,\n    query = _a.query,\n    variables = _a.variables,\n    operationName = _a.operationName,\n    headers = _a.headers,\n    fetch = _a.fetch,\n    fetchOptions = _a.fetchOptions;\n  return __awaiter(void 0, void 0, void 0, function () {\n    var queryParams;\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          queryParams = buildGetQueryParams({\n            query: query,\n            variables: variables,\n            operationName: operationName\n          });\n          return [4 /*yield*/, fetch(url + \"?\" + queryParams, __assign({\n            method: 'GET',\n            headers: headers\n          }, fetchOptions))];\n        case 1:\n          return [2 /*return*/, _b.sent()];\n      }\n    });\n  });\n};\n/**\n * todo\n */\nvar GraphQLClient = /** @class */function () {\n  function GraphQLClient(url, options) {\n    this.url = url;\n    this.options = options || {};\n  }\n  GraphQLClient.prototype.rawRequest = function (query, variables, requestHeaders) {\n    var _a = this.options,\n      headers = _a.headers,\n      _b = _a.fetch,\n      fetch = _b === void 0 ? cross_fetch_1.default : _b,\n      _c = _a.method,\n      method = _c === void 0 ? 'POST' : _c,\n      fetchOptions = __rest(_a, [\"headers\", \"fetch\", \"method\"]);\n    var url = this.url;\n    return makeRequest({\n      url: url,\n      query: query,\n      variables: variables,\n      headers: __assign(__assign({}, resolveHeaders(headers)), resolveHeaders(requestHeaders)),\n      operationName: undefined,\n      fetch: fetch,\n      method: method,\n      fetchOptions: fetchOptions\n    });\n  };\n  /**\n   * Send a GraphQL document to the server.\n   */\n  GraphQLClient.prototype.request = function (document, variables, requestHeaders) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, headers, _b, fetch, _c, method, fetchOptions, url, _d, query, operationName, data;\n      return __generator(this, function (_e) {\n        switch (_e.label) {\n          case 0:\n            _a = this.options, headers = _a.headers, _b = _a.fetch, fetch = _b === void 0 ? cross_fetch_1.default : _b, _c = _a.method, method = _c === void 0 ? 'POST' : _c, fetchOptions = __rest(_a, [\"headers\", \"fetch\", \"method\"]);\n            url = this.url;\n            _d = resolveRequestDocument(document), query = _d.query, operationName = _d.operationName;\n            return [4 /*yield*/, makeRequest({\n              url: url,\n              query: query,\n              variables: variables,\n              headers: __assign(__assign({}, resolveHeaders(headers)), resolveHeaders(requestHeaders)),\n              operationName: operationName,\n              fetch: fetch,\n              method: method,\n              fetchOptions: fetchOptions\n            })];\n          case 1:\n            data = _e.sent().data;\n            return [2 /*return*/, data];\n        }\n      });\n    });\n  };\n  /**\n   * Send a GraphQL document to the server.\n   */\n  GraphQLClient.prototype.batchRequests = function (documents, requestHeaders) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, headers, _b, fetch, _c, method, fetchOptions, url, queries, variables, data;\n      return __generator(this, function (_d) {\n        switch (_d.label) {\n          case 0:\n            _a = this.options, headers = _a.headers, _b = _a.fetch, fetch = _b === void 0 ? cross_fetch_1.default : _b, _c = _a.method, method = _c === void 0 ? 'POST' : _c, fetchOptions = __rest(_a, [\"headers\", \"fetch\", \"method\"]);\n            url = this.url;\n            queries = documents.map(function (_a) {\n              var document = _a.document;\n              return resolveRequestDocument(document).query;\n            });\n            variables = documents.map(function (_a) {\n              var variables = _a.variables;\n              return variables;\n            });\n            return [4 /*yield*/, makeRequest({\n              url: url,\n              query: queries,\n              variables: variables,\n              headers: __assign(__assign({}, resolveHeaders(headers)), resolveHeaders(requestHeaders)),\n              operationName: undefined,\n              fetch: fetch,\n              method: method,\n              fetchOptions: fetchOptions\n            })];\n          case 1:\n            data = _d.sent().data;\n            return [2 /*return*/, data];\n        }\n      });\n    });\n  };\n  GraphQLClient.prototype.setHeaders = function (headers) {\n    this.options.headers = headers;\n    return this;\n  };\n  /**\n   * Attach a header to the client. All subsequent requests will have this header.\n   */\n  GraphQLClient.prototype.setHeader = function (key, value) {\n    var _a;\n    var headers = this.options.headers;\n    if (headers) {\n      // todo what if headers is in nested array form... ?\n      //@ts-ignore\n      headers[key] = value;\n    } else {\n      this.options.headers = (_a = {}, _a[key] = value, _a);\n    }\n    return this;\n  };\n  /**\n   * Change the client endpoint. All subsequent requests will send to this endpoint.\n   */\n  GraphQLClient.prototype.setEndpoint = function (value) {\n    this.url = value;\n    return this;\n  };\n  return GraphQLClient;\n}();\nexports.GraphQLClient = GraphQLClient;\nfunction makeRequest(_a) {\n  var url = _a.url,\n    query = _a.query,\n    variables = _a.variables,\n    headers = _a.headers,\n    operationName = _a.operationName,\n    fetch = _a.fetch,\n    _b = _a.method,\n    method = _b === void 0 ? 'POST' : _b,\n    fetchOptions = _a.fetchOptions;\n  return __awaiter(this, void 0, void 0, function () {\n    var fetcher, isBathchingQuery, response, result, successfullyReceivedData, headers_1, status_1, errorResult;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          fetcher = method.toUpperCase() === 'POST' ? post : get;\n          isBathchingQuery = Array.isArray(query);\n          return [4 /*yield*/, fetcher({\n            url: url,\n            query: query,\n            variables: variables,\n            operationName: operationName,\n            headers: headers,\n            fetch: fetch,\n            fetchOptions: fetchOptions\n          })];\n        case 1:\n          response = _c.sent();\n          return [4 /*yield*/, getResult(response)];\n        case 2:\n          result = _c.sent();\n          successfullyReceivedData = isBathchingQuery && Array.isArray(result) ? !result.some(function (_a) {\n            var data = _a.data;\n            return !data;\n          }) : !!result.data;\n          if (response.ok && !result.errors && successfullyReceivedData) {\n            headers_1 = response.headers, status_1 = response.status;\n            return [2 /*return*/, __assign(__assign({}, isBathchingQuery ? {\n              data: result\n            } : result), {\n              headers: headers_1,\n              status: status_1\n            })];\n          } else {\n            errorResult = typeof result === 'string' ? {\n              error: result\n            } : result;\n            throw new types_1.ClientError(__assign(__assign({}, errorResult), {\n              status: response.status,\n              headers: response.headers\n            }), {\n              query: query,\n              variables: variables\n            });\n          }\n          return [2 /*return*/];\n      }\n    });\n  });\n}\n/**\n * todo\n */\nfunction rawRequest(url, query, variables, requestHeaders) {\n  return __awaiter(this, void 0, void 0, function () {\n    var client;\n    return __generator(this, function (_a) {\n      client = new GraphQLClient(url);\n      return [2 /*return*/, client.rawRequest(query, variables, requestHeaders)];\n    });\n  });\n}\nexports.rawRequest = rawRequest;\n/**\n * Send a GraphQL Document to the GraphQL server for exectuion.\n *\n * @example\n *\n * ```ts\n * // You can pass a raw string\n *\n * await request('https://foo.bar/graphql', `\n *   {\n *     query {\n *       users\n *     }\n *   }\n * `)\n *\n * // You can also pass a GraphQL DocumentNode. Convenient if you\n * // are using graphql-tag package.\n *\n * import gql from 'graphql-tag'\n *\n * await request('https://foo.bar/graphql', gql`...`)\n *\n * // If you don't actually care about using DocumentNode but just\n * // want the tooling support for gql template tag like IDE syntax\n * // coloring and prettier autoformat then note you can use the\n * // passthrough gql tag shipped with graphql-request to save a bit\n * // of performance and not have to install another dep into your project.\n *\n * import { gql } from 'graphql-request'\n *\n * await request('https://foo.bar/graphql', gql`...`)\n * ```\n */\nfunction request(url, document, variables, requestHeaders) {\n  return __awaiter(this, void 0, void 0, function () {\n    var client;\n    return __generator(this, function (_a) {\n      client = new GraphQLClient(url);\n      return [2 /*return*/, client.request(document, variables, requestHeaders)];\n    });\n  });\n}\nexports.request = request;\n/**\n * Send a batch of GraphQL Document to the GraphQL server for exectuion.\n *\n * @example\n *\n * ```ts\n * // You can pass a raw string\n *\n * await batchRequests('https://foo.bar/graphql', [\n * {\n *  query: `\n *   {\n *     query {\n *       users\n *     }\n *   }`\n * },\n * {\n *   query: `\n *   {\n *     query {\n *       users\n *     }\n *   }`\n * }])\n *\n * // You can also pass a GraphQL DocumentNode as query. Convenient if you\n * // are using graphql-tag package.\n *\n * import gql from 'graphql-tag'\n *\n * await batchRequests('https://foo.bar/graphql', [{ query: gql`...` }])\n * ```\n */\nfunction batchRequests(url, documents, requestHeaders) {\n  return __awaiter(this, void 0, void 0, function () {\n    var client;\n    return __generator(this, function (_a) {\n      client = new GraphQLClient(url);\n      return [2 /*return*/, client.batchRequests(documents, requestHeaders)];\n    });\n  });\n}\nexports.batchRequests = batchRequests;\nexports.default = request;\n/**\n * todo\n */\nfunction getResult(response) {\n  var contentType = response.headers.get('Content-Type');\n  if (contentType && contentType.startsWith('application/json')) {\n    return response.json();\n  } else {\n    return response.text();\n  }\n}\n/**\n * helpers\n */\nfunction resolveRequestDocument(document) {\n  var _a;\n  if (typeof document === 'string') return {\n    query: document\n  };\n  var operationName = undefined;\n  var operationDefinitions = document.definitions.filter(function (definition) {\n    return definition.kind === 'OperationDefinition';\n  });\n  if (operationDefinitions.length === 1) {\n    operationName = (_a = operationDefinitions[0].name) === null || _a === void 0 ? void 0 : _a.value;\n  }\n  return {\n    query: printer_1.print(document),\n    operationName: operationName\n  };\n}\n/**\n * Convenience passthrough template tag to get the benefits of tooling for the gql template tag. This does not actually parse the input into a GraphQL DocumentNode like graphql-tag package does. It just returns the string with any variables given interpolated. Can save you a bit of performance and having to install another package.\n *\n * @example\n *\n * import { gql } from 'graphql-request'\n *\n * await request('https://foo.bar/graphql', gql`...`)\n *\n * @remarks\n *\n * Several tools in the Node GraphQL ecosystem are hardcoded to specially treat any template tag named \"gql\". For example see this prettier issue: https://github.com/prettier/prettier/issues/4360. Using this template tag has no runtime effect beyond variable interpolation.\n */\nfunction gql(chunks) {\n  var variables = [];\n  for (var _i = 1; _i < arguments.length; _i++) {\n    variables[_i - 1] = arguments[_i];\n  }\n  return chunks.reduce(function (accumulator, chunk, index) {\n    return \"\" + accumulator + chunk + (index in variables ? variables[index] : '');\n  }, '');\n}\nexports.gql = gql;\n/**\n * Convert Headers instance into regular object\n */\nfunction HeadersInstanceToPlainObject(headers) {\n  var o = {};\n  headers.forEach(function (v, k) {\n    o[k] = v;\n  });\n  return o;\n}","map":{"version":3,"sources":["../src/index.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.gql = exports.batchRequests = exports.request = exports.rawRequest = exports.GraphQLClient = exports.ClientError = void 0;\nvar cross_fetch_1 = __importStar(require(\"cross-fetch\")), CrossFetch = cross_fetch_1;\nvar printer_1 = require(\"graphql/language/printer\");\nvar createRequestBody_1 = __importDefault(require(\"./createRequestBody\"));\nvar types_1 = require(\"./types\");\nObject.defineProperty(exports, \"ClientError\", { enumerable: true, get: function () { return types_1.ClientError; } });\n/**\n * Convert the given headers configuration into a plain object.\n */\nvar resolveHeaders = function (headers) {\n    var oHeaders = {};\n    if (headers) {\n        if ((typeof Headers !== 'undefined' && headers instanceof Headers) ||\n            headers instanceof CrossFetch.Headers) {\n            oHeaders = HeadersInstanceToPlainObject(headers);\n        }\n        else if (Array.isArray(headers)) {\n            headers.forEach(function (_a) {\n                var name = _a[0], value = _a[1];\n                oHeaders[name] = value;\n            });\n        }\n        else {\n            oHeaders = headers;\n        }\n    }\n    return oHeaders;\n};\n/**\n * Clean a GraphQL document to send it via a GET query\n *\n * @param {string} str GraphQL query\n * @returns {string} Cleaned query\n */\nvar queryCleanner = function (str) { return str.replace(/([\\s,]|#[^\\n\\r]+)+/g, ' ').trim(); };\n/**\n * Create query string for GraphQL request\n *\n * @param {object} param0 -\n *\n * @param {string|string[]} param0.query the GraphQL document or array of document if it's a batch request\n * @param {string|undefined} param0.operationName the GraphQL operation name\n * @param {any|any[]} param0.variables the GraphQL variables to use\n */\nvar buildGetQueryParams = function (_a) {\n    var query = _a.query, variables = _a.variables, operationName = _a.operationName;\n    if (!Array.isArray(query)) {\n        var search = [\"query=\" + encodeURIComponent(queryCleanner(query))];\n        if (variables) {\n            search.push(\"variables=\" + encodeURIComponent(JSON.stringify(variables)));\n        }\n        if (operationName) {\n            search.push(\"operationName=\" + encodeURIComponent(operationName));\n        }\n        return search.join('&');\n    }\n    if (typeof variables !== 'undefined' && !Array.isArray(variables)) {\n        throw new Error('Cannot create query with given variable type, array expected');\n    }\n    // Batch support\n    var payload = query.reduce(function (accu, currentQuery, index) {\n        accu.push({\n            query: queryCleanner(currentQuery),\n            variables: variables ? JSON.stringify(variables[index]) : undefined,\n        });\n        return accu;\n    }, []);\n    return \"query=\" + encodeURIComponent(JSON.stringify(payload));\n};\n/**\n * Fetch data using POST method\n */\nvar post = function (_a) {\n    var url = _a.url, query = _a.query, variables = _a.variables, operationName = _a.operationName, headers = _a.headers, fetch = _a.fetch, fetchOptions = _a.fetchOptions;\n    return __awaiter(void 0, void 0, void 0, function () {\n        var body;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    body = createRequestBody_1.default(query, variables, operationName);\n                    return [4 /*yield*/, fetch(url, __assign({ method: 'POST', headers: __assign(__assign({}, (typeof body === 'string' ? { 'Content-Type': 'application/json' } : {})), headers), body: body }, fetchOptions))];\n                case 1: return [2 /*return*/, _b.sent()];\n            }\n        });\n    });\n};\n/**\n * Fetch data using GET method\n */\nvar get = function (_a) {\n    var url = _a.url, query = _a.query, variables = _a.variables, operationName = _a.operationName, headers = _a.headers, fetch = _a.fetch, fetchOptions = _a.fetchOptions;\n    return __awaiter(void 0, void 0, void 0, function () {\n        var queryParams;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    queryParams = buildGetQueryParams({\n                        query: query,\n                        variables: variables,\n                        operationName: operationName,\n                    });\n                    return [4 /*yield*/, fetch(url + \"?\" + queryParams, __assign({ method: 'GET', headers: headers }, fetchOptions))];\n                case 1: return [2 /*return*/, _b.sent()];\n            }\n        });\n    });\n};\n/**\n * todo\n */\nvar GraphQLClient = /** @class */ (function () {\n    function GraphQLClient(url, options) {\n        this.url = url;\n        this.options = options || {};\n    }\n    GraphQLClient.prototype.rawRequest = function (query, variables, requestHeaders) {\n        var _a = this.options, headers = _a.headers, _b = _a.fetch, fetch = _b === void 0 ? cross_fetch_1.default : _b, _c = _a.method, method = _c === void 0 ? 'POST' : _c, fetchOptions = __rest(_a, [\"headers\", \"fetch\", \"method\"]);\n        var url = this.url;\n        return makeRequest({\n            url: url,\n            query: query,\n            variables: variables,\n            headers: __assign(__assign({}, resolveHeaders(headers)), resolveHeaders(requestHeaders)),\n            operationName: undefined,\n            fetch: fetch,\n            method: method,\n            fetchOptions: fetchOptions,\n        });\n    };\n    /**\n     * Send a GraphQL document to the server.\n     */\n    GraphQLClient.prototype.request = function (document, variables, requestHeaders) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, headers, _b, fetch, _c, method, fetchOptions, url, _d, query, operationName, data;\n            return __generator(this, function (_e) {\n                switch (_e.label) {\n                    case 0:\n                        _a = this.options, headers = _a.headers, _b = _a.fetch, fetch = _b === void 0 ? cross_fetch_1.default : _b, _c = _a.method, method = _c === void 0 ? 'POST' : _c, fetchOptions = __rest(_a, [\"headers\", \"fetch\", \"method\"]);\n                        url = this.url;\n                        _d = resolveRequestDocument(document), query = _d.query, operationName = _d.operationName;\n                        return [4 /*yield*/, makeRequest({\n                                url: url,\n                                query: query,\n                                variables: variables,\n                                headers: __assign(__assign({}, resolveHeaders(headers)), resolveHeaders(requestHeaders)),\n                                operationName: operationName,\n                                fetch: fetch,\n                                method: method,\n                                fetchOptions: fetchOptions,\n                            })];\n                    case 1:\n                        data = (_e.sent()).data;\n                        return [2 /*return*/, data];\n                }\n            });\n        });\n    };\n    /**\n     * Send a GraphQL document to the server.\n     */\n    GraphQLClient.prototype.batchRequests = function (documents, requestHeaders) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, headers, _b, fetch, _c, method, fetchOptions, url, queries, variables, data;\n            return __generator(this, function (_d) {\n                switch (_d.label) {\n                    case 0:\n                        _a = this.options, headers = _a.headers, _b = _a.fetch, fetch = _b === void 0 ? cross_fetch_1.default : _b, _c = _a.method, method = _c === void 0 ? 'POST' : _c, fetchOptions = __rest(_a, [\"headers\", \"fetch\", \"method\"]);\n                        url = this.url;\n                        queries = documents.map(function (_a) {\n                            var document = _a.document;\n                            return resolveRequestDocument(document).query;\n                        });\n                        variables = documents.map(function (_a) {\n                            var variables = _a.variables;\n                            return variables;\n                        });\n                        return [4 /*yield*/, makeRequest({\n                                url: url,\n                                query: queries,\n                                variables: variables,\n                                headers: __assign(__assign({}, resolveHeaders(headers)), resolveHeaders(requestHeaders)),\n                                operationName: undefined,\n                                fetch: fetch,\n                                method: method,\n                                fetchOptions: fetchOptions,\n                            })];\n                    case 1:\n                        data = (_d.sent()).data;\n                        return [2 /*return*/, data];\n                }\n            });\n        });\n    };\n    GraphQLClient.prototype.setHeaders = function (headers) {\n        this.options.headers = headers;\n        return this;\n    };\n    /**\n     * Attach a header to the client. All subsequent requests will have this header.\n     */\n    GraphQLClient.prototype.setHeader = function (key, value) {\n        var _a;\n        var headers = this.options.headers;\n        if (headers) {\n            // todo what if headers is in nested array form... ?\n            //@ts-ignore\n            headers[key] = value;\n        }\n        else {\n            this.options.headers = (_a = {}, _a[key] = value, _a);\n        }\n        return this;\n    };\n    /**\n     * Change the client endpoint. All subsequent requests will send to this endpoint.\n     */\n    GraphQLClient.prototype.setEndpoint = function (value) {\n        this.url = value;\n        return this;\n    };\n    return GraphQLClient;\n}());\nexports.GraphQLClient = GraphQLClient;\nfunction makeRequest(_a) {\n    var url = _a.url, query = _a.query, variables = _a.variables, headers = _a.headers, operationName = _a.operationName, fetch = _a.fetch, _b = _a.method, method = _b === void 0 ? 'POST' : _b, fetchOptions = _a.fetchOptions;\n    return __awaiter(this, void 0, void 0, function () {\n        var fetcher, isBathchingQuery, response, result, successfullyReceivedData, headers_1, status_1, errorResult;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    fetcher = method.toUpperCase() === 'POST' ? post : get;\n                    isBathchingQuery = Array.isArray(query);\n                    return [4 /*yield*/, fetcher({\n                            url: url,\n                            query: query,\n                            variables: variables,\n                            operationName: operationName,\n                            headers: headers,\n                            fetch: fetch,\n                            fetchOptions: fetchOptions,\n                        })];\n                case 1:\n                    response = _c.sent();\n                    return [4 /*yield*/, getResult(response)];\n                case 2:\n                    result = _c.sent();\n                    successfullyReceivedData = isBathchingQuery && Array.isArray(result) ? !result.some(function (_a) {\n                        var data = _a.data;\n                        return !data;\n                    }) : !!result.data;\n                    if (response.ok && !result.errors && successfullyReceivedData) {\n                        headers_1 = response.headers, status_1 = response.status;\n                        return [2 /*return*/, __assign(__assign({}, (isBathchingQuery ? { data: result } : result)), { headers: headers_1, status: status_1 })];\n                    }\n                    else {\n                        errorResult = typeof result === 'string' ? { error: result } : result;\n                        throw new types_1.ClientError(__assign(__assign({}, errorResult), { status: response.status, headers: response.headers }), { query: query, variables: variables });\n                    }\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\n/**\n * todo\n */\nfunction rawRequest(url, query, variables, requestHeaders) {\n    return __awaiter(this, void 0, void 0, function () {\n        var client;\n        return __generator(this, function (_a) {\n            client = new GraphQLClient(url);\n            return [2 /*return*/, client.rawRequest(query, variables, requestHeaders)];\n        });\n    });\n}\nexports.rawRequest = rawRequest;\n/**\n * Send a GraphQL Document to the GraphQL server for exectuion.\n *\n * @example\n *\n * ```ts\n * // You can pass a raw string\n *\n * await request('https://foo.bar/graphql', `\n *   {\n *     query {\n *       users\n *     }\n *   }\n * `)\n *\n * // You can also pass a GraphQL DocumentNode. Convenient if you\n * // are using graphql-tag package.\n *\n * import gql from 'graphql-tag'\n *\n * await request('https://foo.bar/graphql', gql`...`)\n *\n * // If you don't actually care about using DocumentNode but just\n * // want the tooling support for gql template tag like IDE syntax\n * // coloring and prettier autoformat then note you can use the\n * // passthrough gql tag shipped with graphql-request to save a bit\n * // of performance and not have to install another dep into your project.\n *\n * import { gql } from 'graphql-request'\n *\n * await request('https://foo.bar/graphql', gql`...`)\n * ```\n */\nfunction request(url, document, variables, requestHeaders) {\n    return __awaiter(this, void 0, void 0, function () {\n        var client;\n        return __generator(this, function (_a) {\n            client = new GraphQLClient(url);\n            return [2 /*return*/, client.request(document, variables, requestHeaders)];\n        });\n    });\n}\nexports.request = request;\n/**\n * Send a batch of GraphQL Document to the GraphQL server for exectuion.\n *\n * @example\n *\n * ```ts\n * // You can pass a raw string\n *\n * await batchRequests('https://foo.bar/graphql', [\n * {\n *  query: `\n *   {\n *     query {\n *       users\n *     }\n *   }`\n * },\n * {\n *   query: `\n *   {\n *     query {\n *       users\n *     }\n *   }`\n * }])\n *\n * // You can also pass a GraphQL DocumentNode as query. Convenient if you\n * // are using graphql-tag package.\n *\n * import gql from 'graphql-tag'\n *\n * await batchRequests('https://foo.bar/graphql', [{ query: gql`...` }])\n * ```\n */\nfunction batchRequests(url, documents, requestHeaders) {\n    return __awaiter(this, void 0, void 0, function () {\n        var client;\n        return __generator(this, function (_a) {\n            client = new GraphQLClient(url);\n            return [2 /*return*/, client.batchRequests(documents, requestHeaders)];\n        });\n    });\n}\nexports.batchRequests = batchRequests;\nexports.default = request;\n/**\n * todo\n */\nfunction getResult(response) {\n    var contentType = response.headers.get('Content-Type');\n    if (contentType && contentType.startsWith('application/json')) {\n        return response.json();\n    }\n    else {\n        return response.text();\n    }\n}\n/**\n * helpers\n */\nfunction resolveRequestDocument(document) {\n    var _a;\n    if (typeof document === 'string')\n        return { query: document };\n    var operationName = undefined;\n    var operationDefinitions = document.definitions.filter(function (definition) { return definition.kind === 'OperationDefinition'; });\n    if (operationDefinitions.length === 1) {\n        operationName = (_a = operationDefinitions[0].name) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    return { query: printer_1.print(document), operationName: operationName };\n}\n/**\n * Convenience passthrough template tag to get the benefits of tooling for the gql template tag. This does not actually parse the input into a GraphQL DocumentNode like graphql-tag package does. It just returns the string with any variables given interpolated. Can save you a bit of performance and having to install another package.\n *\n * @example\n *\n * import { gql } from 'graphql-request'\n *\n * await request('https://foo.bar/graphql', gql`...`)\n *\n * @remarks\n *\n * Several tools in the Node GraphQL ecosystem are hardcoded to specially treat any template tag named \"gql\". For example see this prettier issue: https://github.com/prettier/prettier/issues/4360. Using this template tag has no runtime effect beyond variable interpolation.\n */\nfunction gql(chunks) {\n    var variables = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        variables[_i - 1] = arguments[_i];\n    }\n    return chunks.reduce(function (accumulator, chunk, index) { return \"\" + accumulator + chunk + (index in variables ? variables[index] : ''); }, '');\n}\nexports.gql = gql;\n/**\n * Convert Headers instance into regular object\n */\nfunction HeadersInstanceToPlainObject(headers) {\n    var o = {};\n    headers.forEach(function (v, k) {\n        o[k] = v;\n    });\n    return o;\n}\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}