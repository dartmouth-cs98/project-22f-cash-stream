{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/Users/taykim/Desktop/cs98/cfa-createflow-metamask-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar validate_1 = require(\"../../compile/validate\");\nvar code_1 = require(\"../code\");\nvar util_1 = require(\"../../compile/util\");\nvar additionalProperties_1 = require(\"./additionalProperties\");\nvar def = {\n  keyword: \"properties\",\n  type: \"object\",\n  schemaType: \"object\",\n  code: function code(cxt) {\n    var gen = cxt.gen,\n      schema = cxt.schema,\n      parentSchema = cxt.parentSchema,\n      data = cxt.data,\n      it = cxt.it;\n    if (it.opts.removeAdditional === \"all\" && parentSchema.additionalProperties === undefined) {\n      additionalProperties_1.default.code(new validate_1.KeywordCxt(it, additionalProperties_1.default, \"additionalProperties\"));\n    }\n    var allProps = (0, code_1.allSchemaProperties)(schema);\n    var _iterator = _createForOfIteratorHelper(allProps),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var prop = _step.value;\n        it.definedProperties.add(prop);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    if (it.opts.unevaluated && allProps.length && it.props !== true) {\n      it.props = util_1.mergeEvaluated.props(gen, (0, util_1.toHash)(allProps), it.props);\n    }\n    var properties = allProps.filter(function (p) {\n      return !(0, util_1.alwaysValidSchema)(it, schema[p]);\n    });\n    if (properties.length === 0) return;\n    var valid = gen.name(\"valid\");\n    var _iterator2 = _createForOfIteratorHelper(properties),\n      _step2;\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var _prop = _step2.value;\n        if (hasDefault(_prop)) {\n          applyPropertySchema(_prop);\n        } else {\n          gen.if((0, code_1.propertyInData)(gen, data, _prop, it.opts.ownProperties));\n          applyPropertySchema(_prop);\n          if (!it.allErrors) gen.else().var(valid, true);\n          gen.endIf();\n        }\n        cxt.it.definedProperties.add(_prop);\n        cxt.ok(valid);\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n    function hasDefault(prop) {\n      return it.opts.useDefaults && !it.compositeRule && schema[prop].default !== undefined;\n    }\n    function applyPropertySchema(prop) {\n      cxt.subschema({\n        keyword: \"properties\",\n        schemaProp: prop,\n        dataProp: prop\n      }, valid);\n    }\n  }\n};\nexports.default = def;","map":{"version":3,"sources":["../../../lib/vocabularies/applicator/properties.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst validate_1 = require(\"../../compile/validate\");\nconst code_1 = require(\"../code\");\nconst util_1 = require(\"../../compile/util\");\nconst additionalProperties_1 = require(\"./additionalProperties\");\nconst def = {\n    keyword: \"properties\",\n    type: \"object\",\n    schemaType: \"object\",\n    code(cxt) {\n        const { gen, schema, parentSchema, data, it } = cxt;\n        if (it.opts.removeAdditional === \"all\" && parentSchema.additionalProperties === undefined) {\n            additionalProperties_1.default.code(new validate_1.KeywordCxt(it, additionalProperties_1.default, \"additionalProperties\"));\n        }\n        const allProps = (0, code_1.allSchemaProperties)(schema);\n        for (const prop of allProps) {\n            it.definedProperties.add(prop);\n        }\n        if (it.opts.unevaluated && allProps.length && it.props !== true) {\n            it.props = util_1.mergeEvaluated.props(gen, (0, util_1.toHash)(allProps), it.props);\n        }\n        const properties = allProps.filter((p) => !(0, util_1.alwaysValidSchema)(it, schema[p]));\n        if (properties.length === 0)\n            return;\n        const valid = gen.name(\"valid\");\n        for (const prop of properties) {\n            if (hasDefault(prop)) {\n                applyPropertySchema(prop);\n            }\n            else {\n                gen.if((0, code_1.propertyInData)(gen, data, prop, it.opts.ownProperties));\n                applyPropertySchema(prop);\n                if (!it.allErrors)\n                    gen.else().var(valid, true);\n                gen.endIf();\n            }\n            cxt.it.definedProperties.add(prop);\n            cxt.ok(valid);\n        }\n        function hasDefault(prop) {\n            return it.opts.useDefaults && !it.compositeRule && schema[prop].default !== undefined;\n        }\n        function applyPropertySchema(prop) {\n            cxt.subschema({\n                keyword: \"properties\",\n                schemaProp: prop,\n                dataProp: prop,\n            }, valid);\n        }\n    },\n};\nexports.default = def;\n//# sourceMappingURL=properties.js.map"]},"metadata":{},"sourceType":"script"}