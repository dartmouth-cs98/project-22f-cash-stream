{"ast":null,"code":"\"use strict\";\n\nvar _taggedTemplateLiteral = require(\"/Users/taykim/Desktop/cs98/project-22f-zk-vote/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/taggedTemplateLiteral.js\").default;\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8, _templateObject9, _templateObject10, _templateObject11, _templateObject12, _templateObject13, _templateObject14, _templateObject15, _templateObject16, _templateObject17;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar dataType_1 = require(\"../../compile/validate/dataType\");\nvar codegen_1 = require(\"../../compile/codegen\");\nvar util_1 = require(\"../../compile/util\");\nvar equal_1 = require(\"../../runtime/equal\");\nvar error = {\n  message: function message(_ref) {\n    var _ref$params = _ref.params,\n      i = _ref$params.i,\n      j = _ref$params.j;\n    return (0, codegen_1.str)(_templateObject || (_templateObject = _taggedTemplateLiteral([\"must NOT have duplicate items (items ## \", \" and \", \" are identical)\"])), j, i);\n  },\n  params: function params(_ref2) {\n    var _ref2$params = _ref2.params,\n      i = _ref2$params.i,\n      j = _ref2$params.j;\n    return (0, codegen_1._)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"{i: \", \", j: \", \"}\"])), i, j);\n  }\n};\nvar def = {\n  keyword: \"uniqueItems\",\n  type: \"array\",\n  schemaType: \"boolean\",\n  $data: true,\n  error: error,\n  code: function code(cxt) {\n    var gen = cxt.gen,\n      data = cxt.data,\n      $data = cxt.$data,\n      schema = cxt.schema,\n      parentSchema = cxt.parentSchema,\n      schemaCode = cxt.schemaCode,\n      it = cxt.it;\n    if (!$data && !schema) return;\n    var valid = gen.let(\"valid\");\n    var itemTypes = parentSchema.items ? (0, dataType_1.getSchemaTypes)(parentSchema.items) : [];\n    cxt.block$data(valid, validateUniqueItems, (0, codegen_1._)(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\", \" === false\"])), schemaCode));\n    cxt.ok(valid);\n    function validateUniqueItems() {\n      var i = gen.let(\"i\", (0, codegen_1._)(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\", \".length\"])), data));\n      var j = gen.let(\"j\");\n      cxt.setParams({\n        i: i,\n        j: j\n      });\n      gen.assign(valid, true);\n      gen.if((0, codegen_1._)(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\"\", \" > 1\"])), i), function () {\n        return (canOptimize() ? loopN : loopN2)(i, j);\n      });\n    }\n    function canOptimize() {\n      return itemTypes.length > 0 && !itemTypes.some(function (t) {\n        return t === \"object\" || t === \"array\";\n      });\n    }\n    function loopN(i, j) {\n      var item = gen.name(\"item\");\n      var wrongType = (0, dataType_1.checkDataTypes)(itemTypes, item, it.opts.strictNumbers, dataType_1.DataType.Wrong);\n      var indices = gen.const(\"indices\", (0, codegen_1._)(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral([\"{}\"]))));\n      gen.for((0, codegen_1._)(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral([\";\", \"--;\"])), i), function () {\n        gen.let(item, (0, codegen_1._)(_templateObject8 || (_templateObject8 = _taggedTemplateLiteral([\"\", \"[\", \"]\"])), data, i));\n        gen.if(wrongType, (0, codegen_1._)(_templateObject9 || (_templateObject9 = _taggedTemplateLiteral([\"continue\"]))));\n        if (itemTypes.length > 1) gen.if((0, codegen_1._)(_templateObject10 || (_templateObject10 = _taggedTemplateLiteral([\"typeof \", \" == \\\"string\\\"\"])), item), (0, codegen_1._)(_templateObject11 || (_templateObject11 = _taggedTemplateLiteral([\"\", \" += \\\"_\\\"\"])), item));\n        gen.if((0, codegen_1._)(_templateObject12 || (_templateObject12 = _taggedTemplateLiteral([\"typeof \", \"[\", \"] == \\\"number\\\"\"])), indices, item), function () {\n          gen.assign(j, (0, codegen_1._)(_templateObject13 || (_templateObject13 = _taggedTemplateLiteral([\"\", \"[\", \"]\"])), indices, item));\n          cxt.error();\n          gen.assign(valid, false).break();\n        }).code((0, codegen_1._)(_templateObject14 || (_templateObject14 = _taggedTemplateLiteral([\"\", \"[\", \"] = \", \"\"])), indices, item, i));\n      });\n    }\n    function loopN2(i, j) {\n      var eql = (0, util_1.useFunc)(gen, equal_1.default);\n      var outer = gen.name(\"outer\");\n      gen.label(outer).for((0, codegen_1._)(_templateObject15 || (_templateObject15 = _taggedTemplateLiteral([\";\", \"--;\"])), i), function () {\n        return gen.for((0, codegen_1._)(_templateObject16 || (_templateObject16 = _taggedTemplateLiteral([\"\", \" = \", \"; \", \"--;\"])), j, i, j), function () {\n          return gen.if((0, codegen_1._)(_templateObject17 || (_templateObject17 = _taggedTemplateLiteral([\"\", \"(\", \"[\", \"], \", \"[\", \"])\"])), eql, data, i, data, j), function () {\n            cxt.error();\n            gen.assign(valid, false).break(outer);\n          });\n        });\n      });\n    }\n  }\n};\nexports.default = def;","map":{"version":3,"sources":["../../../lib/vocabularies/validation/uniqueItems.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst dataType_1 = require(\"../../compile/validate/dataType\");\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst equal_1 = require(\"../../runtime/equal\");\nconst error = {\n    message: ({ params: { i, j } }) => (0, codegen_1.str) `must NOT have duplicate items (items ## ${j} and ${i} are identical)`,\n    params: ({ params: { i, j } }) => (0, codegen_1._) `{i: ${i}, j: ${j}}`,\n};\nconst def = {\n    keyword: \"uniqueItems\",\n    type: \"array\",\n    schemaType: \"boolean\",\n    $data: true,\n    error,\n    code(cxt) {\n        const { gen, data, $data, schema, parentSchema, schemaCode, it } = cxt;\n        if (!$data && !schema)\n            return;\n        const valid = gen.let(\"valid\");\n        const itemTypes = parentSchema.items ? (0, dataType_1.getSchemaTypes)(parentSchema.items) : [];\n        cxt.block$data(valid, validateUniqueItems, (0, codegen_1._) `${schemaCode} === false`);\n        cxt.ok(valid);\n        function validateUniqueItems() {\n            const i = gen.let(\"i\", (0, codegen_1._) `${data}.length`);\n            const j = gen.let(\"j\");\n            cxt.setParams({ i, j });\n            gen.assign(valid, true);\n            gen.if((0, codegen_1._) `${i} > 1`, () => (canOptimize() ? loopN : loopN2)(i, j));\n        }\n        function canOptimize() {\n            return itemTypes.length > 0 && !itemTypes.some((t) => t === \"object\" || t === \"array\");\n        }\n        function loopN(i, j) {\n            const item = gen.name(\"item\");\n            const wrongType = (0, dataType_1.checkDataTypes)(itemTypes, item, it.opts.strictNumbers, dataType_1.DataType.Wrong);\n            const indices = gen.const(\"indices\", (0, codegen_1._) `{}`);\n            gen.for((0, codegen_1._) `;${i}--;`, () => {\n                gen.let(item, (0, codegen_1._) `${data}[${i}]`);\n                gen.if(wrongType, (0, codegen_1._) `continue`);\n                if (itemTypes.length > 1)\n                    gen.if((0, codegen_1._) `typeof ${item} == \"string\"`, (0, codegen_1._) `${item} += \"_\"`);\n                gen\n                    .if((0, codegen_1._) `typeof ${indices}[${item}] == \"number\"`, () => {\n                    gen.assign(j, (0, codegen_1._) `${indices}[${item}]`);\n                    cxt.error();\n                    gen.assign(valid, false).break();\n                })\n                    .code((0, codegen_1._) `${indices}[${item}] = ${i}`);\n            });\n        }\n        function loopN2(i, j) {\n            const eql = (0, util_1.useFunc)(gen, equal_1.default);\n            const outer = gen.name(\"outer\");\n            gen.label(outer).for((0, codegen_1._) `;${i}--;`, () => gen.for((0, codegen_1._) `${j} = ${i}; ${j}--;`, () => gen.if((0, codegen_1._) `${eql}(${data}[${i}], ${data}[${j}])`, () => {\n                cxt.error();\n                gen.assign(valid, false).break(outer);\n            })));\n        }\n    },\n};\nexports.default = def;\n//# sourceMappingURL=uniqueItems.js.map"]},"metadata":{},"sourceType":"script"}