{"ast":null,"code":"import _slicedToArray from \"/Users/taykim/Desktop/cs98/cfa-createflow-metamask-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _regeneratorRuntime from \"/Users/taykim/Desktop/cs98/cfa-createflow-metamask-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/taykim/Desktop/cs98/cfa-createflow-metamask-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/Users/taykim/Desktop/cs98/cfa-createflow-metamask-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/taykim/Desktop/cs98/cfa-createflow-metamask-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { request as _request } from \"graphql-request\";\nimport { SFError } from \"../SFError\";\nexport var SubgraphClient = /*#__PURE__*/function () {\n  function SubgraphClient(subgraphUrl) {\n    _classCallCheck(this, SubgraphClient);\n    this.subgraphUrl = subgraphUrl;\n  }\n  _createClass(SubgraphClient, [{\n    key: \"request\",\n    value: function () {\n      var _request2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(document, variables) {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return _request(this.subgraphUrl, document, cleanVariables(variables));\n              case 3:\n                return _context.abrupt(\"return\", _context.sent);\n              case 6:\n                _context.prev = 6;\n                _context.t0 = _context[\"catch\"](0);\n                throw new SFError({\n                  type: \"SUBGRAPH_ERROR\",\n                  customMessage: \"Failed call to subgraph with query \".concat(document),\n                  errorObject: _context.t0\n                });\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 6]]);\n      }));\n      function request(_x, _x2) {\n        return _request2.apply(this, arguments);\n      }\n      return request;\n    }()\n  }]);\n  return SubgraphClient;\n}();\n// Inspired by: https://stackoverflow.com/a/38340730\n// Remove properties with null, undefined, empty string values.\nfunction cleanVariables(variables) {\n  return Object.fromEntries(Object.entries(variables).filter(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n      value = _ref2[1];\n    return value !== \"\" && value !== null && value !== undefined;\n  }).map(function (_ref3) {\n    var _ref4 = _slicedToArray(_ref3, 2),\n      key = _ref4[0],\n      value = _ref4[1];\n    return [key, value === Object(value) && !Array.isArray(value) ? cleanVariables(value) : value];\n  }));\n}","map":{"version":3,"sources":["../../../src/subgraph/SubgraphClient.ts"],"names":[],"mappings":";;;;;AAEA,SAAS,OAAO,IAAP,QAAO,QAAQ,iBAAiB;AAEzC,SAAS,OAAO,QAAQ,YAAY;AAapC,WAAa,cAAc;EACvB,wBAAqB,WAAmB,EAAA;IAAA;IAAnB,IAAA,CAAA,WAAW,GAAX,WAAW;EAAW;EAAC;IAAA;IAAA;MAAA,2EAE5C,iBACI,QAAmD,EACnD,SAAa;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA;gBAAA,OAGI,QAAO,CAChB,IAAI,CAAC,WAAW,EAChB,QAAQ,EACR,cAAc,CAAC,SAAS,CAAC,CAC5B;cAAA;gBAAA;cAAA;gBAAA;gBAAA;gBAAA,MAEK,IAAI,OAAO,CAAC;kBACd,IAAI,EAAE,gBAAgB;kBACtB,aAAa,+CAAwC,QAAQ,CAAE;kBAC/D,WAAW;iBACd,CAAC;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CAET;MAAA;QAAA;MAAA;MAAA;IAAA;EAAA;EAAA;AAAA;AAGL;AACA;AACA,SAAS,cAAc,CAAgB,SAAY,EAAA;EAC/C,OAAO,MAAM,CAAC,WAAW,CACrB,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,CACpB,MAAM,CACH;IAAA;MAAI,KAAK;IAAA,OACL,KAAK,KAAK,EAAE,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,SAAS;EAAA,EAC5D,CACA,GAAG,CAAC;IAAA;MAAE,GAAG;MAAE,KAAK;IAAA,OAAM,CACnB,GAAG,EACH,KAAK,KAAK,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,GAC1C,cAAc,CAAC,KAAK,CAAC,GACrB,KAAK,CACd;EAAA,EAAC,CACJ;AACV","sourceRoot":"","sourcesContent":["import { request } from \"graphql-request\";\nimport { SFError } from \"../SFError\";\nexport class SubgraphClient {\n    constructor(subgraphUrl) {\n        this.subgraphUrl = subgraphUrl;\n    }\n    async request(document, variables) {\n        try {\n            return await request(this.subgraphUrl, document, cleanVariables(variables));\n        }\n        catch (err) {\n            throw new SFError({\n                type: \"SUBGRAPH_ERROR\",\n                customMessage: `Failed call to subgraph with query ${document}`,\n                errorObject: err,\n            });\n        }\n    }\n}\n// Inspired by: https://stackoverflow.com/a/38340730\n// Remove properties with null, undefined, empty string values.\nfunction cleanVariables(variables) {\n    return Object.fromEntries(Object.entries(variables)\n        .filter(([, value]) => value !== \"\" && value !== null && value !== undefined)\n        .map(([key, value]) => [\n        key,\n        value === Object(value) && !Array.isArray(value)\n            ? cleanVariables(value)\n            : value,\n    ]));\n}\n//# sourceMappingURL=SubgraphClient.js.map"]},"metadata":{},"sourceType":"module"}