{"ast":null,"code":"import _regeneratorRuntime from \"/Users/taykim/Desktop/cs98/cfa-createflow-metamask-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/taykim/Desktop/cs98/cfa-createflow-metamask-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/Users/taykim/Desktop/cs98/cfa-createflow-metamask-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/taykim/Desktop/cs98/cfa-createflow-metamask-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { MetaDocument } from \"./meta.generated\";\nexport var MetaQueryHandler = /*#__PURE__*/function () {\n  function MetaQueryHandler() {\n    _classCallCheck(this, MetaQueryHandler);\n  }\n  _createClass(MetaQueryHandler, [{\n    key: \"get\",\n    value: function () {\n      var _get = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(subgraphClient, query) {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return subgraphClient.request(MetaDocument, query);\n              case 2:\n                response = _context.sent;\n                if (response._meta) {\n                  _context.next = 5;\n                  break;\n                }\n                return _context.abrupt(\"return\", null);\n              case 5:\n                return _context.abrupt(\"return\", {\n                  blockNumber: response._meta.block.number,\n                  blockHash: response._meta.block.hash,\n                  deployment: response._meta.deployment,\n                  hasIndexingErrors: response._meta.hasIndexingErrors\n                });\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      function get(_x, _x2) {\n        return _get.apply(this, arguments);\n      }\n      return get;\n    }()\n  }]);\n  return MetaQueryHandler;\n}();","map":{"version":3,"sources":["../../../../src/subgraph/meta/meta.ts"],"names":[],"mappings":";;;;AAGA,SAAS,YAAY,QAAuC,kBAAkB;AAa9E,WAAa,gBAAgB;EAAA;IAAA;EAAA;EAAA;IAAA;IAAA;MAAA,sEACzB,iBACI,cAA8B,EAC9B,KAAmB;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OAEI,cAAc,CAAC,OAAO,CAG3C,YAAY,EAAE,KAAK,CAAC;cAAA;gBAHhB,QAAQ;gBAAA,IAKT,QAAQ,CAAC,KAAK;kBAAA;kBAAA;gBAAA;gBAAA,iCACR,IAAI;cAAA;gBAAA,iCAGR;kBACH,WAAW,EAAE,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM;kBACxC,SAAS,EAAE,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI;kBACpC,UAAU,EAAE,QAAQ,CAAC,KAAK,CAAC,UAAU;kBACrC,iBAAiB,EAAE,QAAQ,CAAC,KAAK,CAAC;iBACrC;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CACJ;MAAA;QAAA;MAAA;MAAA;IAAA;EAAA;EAAA;AAAA","sourceRoot":"","sourcesContent":["import { MetaDocument } from \"./meta.generated\";\nexport class MetaQueryHandler {\n    async get(subgraphClient, query) {\n        const response = await subgraphClient.request(MetaDocument, query);\n        if (!response._meta) {\n            return null;\n        }\n        return {\n            blockNumber: response._meta.block.number,\n            blockHash: response._meta.block.hash,\n            deployment: response._meta.deployment,\n            hasIndexingErrors: response._meta.hasIndexingErrors,\n        };\n    }\n}\n//# sourceMappingURL=meta.js.map"]},"metadata":{},"sourceType":"module"}