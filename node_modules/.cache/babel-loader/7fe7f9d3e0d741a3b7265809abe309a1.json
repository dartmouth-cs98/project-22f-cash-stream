{"ast":null,"code":"\"use strict\";\n\nvar _taggedTemplateLiteral = require(\"/Users/taykim/Desktop/cs98/cs98_fall_demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/taggedTemplateLiteral.js\").default;\nvar _templateObject, _templateObject2, _templateObject3;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar codegen_1 = require(\"../../compile/codegen\");\nvar error = {\n  message: function message(_ref) {\n    var keyword = _ref.keyword,\n      schemaCode = _ref.schemaCode;\n    var comp = keyword === \"maxProperties\" ? \"more\" : \"fewer\";\n    return (0, codegen_1.str)(_templateObject || (_templateObject = _taggedTemplateLiteral([\"must NOT have \", \" than \", \" properties\"])), comp, schemaCode);\n  },\n  params: function params(_ref2) {\n    var schemaCode = _ref2.schemaCode;\n    return (0, codegen_1._)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"{limit: \", \"}\"])), schemaCode);\n  }\n};\nvar def = {\n  keyword: [\"maxProperties\", \"minProperties\"],\n  type: \"object\",\n  schemaType: \"number\",\n  $data: true,\n  error: error,\n  code: function code(cxt) {\n    var keyword = cxt.keyword,\n      data = cxt.data,\n      schemaCode = cxt.schemaCode;\n    var op = keyword === \"maxProperties\" ? codegen_1.operators.GT : codegen_1.operators.LT;\n    cxt.fail$data((0, codegen_1._)(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"Object.keys(\", \").length \", \" \", \"\"])), data, op, schemaCode));\n  }\n};\nexports.default = def;","map":{"version":3,"sources":["../../../lib/vocabularies/validation/limitProperties.ts"],"names":[],"mappings":";;;;;;;AAEA,IAAA,SAAA,GAAA,OAAA,CAAA,uBAAA,CAAA;AAEA,IAAM,KAAK,GAA2B;EACpC,OAAO,yBAAsB;IAAA,IAApB,OAAO,QAAP,OAAO;MAAE,UAAU,QAAV,UAAU;IAC1B,IAAM,IAAI,GAAG,OAAO,KAAK,eAAe,GAAG,MAAM,GAAG,OAAO;IAC3D,QAAO,CAAA,EAAA,SAAA,CAAA,GAAG,8GAAiB,IAAI,EAAS,UAAU;EACpD,CAAC;EACD,MAAM,EAAE;IAAA,IAAE,UAAU,SAAV,UAAU;IAAA,QAAM,CAAA,EAAA,SAAA,CAAA,CAAC,sFAAW,UAAU;EAAA;CACjD;AAED,IAAM,GAAG,GAA0B;EACjC,OAAO,EAAE,CAAC,eAAe,EAAE,eAAe,CAAC;EAC3C,IAAI,EAAE,QAAQ;EACd,UAAU,EAAE,QAAQ;EACpB,KAAK,EAAE,IAAI;EACX,KAAK,EAAL,KAAK;EACL,IAAI,gBAAC,GAAe,EAAA;IAClB,IAAO,OAAO,GAAsB,GAAG,CAAhC,OAAO;MAAE,IAAI,GAAgB,GAAG,CAAvB,IAAI;MAAE,UAAU,GAAI,GAAG,CAAjB,UAAU;IAChC,IAAM,EAAE,GAAG,OAAO,KAAK,eAAe,GAAG,SAAA,CAAA,SAAS,CAAC,EAAE,GAAG,SAAA,CAAA,SAAS,CAAC,EAAE;IACpE,GAAG,CAAC,SAAS,EAAC,CAAA,EAAA,SAAA,CAAA,CAAC,2GAAe,IAAI,EAAY,EAAE,EAAI,UAAU,EAAG;EACnE;CACD;AAED,OAAA,CAAA,OAAA,GAAe,GAAG","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst error = {\n    message({ keyword, schemaCode }) {\n        const comp = keyword === \"maxProperties\" ? \"more\" : \"fewer\";\n        return (0, codegen_1.str) `must NOT have ${comp} than ${schemaCode} properties`;\n    },\n    params: ({ schemaCode }) => (0, codegen_1._) `{limit: ${schemaCode}}`,\n};\nconst def = {\n    keyword: [\"maxProperties\", \"minProperties\"],\n    type: \"object\",\n    schemaType: \"number\",\n    $data: true,\n    error,\n    code(cxt) {\n        const { keyword, data, schemaCode } = cxt;\n        const op = keyword === \"maxProperties\" ? codegen_1.operators.GT : codegen_1.operators.LT;\n        cxt.fail$data((0, codegen_1._) `Object.keys(${data}).length ${op} ${schemaCode}`);\n    },\n};\nexports.default = def;\n//# sourceMappingURL=limitProperties.js.map"]},"metadata":{},"sourceType":"script"}