{"ast":null,"code":"import _objectSpread from \"/Users/taykim/Desktop/cs98/cfa-createflow-metamask-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _createClass from \"/Users/taykim/Desktop/cs98/cfa-createflow-metamask-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"/Users/taykim/Desktop/cs98/cfa-createflow-metamask-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _inherits from \"/Users/taykim/Desktop/cs98/cfa-createflow-metamask-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/taykim/Desktop/cs98/cfa-createflow-metamask-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { SubgraphQueryHandler } from \"../../subgraphQueryHandler\";\nimport { AccountTokenSnapshotLogsDocument } from \"./accountTokenSnapshotLogs.generated\";\nexport var AccountTokenSnapshotLogQueryHandler = /*#__PURE__*/function (_SubgraphQueryHandler) {\n  _inherits(AccountTokenSnapshotLogQueryHandler, _SubgraphQueryHandler);\n  var _super = _createSuper(AccountTokenSnapshotLogQueryHandler);\n  function AccountTokenSnapshotLogQueryHandler() {\n    var _this;\n    _classCallCheck(this, AccountTokenSnapshotLogQueryHandler);\n    _this = _super.apply(this, arguments);\n    _this.getAddressFieldKeysFromFilter = function () {\n      return {\n        accountKeys: [\"account\"],\n        tokenKeys: [\"token\"]\n      };\n    };\n    _this.getRelevantAddressesFromResultCore = function (result) {\n      return {\n        tokens: [result.token],\n        accounts: [result.account]\n      };\n    };\n    _this.mapFromSubgraphResponse = function (response) {\n      return response.accountTokenSnapshotLogs.map(function (x) {\n        return _objectSpread(_objectSpread({}, x), {}, {\n          account: x.account.id,\n          token: x.token.id,\n          tokenSymbol: x.token.symbol,\n          maybeCriticalAtTimestamp: x.maybeCriticalAtTimestamp != null ? Number(x.maybeCriticalAtTimestamp) : null,\n          blockNumber: Number(x.blockNumber),\n          timestamp: Number(x.timestamp),\n          order: Number(x.order),\n          logIndex: Number(x.logIndex)\n        });\n      });\n    };\n    _this.requestDocument = AccountTokenSnapshotLogsDocument;\n    return _this;\n  }\n  return _createClass(AccountTokenSnapshotLogQueryHandler);\n}(SubgraphQueryHandler);","map":{"version":3,"sources":["../../../../../src/subgraph/entities/accountTokenSnapshotLog/accountTokenSnapshotLog.ts"],"names":[],"mappings":";;;;;AAWA,SAGI,oBAAoB,QACjB,4BAA4B;AAEnC,SACI,gCAAgC,QAG7B,sCAAsC;AAgC7C,WAAa,mCAAoC;EAAA;EAAA;EAAjD,+CAAA;IAAA;IAAA;;IAMI,MAAA,6BAA6B,GAAG;MAAA,OAG1B;QACF,WAAW,EAAE,CAAC,SAAS,CAAC;QACxB,SAAS,EAAE,CAAC,OAAO;OACtB;IAAA,CAAC;IAEF,MAAA,kCAAkC,GAAG,UACjC,MAA+B;MAAA,OACE;QACjC,MAAM,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC;QACtB,QAAQ,EAAE,CAAC,MAAM,CAAC,OAAO;OAC5B;IAAA,CAAC;IAEF,MAAA,uBAAuB,GAAG,UACtB,QAAuC;MAAA,OAEvC,QAAQ,CAAC,wBAAwB,CAAC,GAAG,CAAC,UAAC,CAAC;QAAA,uCACjC,CAAC;UACJ,OAAO,EAAE,CAAC,CAAC,OAAO,CAAC,EAAE;UACrB,KAAK,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE;UACjB,WAAW,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM;UAC3B,wBAAwB,EACpB,CAAC,CAAC,wBAAwB,IAAI,IAAI,GAC5B,MAAM,CAAC,CAAC,CAAC,wBAAwB,CAAC,GAClC,IAAI;UACd,WAAW,EAAE,MAAM,CAAC,CAAC,CAAC,WAAW,CAAC;UAClC,SAAS,EAAE,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC;UAC9B,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC;UACtB,QAAQ,EAAE,MAAM,CAAC,CAAC,CAAC,QAAQ;QAAC;MAAA,CAC9B,CAAC;IAAA;IAEP,MAAA,eAAe,GAAG,gCAAgC;IAAC;EACvD;EAAC;AAAA,EAxCwD,oBAKxD","sourceRoot":"","sourcesContent":["import { SubgraphQueryHandler, } from \"../../subgraphQueryHandler\";\nimport { AccountTokenSnapshotLogsDocument, } from \"./accountTokenSnapshotLogs.generated\";\nexport class AccountTokenSnapshotLogQueryHandler extends SubgraphQueryHandler {\n    constructor() {\n        super(...arguments);\n        this.getAddressFieldKeysFromFilter = () => ({\n            accountKeys: [\"account\"],\n            tokenKeys: [\"token\"],\n        });\n        this.getRelevantAddressesFromResultCore = (result) => ({\n            tokens: [result.token],\n            accounts: [result.account],\n        });\n        this.mapFromSubgraphResponse = (response) => response.accountTokenSnapshotLogs.map((x) => ({\n            ...x,\n            account: x.account.id,\n            token: x.token.id,\n            tokenSymbol: x.token.symbol,\n            maybeCriticalAtTimestamp: x.maybeCriticalAtTimestamp != null\n                ? Number(x.maybeCriticalAtTimestamp)\n                : null,\n            blockNumber: Number(x.blockNumber),\n            timestamp: Number(x.timestamp),\n            order: Number(x.order),\n            logIndex: Number(x.logIndex),\n        }));\n        this.requestDocument = AccountTokenSnapshotLogsDocument;\n    }\n}\n//# sourceMappingURL=accountTokenSnapshotLog.js.map"]},"metadata":{},"sourceType":"module"}