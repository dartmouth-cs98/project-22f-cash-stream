{"ast":null,"code":"\"use strict\";\n\nimport _regeneratorRuntime from \"/Users/taykim/Desktop/cs98/cs98_fall_demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport { arrayify } from \"@ethersproject/bytes\";\nexport function getUrl(href, options) {\n  return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    var request, opts, response, body, headers;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (options == null) {\n              options = {};\n            }\n            request = {\n              method: options.method || \"GET\",\n              headers: options.headers || {},\n              body: options.body || undefined\n            };\n            if (options.skipFetchSetup !== true) {\n              request.mode = \"cors\"; // no-cors, cors, *same-origin\n              request.cache = \"no-cache\"; // *default, no-cache, reload, force-cache, only-if-cached\n              request.credentials = \"same-origin\"; // include, *same-origin, omit\n              request.redirect = \"follow\"; // manual, *follow, error\n              request.referrer = \"client\"; // no-referrer, *client\n            }\n\n            ;\n            if (options.fetchOptions != null) {\n              opts = options.fetchOptions;\n              if (opts.mode) {\n                request.mode = opts.mode;\n              }\n              if (opts.cache) {\n                request.cache = opts.cache;\n              }\n              if (opts.credentials) {\n                request.credentials = opts.credentials;\n              }\n              if (opts.redirect) {\n                request.redirect = opts.redirect;\n              }\n              if (opts.referrer) {\n                request.referrer = opts.referrer;\n              }\n            }\n            _context.next = 7;\n            return fetch(href, request);\n          case 7:\n            response = _context.sent;\n            _context.next = 10;\n            return response.arrayBuffer();\n          case 10:\n            body = _context.sent;\n            headers = {};\n            if (response.headers.forEach) {\n              response.headers.forEach(function (value, key) {\n                headers[key.toLowerCase()] = value;\n              });\n            } else {\n              response.headers.keys().forEach(function (key) {\n                headers[key.toLowerCase()] = response.headers.get(key);\n              });\n            }\n            return _context.abrupt(\"return\", {\n              headers: headers,\n              statusCode: response.status,\n              statusMessage: response.statusText,\n              body: arrayify(new Uint8Array(body))\n            });\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n}","map":{"version":3,"sources":["../src.ts/browser-geturl.ts"],"names":[],"mappings":"AAAA,YAAY;;AAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEb,SAAS,QAAQ,QAAQ,sBAAsB;AAM/C,OAAM,SAAgB,MAAM,CAAC,IAAY,EAAE,OAAiB,EAAA;;;;;;;YACxD,IAAI,OAAO,IAAI,IAAI,EAAE;cAAE,OAAO,GAAG,CAAA,CAAG;YAAG;YAEjC,OAAO,GAAgB;cACzB,MAAM,EAAG,OAAO,CAAC,MAAM,IAAI,KAAM;cACjC,OAAO,EAAG,OAAO,CAAC,OAAO,IAAI,CAAA,CAAI;cACjC,IAAI,EAAG,OAAO,CAAC,IAAI,IAAI;aAC1B;YAED,IAAI,OAAO,CAAC,cAAc,KAAK,IAAI,EAAE;cACjC,OAAO,CAAC,IAAI,GAAgB,MAAM,CAAC,CAAc;cACjD,OAAO,CAAC,KAAK,GAAiB,UAAU,CAAC,CAAQ;cACjD,OAAO,CAAC,WAAW,GAAuB,aAAa,CAAC,CAAE;cAC1D,OAAO,CAAC,QAAQ,GAAoB,QAAQ,CAAC,CAAI;cACjD,OAAO,CAAC,QAAQ,GAAG,QAAQ,CAAC,CAAqB;YACpD;;YAAA;YAED,IAAI,OAAO,CAAC,YAAY,IAAI,IAAI,EAAE;cACxB,IAAI,GAAG,OAAO,CAAC,YAAY;cACjC,IAAI,IAAI,CAAC,IAAI,EAAE;gBAAE,OAAO,CAAC,IAAI,GAAiB,IAAI,CAAC,IAAK;cAAG;cAC3D,IAAI,IAAI,CAAC,KAAK,EAAE;gBAAE,OAAO,CAAC,KAAK,GAAkB,IAAI,CAAC,KAAM;cAAG;cAC/D,IAAI,IAAI,CAAC,WAAW,EAAE;gBAAE,OAAO,CAAC,WAAW,GAAwB,IAAI,CAAC,WAAY;cAAG;cACvF,IAAI,IAAI,CAAC,QAAQ,EAAE;gBAAE,OAAO,CAAC,QAAQ,GAAqB,IAAI,CAAC,QAAS;cAAG;cAC3E,IAAI,IAAI,CAAC,QAAQ,EAAE;gBAAE,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ;cAAG;;YAC3D;YAEgB,OAAM,KAAK,CAAC,IAAI,EAAE,OAAO,CAAC;UAAA;YAArC,QAAQ;YAAA;YACD,OAAM,QAAQ,CAAC,WAAW,EAAE;UAAA;YAAnC,IAAI;YAEJ,OAAO,GAAiC,CAAA,CAAG;YACjD,IAAI,QAAQ,CAAC,OAAO,CAAC,OAAO,EAAE;cAC1B,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,UAAC,KAAK,EAAE,GAAG,EAAI;gBACpC,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,GAAG,KAAK;cACtC,CAAC,CAAC;aACL,MAAM;cAC2B,QAAQ,CAAC,OAAO,CAAG,IAAI,EAAI,CAAC,OAAO,CAAC,UAAC,GAAG,EAAI;gBACtE,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,GAAG,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC;cAC1D,CAAC,CAAC;;YACL,iCAEM;cACH,OAAO,EAAE,OAAO;cAChB,UAAU,EAAE,QAAQ,CAAC,MAAM;cAC3B,aAAa,EAAE,QAAQ,CAAC,UAAU;cAClC,IAAI,EAAE,QAAQ,CAAC,IAAI,UAAU,CAAC,IAAI,CAAC;aACtC;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CACJ,EAAA;AAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { arrayify } from \"@ethersproject/bytes\";\nexport function getUrl(href, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (options == null) {\n            options = {};\n        }\n        const request = {\n            method: (options.method || \"GET\"),\n            headers: (options.headers || {}),\n            body: (options.body || undefined),\n        };\n        if (options.skipFetchSetup !== true) {\n            request.mode = \"cors\"; // no-cors, cors, *same-origin\n            request.cache = \"no-cache\"; // *default, no-cache, reload, force-cache, only-if-cached\n            request.credentials = \"same-origin\"; // include, *same-origin, omit\n            request.redirect = \"follow\"; // manual, *follow, error\n            request.referrer = \"client\"; // no-referrer, *client\n        }\n        ;\n        if (options.fetchOptions != null) {\n            const opts = options.fetchOptions;\n            if (opts.mode) {\n                request.mode = (opts.mode);\n            }\n            if (opts.cache) {\n                request.cache = (opts.cache);\n            }\n            if (opts.credentials) {\n                request.credentials = (opts.credentials);\n            }\n            if (opts.redirect) {\n                request.redirect = (opts.redirect);\n            }\n            if (opts.referrer) {\n                request.referrer = opts.referrer;\n            }\n        }\n        const response = yield fetch(href, request);\n        const body = yield response.arrayBuffer();\n        const headers = {};\n        if (response.headers.forEach) {\n            response.headers.forEach((value, key) => {\n                headers[key.toLowerCase()] = value;\n            });\n        }\n        else {\n            ((response.headers).keys)().forEach((key) => {\n                headers[key.toLowerCase()] = response.headers.get(key);\n            });\n        }\n        return {\n            headers: headers,\n            statusCode: response.status,\n            statusMessage: response.statusText,\n            body: arrayify(new Uint8Array(body)),\n        };\n    });\n}\n//# sourceMappingURL=geturl.js.map"]},"metadata":{},"sourceType":"module"}