{"ast":null,"code":"\"use strict\";\n\nimport _classCallCheck from \"/Users/taykim/Desktop/cs98/project-22f-zk-vote/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/taykim/Desktop/cs98/project-22f-zk-vote/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/taykim/Desktop/cs98/project-22f-zk-vote/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/taykim/Desktop/cs98/project-22f-zk-vote/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { MaxUint256, NegativeOne, One, Zero } from \"@ethersproject/constants\";\nimport { Coder } from \"./abstract-coder\";\nexport var NumberCoder = /*#__PURE__*/function (_Coder) {\n  _inherits(NumberCoder, _Coder);\n  var _super = _createSuper(NumberCoder);\n  function NumberCoder(size, signed, localName) {\n    var _this;\n    _classCallCheck(this, NumberCoder);\n    var name = (signed ? \"int\" : \"uint\") + size * 8;\n    _this = _super.call(this, name, name, localName, false);\n    _this.size = size;\n    _this.signed = signed;\n    return _this;\n  }\n  _createClass(NumberCoder, [{\n    key: \"defaultValue\",\n    value: function defaultValue() {\n      return 0;\n    }\n  }, {\n    key: \"encode\",\n    value: function encode(writer, value) {\n      var v = BigNumber.from(value);\n      // Check bounds are safe for encoding\n      var maxUintValue = MaxUint256.mask(writer.wordSize * 8);\n      if (this.signed) {\n        var bounds = maxUintValue.mask(this.size * 8 - 1);\n        if (v.gt(bounds) || v.lt(bounds.add(One).mul(NegativeOne))) {\n          this._throwError(\"value out-of-bounds\", value);\n        }\n      } else if (v.lt(Zero) || v.gt(maxUintValue.mask(this.size * 8))) {\n        this._throwError(\"value out-of-bounds\", value);\n      }\n      v = v.toTwos(this.size * 8).mask(this.size * 8);\n      if (this.signed) {\n        v = v.fromTwos(this.size * 8).toTwos(8 * writer.wordSize);\n      }\n      return writer.writeValue(v);\n    }\n  }, {\n    key: \"decode\",\n    value: function decode(reader) {\n      var value = reader.readValue().mask(this.size * 8);\n      if (this.signed) {\n        value = value.fromTwos(this.size * 8);\n      }\n      return reader.coerce(this.name, value);\n    }\n  }]);\n  return NumberCoder;\n}(Coder);","map":{"version":3,"sources":["../../src.ts/coders/number.ts"],"names":[],"mappings":"AAAA,YAAY;;AAAC;AAAA;AAAA;AAAA;AAEb,SAAS,SAAS,QAAsB,0BAA0B;AAClE,SAAS,UAAU,EAAE,WAAW,EAAE,GAAG,EAAE,IAAI,QAAQ,0BAA0B;AAE7E,SAAS,KAAK,QAAwB,kBAAkB;AAExD,WAAa,WAAY;EAAA;EAAA;EAIrB,qBAAY,IAAY,EAAE,MAAe,EAAE,SAAiB,EAAA;IAAA;IAAA;IACxD,IAAM,IAAI,GAAI,CAAC,MAAM,GAAG,KAAK,GAAE,MAAM,IAAK,IAAI,GAAG,CAAG;IACpD,0BAAM,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK;IAElC,MAAK,IAAI,GAAG,IAAI;IAChB,MAAK,MAAM,GAAG,MAAM;IAAC;EACzB;EAAC;IAAA;IAAA,OAED,wBAAY;MACR,OAAO,CAAC;IACZ;EAAC;IAAA;IAAA,OAED,gBAAO,MAAc,EAAE,KAAmB,EAAA;MACtC,IAAI,CAAC,GAAG,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC;MAE7B;MACA,IAAI,YAAY,GAAG,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,CAAC,CAAC;MACvD,IAAI,IAAI,CAAC,MAAM,EAAE;QACb,IAAI,MAAM,GAAG,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC;QACjD,IAAI,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,EAAE;UACxD,IAAI,CAAC,WAAW,CAAC,qBAAqB,EAAE,KAAK,CAAC;QACjD;OACJ,MAAM,IAAI,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,EAAE;QAC7D,IAAI,CAAC,WAAW,CAAC,qBAAqB,EAAE,KAAK,CAAC;MACjD;MAED,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;MAE/C,IAAI,IAAI,CAAC,MAAM,EAAE;QACb,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,QAAQ,CAAC;MAC5D;MAED,OAAO,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC;IAC/B;EAAC;IAAA;IAAA,OAED,gBAAO,MAAc,EAAA;MACjB,IAAI,KAAK,GAAG,MAAM,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;MAElD,IAAI,IAAI,CAAC,MAAM,EAAE;QACb,KAAK,GAAG,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;MACxC;MAED,OAAO,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC;IAC1C;EAAC;EAAA;AAAA,EA/C4B,KAAK","sourceRoot":"","sourcesContent":["\"use strict\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { MaxUint256, NegativeOne, One, Zero } from \"@ethersproject/constants\";\nimport { Coder } from \"./abstract-coder\";\nexport class NumberCoder extends Coder {\n    constructor(size, signed, localName) {\n        const name = ((signed ? \"int\" : \"uint\") + (size * 8));\n        super(name, name, localName, false);\n        this.size = size;\n        this.signed = signed;\n    }\n    defaultValue() {\n        return 0;\n    }\n    encode(writer, value) {\n        let v = BigNumber.from(value);\n        // Check bounds are safe for encoding\n        let maxUintValue = MaxUint256.mask(writer.wordSize * 8);\n        if (this.signed) {\n            let bounds = maxUintValue.mask(this.size * 8 - 1);\n            if (v.gt(bounds) || v.lt(bounds.add(One).mul(NegativeOne))) {\n                this._throwError(\"value out-of-bounds\", value);\n            }\n        }\n        else if (v.lt(Zero) || v.gt(maxUintValue.mask(this.size * 8))) {\n            this._throwError(\"value out-of-bounds\", value);\n        }\n        v = v.toTwos(this.size * 8).mask(this.size * 8);\n        if (this.signed) {\n            v = v.fromTwos(this.size * 8).toTwos(8 * writer.wordSize);\n        }\n        return writer.writeValue(v);\n    }\n    decode(reader) {\n        let value = reader.readValue().mask(this.size * 8);\n        if (this.signed) {\n            value = value.fromTwos(this.size * 8);\n        }\n        return reader.coerce(this.name, value);\n    }\n}\n//# sourceMappingURL=number.js.map"]},"metadata":{},"sourceType":"module"}