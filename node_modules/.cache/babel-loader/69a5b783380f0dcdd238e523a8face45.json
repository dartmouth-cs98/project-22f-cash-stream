{"ast":null,"code":"\"use strict\";\n\nimport { getAddress } from \"@ethersproject/address\";\nexport function isCrowdsaleWallet(json) {\n  var data = null;\n  try {\n    data = JSON.parse(json);\n  } catch (error) {\n    return false;\n  }\n  return data.encseed && data.ethaddr;\n}\nexport function isKeystoreWallet(json) {\n  var data = null;\n  try {\n    data = JSON.parse(json);\n  } catch (error) {\n    return false;\n  }\n  if (!data.version || parseInt(data.version) !== data.version || parseInt(data.version) !== 3) {\n    return false;\n  }\n  // @TODO: Put more checks to make sure it has kdf, iv and all that good stuff\n  return true;\n}\n//export function isJsonWallet(json: string): boolean {\n//    return (isSecretStorageWallet(json) || isCrowdsaleWallet(json));\n//}\nexport function getJsonWalletAddress(json) {\n  if (isCrowdsaleWallet(json)) {\n    try {\n      return getAddress(JSON.parse(json).ethaddr);\n    } catch (error) {\n      return null;\n    }\n  }\n  if (isKeystoreWallet(json)) {\n    try {\n      return getAddress(JSON.parse(json).address);\n    } catch (error) {\n      return null;\n    }\n  }\n  return null;\n}","map":{"version":3,"sources":["../src.ts/inspect.ts"],"names":[],"mappings":"AAAA,YAAY;;AAEZ,SAAS,UAAU,QAAQ,wBAAwB;AAGnD,OAAM,SAAU,iBAAiB,CAAC,IAAY,EAAA;EAC1C,IAAI,IAAI,GAAQ,IAAI;EACpB,IAAI;IACA,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;GAC1B,CAAC,OAAO,KAAK,EAAE;IAAE,OAAO,KAAK;EAAG;EAEjC,OAAQ,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO;AACxC;AAEA,OAAM,SAAU,gBAAgB,CAAC,IAAY,EAAA;EACzC,IAAI,IAAI,GAAQ,IAAI;EACpB,IAAI;IACA,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;GAC1B,CAAC,OAAO,KAAK,EAAE;IAAE,OAAO,KAAK;EAAG;EAEjC,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,CAAC,OAAO,IAAI,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;IAC1F,OAAO,KAAK;EACf;EAED;EACA,OAAO,IAAI;AACf;AAEA;AACA;AACA;AAEA,OAAM,SAAU,oBAAoB,CAAC,IAAY,EAAA;EAC7C,IAAI,iBAAiB,CAAC,IAAI,CAAC,EAAE;IACzB,IAAI;MACA,OAAO,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC;KAC9C,CAAC,OAAO,KAAK,EAAE;MAAE,OAAO,IAAI;IAAG;EACnC;EAED,IAAI,gBAAgB,CAAC,IAAI,CAAC,EAAE;IACxB,IAAI;MACA,OAAO,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC;KAC9C,CAAC,OAAO,KAAK,EAAE;MAAE,OAAO,IAAI;IAAG;EACnC;EAED,OAAO,IAAI;AACf","sourceRoot":"","sourcesContent":["\"use strict\";\nimport { getAddress } from \"@ethersproject/address\";\nexport function isCrowdsaleWallet(json) {\n    let data = null;\n    try {\n        data = JSON.parse(json);\n    }\n    catch (error) {\n        return false;\n    }\n    return (data.encseed && data.ethaddr);\n}\nexport function isKeystoreWallet(json) {\n    let data = null;\n    try {\n        data = JSON.parse(json);\n    }\n    catch (error) {\n        return false;\n    }\n    if (!data.version || parseInt(data.version) !== data.version || parseInt(data.version) !== 3) {\n        return false;\n    }\n    // @TODO: Put more checks to make sure it has kdf, iv and all that good stuff\n    return true;\n}\n//export function isJsonWallet(json: string): boolean {\n//    return (isSecretStorageWallet(json) || isCrowdsaleWallet(json));\n//}\nexport function getJsonWalletAddress(json) {\n    if (isCrowdsaleWallet(json)) {\n        try {\n            return getAddress(JSON.parse(json).ethaddr);\n        }\n        catch (error) {\n            return null;\n        }\n    }\n    if (isKeystoreWallet(json)) {\n        try {\n            return getAddress(JSON.parse(json).address);\n        }\n        catch (error) {\n            return null;\n        }\n    }\n    return null;\n}\n//# sourceMappingURL=inspect.js.map"]},"metadata":{},"sourceType":"module"}