{"ast":null,"code":"import _objectSpread from \"/Users/taykim/Desktop/cs98/cs98_fall_demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _createClass from \"/Users/taykim/Desktop/cs98/cs98_fall_demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"/Users/taykim/Desktop/cs98/cs98_fall_demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _inherits from \"/Users/taykim/Desktop/cs98/cs98_fall_demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/taykim/Desktop/cs98/cs98_fall_demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { SubgraphQueryHandler } from \"../../subgraphQueryHandler\";\nimport { StreamPeriodsDocument } from \"./streamPeriods.generated\";\nexport var StreamPeriodQueryHandler = /*#__PURE__*/function (_SubgraphQueryHandler) {\n  _inherits(StreamPeriodQueryHandler, _SubgraphQueryHandler);\n  var _super = _createSuper(StreamPeriodQueryHandler);\n  function StreamPeriodQueryHandler() {\n    var _this;\n    _classCallCheck(this, StreamPeriodQueryHandler);\n    _this = _super.apply(this, arguments);\n    _this.getAddressFieldKeysFromFilter = function () {\n      return {\n        accountKeys: [\"sender\", \"receiver\"],\n        tokenKeys: [\"token\"]\n      };\n    };\n    _this.getRelevantAddressesFromResultCore = function (result) {\n      return {\n        tokens: [result.token],\n        accounts: [result.sender, result.receiver]\n      };\n    };\n    _this.mapFromSubgraphResponse = function (response) {\n      return response.streamPeriods.map(function (x) {\n        var _a;\n        return _objectSpread(_objectSpread({}, x), {}, {\n          stream: x.stream.id,\n          token: x.token.id,\n          tokenSymbol: x.token.symbol,\n          sender: x.sender.id,\n          receiver: x.receiver.id,\n          startedAtEvent: x.startedAtEvent.id,\n          stoppedAtEvent: (_a = x.stoppedAtEvent) === null || _a === void 0 ? void 0 : _a.id,\n          startedAtBlockNumber: Number(x.startedAtBlockNumber),\n          stoppedAtBlockNumber: Number(x.stoppedAtBlockNumber),\n          startedAtTimestamp: Number(x.startedAtTimestamp),\n          stoppedAtTimestamp: Number(x.stoppedAtTimestamp)\n        });\n      });\n    };\n    _this.requestDocument = StreamPeriodsDocument;\n    return _this;\n  }\n  return _createClass(StreamPeriodQueryHandler);\n}(SubgraphQueryHandler);","map":{"version":3,"sources":["../../../../../src/subgraph/entities/streamPeriod/streamPeriod.ts"],"names":[],"mappings":";;;;;AAWA,SAGI,oBAAoB,QACjB,4BAA4B;AAEnC,SACI,qBAAqB,QAGlB,2BAA2B;AAwBlC,WAAa,wBAAyB;EAAA;EAAA;EAAtC,oCAAA;IAAA;IAAA;;IAMI,MAAA,6BAA6B,GAAG;MAAA,OAG1B;QACF,WAAW,EAAE,CAAC,QAAQ,EAAE,UAAU,CAAC;QACnC,SAAS,EAAE,CAAC,OAAO;OACtB;IAAA,CAAC;IAEF,MAAA,kCAAkC,GAAG,UACjC,MAAoB;MAAA,OACa;QACjC,MAAM,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC;QACtB,QAAQ,EAAE,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,QAAQ;OAC5C;IAAA,CAAC;IAEF,MAAA,uBAAuB,GAAG,UAAC,QAA4B;MAAA,OACnD,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,UAAC,CAAC,EAAI;;QAAC,uCAC3B,CAAC;UACJ,MAAM,EAAE,CAAC,CAAC,MAAM,CAAC,EAAE;UACnB,KAAK,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE;UACjB,WAAW,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM;UAC3B,MAAM,EAAE,CAAC,CAAC,MAAM,CAAC,EAAE;UACnB,QAAQ,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAE;UACvB,cAAc,EAAE,CAAC,CAAC,cAAc,CAAC,EAAE;UACnC,cAAc,EAAE,CAAA,EAAA,GAAA,CAAC,CAAC,cAAc,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,EAAE;UACpC,oBAAoB,EAAE,MAAM,CAAC,CAAC,CAAC,oBAAoB,CAAC;UACpD,oBAAoB,EAAE,MAAM,CAAC,CAAC,CAAC,oBAAoB,CAAC;UACpD,kBAAkB,EAAE,MAAM,CAAC,CAAC,CAAC,kBAAkB,CAAC;UAChD,kBAAkB,EAAE,MAAM,CAAC,CAAC,CAAC,kBAAkB;QAAC;OAClD,CAAC;IAAA;IAEP,MAAA,eAAe,GAAG,qBAAqB;IAAC;EAC5C;EAAC;AAAA,EAtC6C,oBAK7C","sourceRoot":"","sourcesContent":["import { SubgraphQueryHandler, } from \"../../subgraphQueryHandler\";\nimport { StreamPeriodsDocument, } from \"./streamPeriods.generated\";\nexport class StreamPeriodQueryHandler extends SubgraphQueryHandler {\n    constructor() {\n        super(...arguments);\n        this.getAddressFieldKeysFromFilter = () => ({\n            accountKeys: [\"sender\", \"receiver\"],\n            tokenKeys: [\"token\"],\n        });\n        this.getRelevantAddressesFromResultCore = (result) => ({\n            tokens: [result.token],\n            accounts: [result.sender, result.receiver],\n        });\n        this.mapFromSubgraphResponse = (response) => response.streamPeriods.map((x) => {\n            var _a;\n            return ({\n                ...x,\n                stream: x.stream.id,\n                token: x.token.id,\n                tokenSymbol: x.token.symbol,\n                sender: x.sender.id,\n                receiver: x.receiver.id,\n                startedAtEvent: x.startedAtEvent.id,\n                stoppedAtEvent: (_a = x.stoppedAtEvent) === null || _a === void 0 ? void 0 : _a.id,\n                startedAtBlockNumber: Number(x.startedAtBlockNumber),\n                stoppedAtBlockNumber: Number(x.stoppedAtBlockNumber),\n                startedAtTimestamp: Number(x.startedAtTimestamp),\n                stoppedAtTimestamp: Number(x.stoppedAtTimestamp),\n            });\n        });\n        this.requestDocument = StreamPeriodsDocument;\n    }\n}\n//# sourceMappingURL=streamPeriod.js.map"]},"metadata":{},"sourceType":"module"}