{"ast":null,"code":"import _classCallCheck from \"/Users/taykim/Desktop/cs98/cs98_fall_demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/taykim/Desktop/cs98/cs98_fall_demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/taykim/Desktop/cs98/cs98_fall_demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/taykim/Desktop/cs98/cs98_fall_demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { showThrottleMessage } from \"./formatter\";\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nvar logger = new Logger(version);\nvar defaultApiKey = \"9f7d929b018cdffb338517efa06f58359e86ff1ffd350bc889738523659e7972\";\nfunction getHost(name) {\n  switch (name) {\n    case \"homestead\":\n      return \"rpc.ankr.com/eth/\";\n    case \"matic\":\n      return \"rpc.ankr.com/polygon/\";\n    case \"arbitrum\":\n      return \"rpc.ankr.com/arbitrum/\";\n  }\n  return logger.throwArgumentError(\"unsupported network\", \"name\", name);\n}\nexport var AnkrProvider = /*#__PURE__*/function (_UrlJsonRpcProvider) {\n  _inherits(AnkrProvider, _UrlJsonRpcProvider);\n  var _super = _createSuper(AnkrProvider);\n  function AnkrProvider() {\n    _classCallCheck(this, AnkrProvider);\n    return _super.apply(this, arguments);\n  }\n  _createClass(AnkrProvider, [{\n    key: \"isCommunityResource\",\n    value: function isCommunityResource() {\n      return this.apiKey === defaultApiKey;\n    }\n  }], [{\n    key: \"getApiKey\",\n    value: function getApiKey(apiKey) {\n      if (apiKey == null) {\n        return defaultApiKey;\n      }\n      return apiKey;\n    }\n  }, {\n    key: \"getUrl\",\n    value: function getUrl(network, apiKey) {\n      if (apiKey == null) {\n        apiKey = defaultApiKey;\n      }\n      var connection = {\n        allowGzip: true,\n        url: \"https:/\\/\" + getHost(network.name) + apiKey,\n        throttleCallback: function throttleCallback(attempt, url) {\n          if (apiKey.apiKey === defaultApiKey) {\n            showThrottleMessage();\n          }\n          return Promise.resolve(true);\n        }\n      };\n      if (apiKey.projectSecret != null) {\n        connection.user = \"\";\n        connection.password = apiKey.projectSecret;\n      }\n      return connection;\n    }\n  }]);\n  return AnkrProvider;\n}(UrlJsonRpcProvider);","map":{"version":3,"sources":["../src.ts/ankr-provider.ts"],"names":[],"mappings":";;;;AAGA,SAAS,mBAAmB,QAAQ,aAAa;AACjD,SAAS,kBAAkB,QAAQ,yBAAyB;AAI5D,SAAS,MAAM,QAAQ,uBAAuB;AAC9C,SAAS,OAAO,QAAQ,YAAY;AACpC,IAAM,MAAM,GAAG,IAAI,MAAM,CAAC,OAAO,CAAC;AAGlC,IAAM,aAAa,GAAG,kEAAkE;AAExF,SAAS,OAAO,CAAC,IAAY,EAAA;EACzB,QAAQ,IAAI;IACR,KAAK,WAAW;MACZ,OAAO,mBAAmB;IAC9B,KAAK,OAAO;MACR,OAAO,uBAAuB;IAClC,KAAK,UAAU;MACX,OAAO,wBAAwB;EAAC;EAExC,OAAO,MAAM,CAAC,kBAAkB,CAAC,qBAAqB,EAAE,MAAM,EAAE,IAAI,CAAC;AACzE;AAEA,WAAa,YAAa;EAAA;EAAA;EAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA,OAGtB,+BAAmB;MACf,OAAQ,IAAI,CAAC,MAAM,KAAK,aAAa;IACzC;EAAC;IAAA;IAAA,OAED,mBAAiB,MAAW,EAAA;MACxB,IAAI,MAAM,IAAI,IAAI,EAAE;QAAE,OAAO,aAAa;MAAG;MAC7C,OAAO,MAAM;IACjB;EAAC;IAAA;IAAA,OAED,gBAAc,OAAgB,EAAE,MAAW,EAAA;MACvC,IAAI,MAAM,IAAI,IAAI,EAAE;QAAE,MAAM,GAAG,aAAa;MAAG;MAC/C,IAAM,UAAU,GAAmB;QAC/B,SAAS,EAAE,IAAI;QACf,GAAG,EAAG,WAAW,GAAG,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,MAAO;QACnD,gBAAgB,EAAE,0BAAC,OAAe,EAAE,GAAW,EAAI;UAC/C,IAAI,MAAM,CAAC,MAAM,KAAK,aAAa,EAAE;YACjC,mBAAmB,EAAE;UACxB;UACD,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC;QAChC;OACH;MAED,IAAI,MAAM,CAAC,aAAa,IAAI,IAAI,EAAE;QAC9B,UAAU,CAAC,IAAI,GAAG,EAAE;QACpB,UAAU,CAAC,QAAQ,GAAG,MAAM,CAAC,aAAa;MAC7C;MAED,OAAO,UAAU;IACrB;EAAC;EAAA;AAAA,EA/B6B,kBAAkB","sourceRoot":"","sourcesContent":["import { showThrottleMessage } from \"./formatter\";\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nconst defaultApiKey = \"9f7d929b018cdffb338517efa06f58359e86ff1ffd350bc889738523659e7972\";\nfunction getHost(name) {\n    switch (name) {\n        case \"homestead\":\n            return \"rpc.ankr.com/eth/\";\n        case \"matic\":\n            return \"rpc.ankr.com/polygon/\";\n        case \"arbitrum\":\n            return \"rpc.ankr.com/arbitrum/\";\n    }\n    return logger.throwArgumentError(\"unsupported network\", \"name\", name);\n}\nexport class AnkrProvider extends UrlJsonRpcProvider {\n    isCommunityResource() {\n        return (this.apiKey === defaultApiKey);\n    }\n    static getApiKey(apiKey) {\n        if (apiKey == null) {\n            return defaultApiKey;\n        }\n        return apiKey;\n    }\n    static getUrl(network, apiKey) {\n        if (apiKey == null) {\n            apiKey = defaultApiKey;\n        }\n        const connection = {\n            allowGzip: true,\n            url: (\"https:/\\/\" + getHost(network.name) + apiKey),\n            throttleCallback: (attempt, url) => {\n                if (apiKey.apiKey === defaultApiKey) {\n                    showThrottleMessage();\n                }\n                return Promise.resolve(true);\n            }\n        };\n        if (apiKey.projectSecret != null) {\n            connection.user = \"\";\n            connection.password = apiKey.projectSecret;\n        }\n        return connection;\n    }\n}\n//# sourceMappingURL=ankr-provider.js.map"]},"metadata":{},"sourceType":"module"}