{"ast":null,"code":"import { concat } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nexport var messagePrefix = \"\\x19Ethereum Signed Message:\\n\";\nexport function hashMessage(message) {\n  if (typeof message === \"string\") {\n    message = toUtf8Bytes(message);\n  }\n  return keccak256(concat([toUtf8Bytes(messagePrefix), toUtf8Bytes(String(message.length)), message]));\n}","map":{"version":3,"sources":["../src.ts/message.ts"],"names":[],"mappings":"AAAA,SAAgB,MAAM,QAAQ,sBAAsB;AACpD,SAAS,SAAS,QAAQ,0BAA0B;AACpD,SAAS,WAAW,QAAQ,wBAAwB;AAEpD,OAAO,IAAM,aAAa,GAAG,gCAAgC;AAE7D,OAAM,SAAU,WAAW,CAAC,OAAuB,EAAA;EAC/C,IAAI,OAAO,OAAQ,KAAK,QAAQ,EAAE;IAAE,OAAO,GAAG,WAAW,CAAC,OAAO,CAAC;EAAG;EACrE,OAAO,SAAS,CAAC,MAAM,CAAC,CACpB,WAAW,CAAC,aAAa,CAAC,EAC1B,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EACnC,OAAO,CACV,CAAC,CAAC;AACP","sourceRoot":"","sourcesContent":["import { concat } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nexport const messagePrefix = \"\\x19Ethereum Signed Message:\\n\";\nexport function hashMessage(message) {\n    if (typeof (message) === \"string\") {\n        message = toUtf8Bytes(message);\n    }\n    return keccak256(concat([\n        toUtf8Bytes(messagePrefix),\n        toUtf8Bytes(String(message.length)),\n        message\n    ]));\n}\n//# sourceMappingURL=message.js.map"]},"metadata":{},"sourceType":"module"}