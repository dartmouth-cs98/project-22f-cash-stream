{"ast":null,"code":"\"use strict\";\n\nimport _regeneratorRuntime from \"/Users/taykim/Desktop/cs98/cs98_fall_demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _classCallCheck from \"/Users/taykim/Desktop/cs98/cs98_fall_demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/taykim/Desktop/cs98/cs98_fall_demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/taykim/Desktop/cs98/cs98_fall_demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _get from \"/Users/taykim/Desktop/cs98/cs98_fall_demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/taykim/Desktop/cs98/cs98_fall_demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/taykim/Desktop/cs98/cs98_fall_demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/taykim/Desktop/cs98/cs98_fall_demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport { hexlify, hexValue, isHexString } from \"@ethersproject/bytes\";\nimport { deepCopy, defineReadOnly } from \"@ethersproject/properties\";\nimport { accessListify } from \"@ethersproject/transactions\";\nimport { fetchJson } from \"@ethersproject/web\";\nimport { showThrottleMessage } from \"./formatter\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nvar logger = new Logger(version);\nimport { BaseProvider } from \"./base-provider\";\n// The transaction has already been sanitized by the calls in Provider\nfunction getTransactionPostData(transaction) {\n  var result = {};\n  for (var key in transaction) {\n    if (transaction[key] == null) {\n      continue;\n    }\n    var value = transaction[key];\n    if (key === \"type\" && value === 0) {\n      continue;\n    }\n    // Quantity-types require no leading zero, unless 0\n    if ({\n      type: true,\n      gasLimit: true,\n      gasPrice: true,\n      maxFeePerGs: true,\n      maxPriorityFeePerGas: true,\n      nonce: true,\n      value: true\n    }[key]) {\n      value = hexValue(hexlify(value));\n    } else if (key === \"accessList\") {\n      value = \"[\" + accessListify(value).map(function (set) {\n        return \"{address:\\\"\".concat(set.address, \"\\\",storageKeys:[\\\"\").concat(set.storageKeys.join('\",\"'), \"\\\"]}\");\n      }).join(\",\") + \"]\";\n    } else {\n      value = hexlify(value);\n    }\n    result[key] = value;\n  }\n  return result;\n}\nfunction getResult(result) {\n  // getLogs, getHistory have weird success responses\n  if (result.status == 0 && (result.message === \"No records found\" || result.message === \"No transactions found\")) {\n    return result.result;\n  }\n  if (result.status != 1 || result.message != \"OK\") {\n    var error = new Error(\"invalid response\");\n    error.result = JSON.stringify(result);\n    if ((result.result || \"\").toLowerCase().indexOf(\"rate limit\") >= 0) {\n      error.throttleRetry = true;\n    }\n    throw error;\n  }\n  return result.result;\n}\nfunction getJsonResult(result) {\n  // This response indicates we are being throttled\n  if (result && result.status == 0 && result.message == \"NOTOK\" && (result.result || \"\").toLowerCase().indexOf(\"rate limit\") >= 0) {\n    var error = new Error(\"throttled response\");\n    error.result = JSON.stringify(result);\n    error.throttleRetry = true;\n    throw error;\n  }\n  if (result.jsonrpc != \"2.0\") {\n    // @TODO: not any\n    var _error = new Error(\"invalid response\");\n    _error.result = JSON.stringify(result);\n    throw _error;\n  }\n  if (result.error) {\n    // @TODO: not any\n    var _error2 = new Error(result.error.message || \"unknown error\");\n    if (result.error.code) {\n      _error2.code = result.error.code;\n    }\n    if (result.error.data) {\n      _error2.data = result.error.data;\n    }\n    throw _error2;\n  }\n  return result.result;\n}\n// The blockTag was normalized as a string by the Provider pre-perform operations\nfunction checkLogTag(blockTag) {\n  if (blockTag === \"pending\") {\n    throw new Error(\"pending not supported\");\n  }\n  if (blockTag === \"latest\") {\n    return blockTag;\n  }\n  return parseInt(blockTag.substring(2), 16);\n}\nvar defaultApiKey = \"9D13ZE7XSBTJ94N9BNJ2MA33VMAY2YPIRB\";\nfunction checkError(method, error, transaction) {\n  // Undo the \"convenience\" some nodes are attempting to prevent backwards\n  // incompatibility; maybe for v6 consider forwarding reverts as errors\n  if (method === \"call\" && error.code === Logger.errors.SERVER_ERROR) {\n    var e = error.error;\n    // Etherscan keeps changing their string\n    if (e && (e.message.match(/reverted/i) || e.message.match(/VM execution error/i))) {\n      // Etherscan prefixes the data like \"Reverted 0x1234\"\n      var data = e.data;\n      if (data) {\n        data = \"0x\" + data.replace(/^.*0x/i, \"\");\n      }\n      if (isHexString(data)) {\n        return data;\n      }\n      logger.throwError(\"missing revert data in call exception\", Logger.errors.CALL_EXCEPTION, {\n        error: error,\n        data: \"0x\"\n      });\n    }\n  }\n  // Get the message from any nested error structure\n  var message = error.message;\n  if (error.code === Logger.errors.SERVER_ERROR) {\n    if (error.error && typeof error.error.message === \"string\") {\n      message = error.error.message;\n    } else if (typeof error.body === \"string\") {\n      message = error.body;\n    } else if (typeof error.responseText === \"string\") {\n      message = error.responseText;\n    }\n  }\n  message = (message || \"\").toLowerCase();\n  // \"Insufficient funds. The account you tried to send transaction from does not have enough funds. Required 21464000000000 and got: 0\"\n  if (message.match(/insufficient funds/)) {\n    logger.throwError(\"insufficient funds for intrinsic transaction cost\", Logger.errors.INSUFFICIENT_FUNDS, {\n      error: error,\n      method: method,\n      transaction: transaction\n    });\n  }\n  // \"Transaction with the same hash was already imported.\"\n  if (message.match(/same hash was already imported|transaction nonce is too low|nonce too low/)) {\n    logger.throwError(\"nonce has already been used\", Logger.errors.NONCE_EXPIRED, {\n      error: error,\n      method: method,\n      transaction: transaction\n    });\n  }\n  // \"Transaction gas price is too low. There is another transaction with same nonce in the queue. Try increasing the gas price or incrementing the nonce.\"\n  if (message.match(/another transaction with same nonce/)) {\n    logger.throwError(\"replacement fee too low\", Logger.errors.REPLACEMENT_UNDERPRICED, {\n      error: error,\n      method: method,\n      transaction: transaction\n    });\n  }\n  if (message.match(/execution failed due to an exception|execution reverted/)) {\n    logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n      error: error,\n      method: method,\n      transaction: transaction\n    });\n  }\n  throw error;\n}\nexport var EtherscanProvider = /*#__PURE__*/function (_BaseProvider) {\n  _inherits(EtherscanProvider, _BaseProvider);\n  var _super2 = _createSuper(EtherscanProvider);\n  function EtherscanProvider(network, apiKey) {\n    var _this;\n    _classCallCheck(this, EtherscanProvider);\n    logger.checkNew(this instanceof EtherscanProvider ? this.constructor : void 0, EtherscanProvider);\n    _this = _super2.call(this, network);\n    defineReadOnly(_assertThisInitialized(_this), \"baseUrl\", _this.getBaseUrl());\n    defineReadOnly(_assertThisInitialized(_this), \"apiKey\", apiKey || defaultApiKey);\n    return _this;\n  }\n  _createClass(EtherscanProvider, [{\n    key: \"getBaseUrl\",\n    value: function getBaseUrl() {\n      switch (this.network ? this.network.name : \"invalid\") {\n        case \"homestead\":\n          return \"https:/\\/api.etherscan.io\";\n        case \"ropsten\":\n          return \"https:/\\/api-ropsten.etherscan.io\";\n        case \"rinkeby\":\n          return \"https:/\\/api-rinkeby.etherscan.io\";\n        case \"kovan\":\n          return \"https:/\\/api-kovan.etherscan.io\";\n        case \"goerli\":\n          return \"https:/\\/api-goerli.etherscan.io\";\n        default:\n      }\n      return logger.throwArgumentError(\"unsupported network\", \"network\", name);\n    }\n  }, {\n    key: \"getUrl\",\n    value: function getUrl(module, params) {\n      var query = Object.keys(params).reduce(function (accum, key) {\n        var value = params[key];\n        if (value != null) {\n          accum += \"&\".concat(key, \"=\").concat(value);\n        }\n        return accum;\n      }, \"\");\n      var apiKey = this.apiKey ? \"&apikey=\".concat(this.apiKey) : \"\";\n      return \"\".concat(this.baseUrl, \"/api?module=\").concat(module).concat(query).concat(apiKey);\n    }\n  }, {\n    key: \"getPostUrl\",\n    value: function getPostUrl() {\n      return \"\".concat(this.baseUrl, \"/api\");\n    }\n  }, {\n    key: \"getPostData\",\n    value: function getPostData(module, params) {\n      params.module = module;\n      params.apikey = this.apiKey;\n      return params;\n    }\n  }, {\n    key: \"fetch\",\n    value: function fetch(module, params, post) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var _this2 = this;\n        var url, payload, procFunc, connection, payloadStr, result;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                url = post ? this.getPostUrl() : this.getUrl(module, params);\n                payload = post ? this.getPostData(module, params) : null;\n                procFunc = module === \"proxy\" ? getJsonResult : getResult;\n                this.emit(\"debug\", {\n                  action: \"request\",\n                  request: url,\n                  provider: this\n                });\n                connection = {\n                  url: url,\n                  throttleSlotInterval: 1000,\n                  throttleCallback: function throttleCallback(attempt, url) {\n                    if (_this2.isCommunityResource()) {\n                      showThrottleMessage();\n                    }\n                    return Promise.resolve(true);\n                  }\n                };\n                payloadStr = null;\n                if (payload) {\n                  connection.headers = {\n                    \"content-type\": \"application/x-www-form-urlencoded; charset=UTF-8\"\n                  };\n                  payloadStr = Object.keys(payload).map(function (key) {\n                    return \"\".concat(key, \"=\").concat(payload[key]);\n                  }).join(\"&\");\n                }\n                _context.next = 9;\n                return fetchJson(connection, payloadStr, procFunc || getJsonResult);\n              case 9:\n                result = _context.sent;\n                this.emit(\"debug\", {\n                  action: \"response\",\n                  request: url,\n                  response: deepCopy(result),\n                  provider: this\n                });\n                return _context.abrupt(\"return\", result);\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n    }\n  }, {\n    key: \"detectNetwork\",\n    value: function detectNetwork() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                return _context2.abrupt(\"return\", this.network);\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n    }\n  }, {\n    key: \"perform\",\n    value: function perform(method, params) {\n      var _this3 = this;\n      var _super = Object.create(null, {\n        perform: {\n          get: function get() {\n            return _get(_getPrototypeOf(EtherscanProvider.prototype), \"perform\", _this3);\n          }\n        }\n      });\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var postData, _postData, args, topic0, logs, blocks, i, log, block;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.t0 = method;\n                _context3.next = _context3.t0 === \"getBlockNumber\" ? 3 : _context3.t0 === \"getGasPrice\" ? 4 : _context3.t0 === \"getBalance\" ? 5 : _context3.t0 === \"getTransactionCount\" ? 6 : _context3.t0 === \"getCode\" ? 7 : _context3.t0 === \"getStorageAt\" ? 8 : _context3.t0 === \"sendTransaction\" ? 9 : _context3.t0 === \"getBlock\" ? 10 : _context3.t0 === \"getTransaction\" ? 13 : _context3.t0 === \"getTransactionReceipt\" ? 14 : _context3.t0 === \"call\" ? 15 : _context3.t0 === \"estimateGas\" ? 29 : _context3.t0 === \"getLogs\" ? 41 : _context3.t0 === \"getEtherPrice\" ? 65 : 72;\n                break;\n              case 3:\n                return _context3.abrupt(\"return\", this.fetch(\"proxy\", {\n                  action: \"eth_blockNumber\"\n                }));\n              case 4:\n                return _context3.abrupt(\"return\", this.fetch(\"proxy\", {\n                  action: \"eth_gasPrice\"\n                }));\n              case 5:\n                return _context3.abrupt(\"return\", this.fetch(\"account\", {\n                  action: \"balance\",\n                  address: params.address,\n                  tag: params.blockTag\n                }));\n              case 6:\n                return _context3.abrupt(\"return\", this.fetch(\"proxy\", {\n                  action: \"eth_getTransactionCount\",\n                  address: params.address,\n                  tag: params.blockTag\n                }));\n              case 7:\n                return _context3.abrupt(\"return\", this.fetch(\"proxy\", {\n                  action: \"eth_getCode\",\n                  address: params.address,\n                  tag: params.blockTag\n                }));\n              case 8:\n                return _context3.abrupt(\"return\", this.fetch(\"proxy\", {\n                  action: \"eth_getStorageAt\",\n                  address: params.address,\n                  position: params.position,\n                  tag: params.blockTag\n                }));\n              case 9:\n                return _context3.abrupt(\"return\", this.fetch(\"proxy\", {\n                  action: \"eth_sendRawTransaction\",\n                  hex: params.signedTransaction\n                }, true).catch(function (error) {\n                  return checkError(\"sendTransaction\", error, params.signedTransaction);\n                }));\n              case 10:\n                if (!params.blockTag) {\n                  _context3.next = 12;\n                  break;\n                }\n                return _context3.abrupt(\"return\", this.fetch(\"proxy\", {\n                  action: \"eth_getBlockByNumber\",\n                  tag: params.blockTag,\n                  boolean: params.includeTransactions ? \"true\" : \"false\"\n                }));\n              case 12:\n                throw new Error(\"getBlock by blockHash not implemented\");\n              case 13:\n                return _context3.abrupt(\"return\", this.fetch(\"proxy\", {\n                  action: \"eth_getTransactionByHash\",\n                  txhash: params.transactionHash\n                }));\n              case 14:\n                return _context3.abrupt(\"return\", this.fetch(\"proxy\", {\n                  action: \"eth_getTransactionReceipt\",\n                  txhash: params.transactionHash\n                }));\n              case 15:\n                if (!(params.blockTag !== \"latest\")) {\n                  _context3.next = 17;\n                  break;\n                }\n                throw new Error(\"EtherscanProvider does not support blockTag for call\");\n              case 17:\n                postData = getTransactionPostData(params.transaction);\n                postData.module = \"proxy\";\n                postData.action = \"eth_call\";\n                _context3.prev = 20;\n                _context3.next = 23;\n                return this.fetch(\"proxy\", postData, true);\n              case 23:\n                return _context3.abrupt(\"return\", _context3.sent);\n              case 26:\n                _context3.prev = 26;\n                _context3.t1 = _context3[\"catch\"](20);\n                return _context3.abrupt(\"return\", checkError(\"call\", _context3.t1, params.transaction));\n              case 29:\n                _postData = getTransactionPostData(params.transaction);\n                _postData.module = \"proxy\";\n                _postData.action = \"eth_estimateGas\";\n                _context3.prev = 32;\n                _context3.next = 35;\n                return this.fetch(\"proxy\", _postData, true);\n              case 35:\n                return _context3.abrupt(\"return\", _context3.sent);\n              case 38:\n                _context3.prev = 38;\n                _context3.t2 = _context3[\"catch\"](32);\n                return _context3.abrupt(\"return\", checkError(\"estimateGas\", _context3.t2, params.transaction));\n              case 41:\n                args = {\n                  action: \"getLogs\"\n                };\n                if (params.filter.fromBlock) {\n                  args.fromBlock = checkLogTag(params.filter.fromBlock);\n                }\n                if (params.filter.toBlock) {\n                  args.toBlock = checkLogTag(params.filter.toBlock);\n                }\n                if (params.filter.address) {\n                  args.address = params.filter.address;\n                }\n                // @TODO: We can handle slightly more complicated logs using the logs API\n                if (params.filter.topics && params.filter.topics.length > 0) {\n                  if (params.filter.topics.length > 1) {\n                    logger.throwError(\"unsupported topic count\", Logger.errors.UNSUPPORTED_OPERATION, {\n                      topics: params.filter.topics\n                    });\n                  }\n                  if (params.filter.topics.length === 1) {\n                    topic0 = params.filter.topics[0];\n                    if (typeof topic0 !== \"string\" || topic0.length !== 66) {\n                      logger.throwError(\"unsupported topic format\", Logger.errors.UNSUPPORTED_OPERATION, {\n                        topic0: topic0\n                      });\n                    }\n                    args.topic0 = topic0;\n                  }\n                }\n                _context3.next = 48;\n                return this.fetch(\"logs\", args);\n              case 48:\n                logs = _context3.sent;\n                // Cache txHash => blockHash\n                blocks = {}; // Add any missing blockHash to the logs\n                i = 0;\n              case 51:\n                if (!(i < logs.length)) {\n                  _context3.next = 64;\n                  break;\n                }\n                log = logs[i];\n                if (!(log.blockHash != null)) {\n                  _context3.next = 55;\n                  break;\n                }\n                return _context3.abrupt(\"continue\", 61);\n              case 55:\n                if (!(blocks[log.blockNumber] == null)) {\n                  _context3.next = 60;\n                  break;\n                }\n                _context3.next = 58;\n                return this.getBlock(log.blockNumber);\n              case 58:\n                block = _context3.sent;\n                if (block) {\n                  blocks[log.blockNumber] = block.hash;\n                }\n              case 60:\n                log.blockHash = blocks[log.blockNumber];\n              case 61:\n                i++;\n                _context3.next = 51;\n                break;\n              case 64:\n                return _context3.abrupt(\"return\", logs);\n              case 65:\n                if (!(this.network.name !== \"homestead\")) {\n                  _context3.next = 67;\n                  break;\n                }\n                return _context3.abrupt(\"return\", 0.0);\n              case 67:\n                _context3.t3 = parseFloat;\n                _context3.next = 70;\n                return this.fetch(\"stats\", {\n                  action: \"ethprice\"\n                });\n              case 70:\n                _context3.t4 = _context3.sent.ethusd;\n                return _context3.abrupt(\"return\", (0, _context3.t3)(_context3.t4));\n              case 72:\n                return _context3.abrupt(\"break\", 73);\n              case 73:\n                return _context3.abrupt(\"return\", _super.perform.call(this, method, params));\n              case 74:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[20, 26], [32, 38]]);\n      }));\n    }\n    // Note: The `page` page parameter only allows pagination within the\n    //       10,000 window available without a page and offset parameter\n    //       Error: Result window is too large, PageNo x Offset size must\n    //              be less than or equal to 10000\n  }, {\n    key: \"getHistory\",\n    value: function getHistory(addressOrName, startBlock, endBlock) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var _this4 = this;\n        var params, result;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this.resolveName(addressOrName);\n              case 2:\n                _context4.t0 = _context4.sent;\n                _context4.t1 = startBlock == null ? 0 : startBlock;\n                _context4.t2 = endBlock == null ? 99999999 : endBlock;\n                params = {\n                  action: \"txlist\",\n                  address: _context4.t0,\n                  startblock: _context4.t1,\n                  endblock: _context4.t2,\n                  sort: \"asc\"\n                };\n                _context4.next = 8;\n                return this.fetch(\"account\", params);\n              case 8:\n                result = _context4.sent;\n                return _context4.abrupt(\"return\", result.map(function (tx) {\n                  [\"contractAddress\", \"to\"].forEach(function (key) {\n                    if (tx[key] == \"\") {\n                      delete tx[key];\n                    }\n                  });\n                  if (tx.creates == null && tx.contractAddress != null) {\n                    tx.creates = tx.contractAddress;\n                  }\n                  var item = _this4.formatter.transactionResponse(tx);\n                  if (tx.timeStamp) {\n                    item.timestamp = parseInt(tx.timeStamp);\n                  }\n                  return item;\n                }));\n              case 10:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n    }\n  }, {\n    key: \"isCommunityResource\",\n    value: function isCommunityResource() {\n      return this.apiKey === defaultApiKey;\n    }\n  }]);\n  return EtherscanProvider;\n}(BaseProvider);","map":{"version":3,"sources":["../src.ts/etherscan-provider.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { hexlify, hexValue, isHexString } from \"@ethersproject/bytes\";\nimport { deepCopy, defineReadOnly } from \"@ethersproject/properties\";\nimport { accessListify } from \"@ethersproject/transactions\";\nimport { fetchJson } from \"@ethersproject/web\";\nimport { showThrottleMessage } from \"./formatter\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { BaseProvider } from \"./base-provider\";\n// The transaction has already been sanitized by the calls in Provider\nfunction getTransactionPostData(transaction) {\n    const result = {};\n    for (let key in transaction) {\n        if (transaction[key] == null) {\n            continue;\n        }\n        let value = transaction[key];\n        if (key === \"type\" && value === 0) {\n            continue;\n        }\n        // Quantity-types require no leading zero, unless 0\n        if ({ type: true, gasLimit: true, gasPrice: true, maxFeePerGs: true, maxPriorityFeePerGas: true, nonce: true, value: true }[key]) {\n            value = hexValue(hexlify(value));\n        }\n        else if (key === \"accessList\") {\n            value = \"[\" + accessListify(value).map((set) => {\n                return `{address:\"${set.address}\",storageKeys:[\"${set.storageKeys.join('\",\"')}\"]}`;\n            }).join(\",\") + \"]\";\n        }\n        else {\n            value = hexlify(value);\n        }\n        result[key] = value;\n    }\n    return result;\n}\nfunction getResult(result) {\n    // getLogs, getHistory have weird success responses\n    if (result.status == 0 && (result.message === \"No records found\" || result.message === \"No transactions found\")) {\n        return result.result;\n    }\n    if (result.status != 1 || result.message != \"OK\") {\n        const error = new Error(\"invalid response\");\n        error.result = JSON.stringify(result);\n        if ((result.result || \"\").toLowerCase().indexOf(\"rate limit\") >= 0) {\n            error.throttleRetry = true;\n        }\n        throw error;\n    }\n    return result.result;\n}\nfunction getJsonResult(result) {\n    // This response indicates we are being throttled\n    if (result && result.status == 0 && result.message == \"NOTOK\" && (result.result || \"\").toLowerCase().indexOf(\"rate limit\") >= 0) {\n        const error = new Error(\"throttled response\");\n        error.result = JSON.stringify(result);\n        error.throttleRetry = true;\n        throw error;\n    }\n    if (result.jsonrpc != \"2.0\") {\n        // @TODO: not any\n        const error = new Error(\"invalid response\");\n        error.result = JSON.stringify(result);\n        throw error;\n    }\n    if (result.error) {\n        // @TODO: not any\n        const error = new Error(result.error.message || \"unknown error\");\n        if (result.error.code) {\n            error.code = result.error.code;\n        }\n        if (result.error.data) {\n            error.data = result.error.data;\n        }\n        throw error;\n    }\n    return result.result;\n}\n// The blockTag was normalized as a string by the Provider pre-perform operations\nfunction checkLogTag(blockTag) {\n    if (blockTag === \"pending\") {\n        throw new Error(\"pending not supported\");\n    }\n    if (blockTag === \"latest\") {\n        return blockTag;\n    }\n    return parseInt(blockTag.substring(2), 16);\n}\nconst defaultApiKey = \"9D13ZE7XSBTJ94N9BNJ2MA33VMAY2YPIRB\";\nfunction checkError(method, error, transaction) {\n    // Undo the \"convenience\" some nodes are attempting to prevent backwards\n    // incompatibility; maybe for v6 consider forwarding reverts as errors\n    if (method === \"call\" && error.code === Logger.errors.SERVER_ERROR) {\n        const e = error.error;\n        // Etherscan keeps changing their string\n        if (e && (e.message.match(/reverted/i) || e.message.match(/VM execution error/i))) {\n            // Etherscan prefixes the data like \"Reverted 0x1234\"\n            let data = e.data;\n            if (data) {\n                data = \"0x\" + data.replace(/^.*0x/i, \"\");\n            }\n            if (isHexString(data)) {\n                return data;\n            }\n            logger.throwError(\"missing revert data in call exception\", Logger.errors.CALL_EXCEPTION, {\n                error, data: \"0x\"\n            });\n        }\n    }\n    // Get the message from any nested error structure\n    let message = error.message;\n    if (error.code === Logger.errors.SERVER_ERROR) {\n        if (error.error && typeof (error.error.message) === \"string\") {\n            message = error.error.message;\n        }\n        else if (typeof (error.body) === \"string\") {\n            message = error.body;\n        }\n        else if (typeof (error.responseText) === \"string\") {\n            message = error.responseText;\n        }\n    }\n    message = (message || \"\").toLowerCase();\n    // \"Insufficient funds. The account you tried to send transaction from does not have enough funds. Required 21464000000000 and got: 0\"\n    if (message.match(/insufficient funds/)) {\n        logger.throwError(\"insufficient funds for intrinsic transaction cost\", Logger.errors.INSUFFICIENT_FUNDS, {\n            error, method, transaction\n        });\n    }\n    // \"Transaction with the same hash was already imported.\"\n    if (message.match(/same hash was already imported|transaction nonce is too low|nonce too low/)) {\n        logger.throwError(\"nonce has already been used\", Logger.errors.NONCE_EXPIRED, {\n            error, method, transaction\n        });\n    }\n    // \"Transaction gas price is too low. There is another transaction with same nonce in the queue. Try increasing the gas price or incrementing the nonce.\"\n    if (message.match(/another transaction with same nonce/)) {\n        logger.throwError(\"replacement fee too low\", Logger.errors.REPLACEMENT_UNDERPRICED, {\n            error, method, transaction\n        });\n    }\n    if (message.match(/execution failed due to an exception|execution reverted/)) {\n        logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n            error, method, transaction\n        });\n    }\n    throw error;\n}\nexport class EtherscanProvider extends BaseProvider {\n    constructor(network, apiKey) {\n        logger.checkNew(new.target, EtherscanProvider);\n        super(network);\n        defineReadOnly(this, \"baseUrl\", this.getBaseUrl());\n        defineReadOnly(this, \"apiKey\", apiKey || defaultApiKey);\n    }\n    getBaseUrl() {\n        switch (this.network ? this.network.name : \"invalid\") {\n            case \"homestead\":\n                return \"https:/\\/api.etherscan.io\";\n            case \"ropsten\":\n                return \"https:/\\/api-ropsten.etherscan.io\";\n            case \"rinkeby\":\n                return \"https:/\\/api-rinkeby.etherscan.io\";\n            case \"kovan\":\n                return \"https:/\\/api-kovan.etherscan.io\";\n            case \"goerli\":\n                return \"https:/\\/api-goerli.etherscan.io\";\n            default:\n        }\n        return logger.throwArgumentError(\"unsupported network\", \"network\", name);\n    }\n    getUrl(module, params) {\n        const query = Object.keys(params).reduce((accum, key) => {\n            const value = params[key];\n            if (value != null) {\n                accum += `&${key}=${value}`;\n            }\n            return accum;\n        }, \"\");\n        const apiKey = ((this.apiKey) ? `&apikey=${this.apiKey}` : \"\");\n        return `${this.baseUrl}/api?module=${module}${query}${apiKey}`;\n    }\n    getPostUrl() {\n        return `${this.baseUrl}/api`;\n    }\n    getPostData(module, params) {\n        params.module = module;\n        params.apikey = this.apiKey;\n        return params;\n    }\n    fetch(module, params, post) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const url = (post ? this.getPostUrl() : this.getUrl(module, params));\n            const payload = (post ? this.getPostData(module, params) : null);\n            const procFunc = (module === \"proxy\") ? getJsonResult : getResult;\n            this.emit(\"debug\", {\n                action: \"request\",\n                request: url,\n                provider: this\n            });\n            const connection = {\n                url: url,\n                throttleSlotInterval: 1000,\n                throttleCallback: (attempt, url) => {\n                    if (this.isCommunityResource()) {\n                        showThrottleMessage();\n                    }\n                    return Promise.resolve(true);\n                }\n            };\n            let payloadStr = null;\n            if (payload) {\n                connection.headers = { \"content-type\": \"application/x-www-form-urlencoded; charset=UTF-8\" };\n                payloadStr = Object.keys(payload).map((key) => {\n                    return `${key}=${payload[key]}`;\n                }).join(\"&\");\n            }\n            const result = yield fetchJson(connection, payloadStr, procFunc || getJsonResult);\n            this.emit(\"debug\", {\n                action: \"response\",\n                request: url,\n                response: deepCopy(result),\n                provider: this\n            });\n            return result;\n        });\n    }\n    detectNetwork() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.network;\n        });\n    }\n    perform(method, params) {\n        const _super = Object.create(null, {\n            perform: { get: () => super.perform }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            switch (method) {\n                case \"getBlockNumber\":\n                    return this.fetch(\"proxy\", { action: \"eth_blockNumber\" });\n                case \"getGasPrice\":\n                    return this.fetch(\"proxy\", { action: \"eth_gasPrice\" });\n                case \"getBalance\":\n                    // Returns base-10 result\n                    return this.fetch(\"account\", {\n                        action: \"balance\",\n                        address: params.address,\n                        tag: params.blockTag\n                    });\n                case \"getTransactionCount\":\n                    return this.fetch(\"proxy\", {\n                        action: \"eth_getTransactionCount\",\n                        address: params.address,\n                        tag: params.blockTag\n                    });\n                case \"getCode\":\n                    return this.fetch(\"proxy\", {\n                        action: \"eth_getCode\",\n                        address: params.address,\n                        tag: params.blockTag\n                    });\n                case \"getStorageAt\":\n                    return this.fetch(\"proxy\", {\n                        action: \"eth_getStorageAt\",\n                        address: params.address,\n                        position: params.position,\n                        tag: params.blockTag\n                    });\n                case \"sendTransaction\":\n                    return this.fetch(\"proxy\", {\n                        action: \"eth_sendRawTransaction\",\n                        hex: params.signedTransaction\n                    }, true).catch((error) => {\n                        return checkError(\"sendTransaction\", error, params.signedTransaction);\n                    });\n                case \"getBlock\":\n                    if (params.blockTag) {\n                        return this.fetch(\"proxy\", {\n                            action: \"eth_getBlockByNumber\",\n                            tag: params.blockTag,\n                            boolean: (params.includeTransactions ? \"true\" : \"false\")\n                        });\n                    }\n                    throw new Error(\"getBlock by blockHash not implemented\");\n                case \"getTransaction\":\n                    return this.fetch(\"proxy\", {\n                        action: \"eth_getTransactionByHash\",\n                        txhash: params.transactionHash\n                    });\n                case \"getTransactionReceipt\":\n                    return this.fetch(\"proxy\", {\n                        action: \"eth_getTransactionReceipt\",\n                        txhash: params.transactionHash\n                    });\n                case \"call\": {\n                    if (params.blockTag !== \"latest\") {\n                        throw new Error(\"EtherscanProvider does not support blockTag for call\");\n                    }\n                    const postData = getTransactionPostData(params.transaction);\n                    postData.module = \"proxy\";\n                    postData.action = \"eth_call\";\n                    try {\n                        return yield this.fetch(\"proxy\", postData, true);\n                    }\n                    catch (error) {\n                        return checkError(\"call\", error, params.transaction);\n                    }\n                }\n                case \"estimateGas\": {\n                    const postData = getTransactionPostData(params.transaction);\n                    postData.module = \"proxy\";\n                    postData.action = \"eth_estimateGas\";\n                    try {\n                        return yield this.fetch(\"proxy\", postData, true);\n                    }\n                    catch (error) {\n                        return checkError(\"estimateGas\", error, params.transaction);\n                    }\n                }\n                case \"getLogs\": {\n                    const args = { action: \"getLogs\" };\n                    if (params.filter.fromBlock) {\n                        args.fromBlock = checkLogTag(params.filter.fromBlock);\n                    }\n                    if (params.filter.toBlock) {\n                        args.toBlock = checkLogTag(params.filter.toBlock);\n                    }\n                    if (params.filter.address) {\n                        args.address = params.filter.address;\n                    }\n                    // @TODO: We can handle slightly more complicated logs using the logs API\n                    if (params.filter.topics && params.filter.topics.length > 0) {\n                        if (params.filter.topics.length > 1) {\n                            logger.throwError(\"unsupported topic count\", Logger.errors.UNSUPPORTED_OPERATION, { topics: params.filter.topics });\n                        }\n                        if (params.filter.topics.length === 1) {\n                            const topic0 = params.filter.topics[0];\n                            if (typeof (topic0) !== \"string\" || topic0.length !== 66) {\n                                logger.throwError(\"unsupported topic format\", Logger.errors.UNSUPPORTED_OPERATION, { topic0: topic0 });\n                            }\n                            args.topic0 = topic0;\n                        }\n                    }\n                    const logs = yield this.fetch(\"logs\", args);\n                    // Cache txHash => blockHash\n                    let blocks = {};\n                    // Add any missing blockHash to the logs\n                    for (let i = 0; i < logs.length; i++) {\n                        const log = logs[i];\n                        if (log.blockHash != null) {\n                            continue;\n                        }\n                        if (blocks[log.blockNumber] == null) {\n                            const block = yield this.getBlock(log.blockNumber);\n                            if (block) {\n                                blocks[log.blockNumber] = block.hash;\n                            }\n                        }\n                        log.blockHash = blocks[log.blockNumber];\n                    }\n                    return logs;\n                }\n                case \"getEtherPrice\":\n                    if (this.network.name !== \"homestead\") {\n                        return 0.0;\n                    }\n                    return parseFloat((yield this.fetch(\"stats\", { action: \"ethprice\" })).ethusd);\n                default:\n                    break;\n            }\n            return _super.perform.call(this, method, params);\n        });\n    }\n    // Note: The `page` page parameter only allows pagination within the\n    //       10,000 window available without a page and offset parameter\n    //       Error: Result window is too large, PageNo x Offset size must\n    //              be less than or equal to 10000\n    getHistory(addressOrName, startBlock, endBlock) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const params = {\n                action: \"txlist\",\n                address: (yield this.resolveName(addressOrName)),\n                startblock: ((startBlock == null) ? 0 : startBlock),\n                endblock: ((endBlock == null) ? 99999999 : endBlock),\n                sort: \"asc\"\n            };\n            const result = yield this.fetch(\"account\", params);\n            return result.map((tx) => {\n                [\"contractAddress\", \"to\"].forEach(function (key) {\n                    if (tx[key] == \"\") {\n                        delete tx[key];\n                    }\n                });\n                if (tx.creates == null && tx.contractAddress != null) {\n                    tx.creates = tx.contractAddress;\n                }\n                const item = this.formatter.transactionResponse(tx);\n                if (tx.timeStamp) {\n                    item.timestamp = parseInt(tx.timeStamp);\n                }\n                return item;\n            });\n        });\n    }\n    isCommunityResource() {\n        return (this.apiKey === defaultApiKey);\n    }\n}\n//# sourceMappingURL=etherscan-provider.js.map"]},"metadata":{},"sourceType":"module"}