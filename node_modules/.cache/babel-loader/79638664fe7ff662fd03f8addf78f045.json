{"ast":null,"code":"\"use strict\";\n\nimport _assertThisInitialized from \"/Users/taykim/Desktop/cs98/cs98_fall_demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _regeneratorRuntime from \"/Users/taykim/Desktop/cs98/cs98_fall_demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _classCallCheck from \"/Users/taykim/Desktop/cs98/cs98_fall_demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/taykim/Desktop/cs98/cs98_fall_demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/Users/taykim/Desktop/cs98/cs98_fall_demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/taykim/Desktop/cs98/cs98_fall_demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/taykim/Desktop/cs98/cs98_fall_demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/taykim/Desktop/cs98/cs98_fall_demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport { defineReadOnly, getStatic } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nvar logger = new Logger(version);\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\n// A StaticJsonRpcProvider is useful when you *know* for certain that\n// the backend will never change, as it never calls eth_chainId to\n// verify its backend. However, if the backend does change, the effects\n// are undefined and may include:\n// - inconsistent results\n// - locking up the UI\n// - block skew warnings\n// - wrong results\n// If the network is not explicit (i.e. auto-detection is expected), the\n// node MUST be running and available to respond to requests BEFORE this\n// is instantiated.\nexport var StaticJsonRpcProvider = /*#__PURE__*/function (_JsonRpcProvider) {\n  _inherits(StaticJsonRpcProvider, _JsonRpcProvider);\n  var _super2 = _createSuper(StaticJsonRpcProvider);\n  function StaticJsonRpcProvider() {\n    _classCallCheck(this, StaticJsonRpcProvider);\n    return _super2.apply(this, arguments);\n  }\n  _createClass(StaticJsonRpcProvider, [{\n    key: \"detectNetwork\",\n    value: function detectNetwork() {\n      var _this = this;\n      var _super = Object.create(null, {\n        detectNetwork: {\n          get: function get() {\n            return _get(_getPrototypeOf(StaticJsonRpcProvider.prototype), \"detectNetwork\", _this);\n          }\n        }\n      });\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var network;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                network = this.network;\n                if (!(network == null)) {\n                  _context.next = 7;\n                  break;\n                }\n                _context.next = 4;\n                return _super.detectNetwork.call(this);\n              case 4:\n                network = _context.sent;\n                if (!network) {\n                  logger.throwError(\"no network detected\", Logger.errors.UNKNOWN_ERROR, {});\n                }\n                // If still not set, set it\n                if (this._network == null) {\n                  // A static network does not support \"any\"\n                  defineReadOnly(this, \"_network\", network);\n                  this.emit(\"network\", network, null);\n                }\n              case 7:\n                return _context.abrupt(\"return\", network);\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n    }\n  }]);\n  return StaticJsonRpcProvider;\n}(JsonRpcProvider);\nexport var UrlJsonRpcProvider = /*#__PURE__*/function (_StaticJsonRpcProvide) {\n  _inherits(UrlJsonRpcProvider, _StaticJsonRpcProvide);\n  var _super3 = _createSuper(UrlJsonRpcProvider);\n  function UrlJsonRpcProvider(network, apiKey) {\n    var _this2;\n    _classCallCheck(this, UrlJsonRpcProvider);\n    logger.checkAbstract(this instanceof UrlJsonRpcProvider ? this.constructor : void 0, UrlJsonRpcProvider);\n    // Normalize the Network and API Key\n    network = getStatic(this instanceof UrlJsonRpcProvider ? this.constructor : void 0, \"getNetwork\")(network);\n    apiKey = getStatic(this instanceof UrlJsonRpcProvider ? this.constructor : void 0, \"getApiKey\")(apiKey);\n    var connection = getStatic(this instanceof UrlJsonRpcProvider ? this.constructor : void 0, \"getUrl\")(network, apiKey);\n    _this2 = _super3.call(this, connection, network);\n    if (typeof apiKey === \"string\") {\n      defineReadOnly(_assertThisInitialized(_this2), \"apiKey\", apiKey);\n    } else if (apiKey != null) {\n      Object.keys(apiKey).forEach(function (key) {\n        defineReadOnly(_assertThisInitialized(_this2), key, apiKey[key]);\n      });\n    }\n    return _this2;\n  }\n  _createClass(UrlJsonRpcProvider, [{\n    key: \"_startPending\",\n    value: function _startPending() {\n      logger.warn(\"WARNING: API provider does not support pending filters\");\n    }\n  }, {\n    key: \"isCommunityResource\",\n    value: function isCommunityResource() {\n      return false;\n    }\n  }, {\n    key: \"getSigner\",\n    value: function getSigner(address) {\n      return logger.throwError(\"API provider does not support signing\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"getSigner\"\n      });\n    }\n  }, {\n    key: \"listAccounts\",\n    value: function listAccounts() {\n      return Promise.resolve([]);\n    }\n    // Return a defaultApiKey if null, otherwise validate the API key\n  }], [{\n    key: \"getApiKey\",\n    value: function getApiKey(apiKey) {\n      return apiKey;\n    }\n    // Returns the url or connection for the given network and API key. The\n    // API key will have been sanitized by the getApiKey first, so any validation\n    // or transformations can be done there.\n  }, {\n    key: \"getUrl\",\n    value: function getUrl(network, apiKey) {\n      return logger.throwError(\"not implemented; sub-classes must override getUrl\", Logger.errors.NOT_IMPLEMENTED, {\n        operation: \"getUrl\"\n      });\n    }\n  }]);\n  return UrlJsonRpcProvider;\n}(StaticJsonRpcProvider);","map":{"version":3,"sources":["../src.ts/url-json-rpc-provider.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { defineReadOnly, getStatic } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\n// A StaticJsonRpcProvider is useful when you *know* for certain that\n// the backend will never change, as it never calls eth_chainId to\n// verify its backend. However, if the backend does change, the effects\n// are undefined and may include:\n// - inconsistent results\n// - locking up the UI\n// - block skew warnings\n// - wrong results\n// If the network is not explicit (i.e. auto-detection is expected), the\n// node MUST be running and available to respond to requests BEFORE this\n// is instantiated.\nexport class StaticJsonRpcProvider extends JsonRpcProvider {\n    detectNetwork() {\n        const _super = Object.create(null, {\n            detectNetwork: { get: () => super.detectNetwork }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            let network = this.network;\n            if (network == null) {\n                network = yield _super.detectNetwork.call(this);\n                if (!network) {\n                    logger.throwError(\"no network detected\", Logger.errors.UNKNOWN_ERROR, {});\n                }\n                // If still not set, set it\n                if (this._network == null) {\n                    // A static network does not support \"any\"\n                    defineReadOnly(this, \"_network\", network);\n                    this.emit(\"network\", network, null);\n                }\n            }\n            return network;\n        });\n    }\n}\nexport class UrlJsonRpcProvider extends StaticJsonRpcProvider {\n    constructor(network, apiKey) {\n        logger.checkAbstract(new.target, UrlJsonRpcProvider);\n        // Normalize the Network and API Key\n        network = getStatic(new.target, \"getNetwork\")(network);\n        apiKey = getStatic(new.target, \"getApiKey\")(apiKey);\n        const connection = getStatic(new.target, \"getUrl\")(network, apiKey);\n        super(connection, network);\n        if (typeof (apiKey) === \"string\") {\n            defineReadOnly(this, \"apiKey\", apiKey);\n        }\n        else if (apiKey != null) {\n            Object.keys(apiKey).forEach((key) => {\n                defineReadOnly(this, key, apiKey[key]);\n            });\n        }\n    }\n    _startPending() {\n        logger.warn(\"WARNING: API provider does not support pending filters\");\n    }\n    isCommunityResource() {\n        return false;\n    }\n    getSigner(address) {\n        return logger.throwError(\"API provider does not support signing\", Logger.errors.UNSUPPORTED_OPERATION, { operation: \"getSigner\" });\n    }\n    listAccounts() {\n        return Promise.resolve([]);\n    }\n    // Return a defaultApiKey if null, otherwise validate the API key\n    static getApiKey(apiKey) {\n        return apiKey;\n    }\n    // Returns the url or connection for the given network and API key. The\n    // API key will have been sanitized by the getApiKey first, so any validation\n    // or transformations can be done there.\n    static getUrl(network, apiKey) {\n        return logger.throwError(\"not implemented; sub-classes must override getUrl\", Logger.errors.NOT_IMPLEMENTED, {\n            operation: \"getUrl\"\n        });\n    }\n}\n//# sourceMappingURL=url-json-rpc-provider.js.map"]},"metadata":{},"sourceType":"module"}