{"ast":null,"code":"\"use strict\";\n\nimport _classCallCheck from \"/Users/taykim/Desktop/cs98/project-22f-zk-vote/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/taykim/Desktop/cs98/project-22f-zk-vote/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nvar _permanentCensorErrors = false;\nvar _censorErrors = false;\nvar LogLevels = {\n  debug: 1,\n  \"default\": 2,\n  info: 2,\n  warning: 3,\n  error: 4,\n  off: 5\n};\nvar _logLevel = LogLevels[\"default\"];\nimport { version } from \"./_version\";\nvar _globalLogger = null;\nfunction _checkNormalize() {\n  try {\n    var missing = [];\n    // Make sure all forms of normalization are supported\n    [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].forEach(function (form) {\n      try {\n        if (\"test\".normalize(form) !== \"test\") {\n          throw new Error(\"bad normalize\");\n        }\n        ;\n      } catch (error) {\n        missing.push(form);\n      }\n    });\n    if (missing.length) {\n      throw new Error(\"missing \" + missing.join(\", \"));\n    }\n    if (String.fromCharCode(0xe9).normalize(\"NFD\") !== String.fromCharCode(0x65, 0x0301)) {\n      throw new Error(\"broken implementation\");\n    }\n  } catch (error) {\n    return error.message;\n  }\n  return null;\n}\nvar _normalizeError = _checkNormalize();\nexport var LogLevel;\n(function (LogLevel) {\n  LogLevel[\"DEBUG\"] = \"DEBUG\";\n  LogLevel[\"INFO\"] = \"INFO\";\n  LogLevel[\"WARNING\"] = \"WARNING\";\n  LogLevel[\"ERROR\"] = \"ERROR\";\n  LogLevel[\"OFF\"] = \"OFF\";\n})(LogLevel || (LogLevel = {}));\nexport var ErrorCode;\n(function (ErrorCode) {\n  ///////////////////\n  // Generic Errors\n  // Unknown Error\n  ErrorCode[\"UNKNOWN_ERROR\"] = \"UNKNOWN_ERROR\";\n  // Not Implemented\n  ErrorCode[\"NOT_IMPLEMENTED\"] = \"NOT_IMPLEMENTED\";\n  // Unsupported Operation\n  //   - operation\n  ErrorCode[\"UNSUPPORTED_OPERATION\"] = \"UNSUPPORTED_OPERATION\";\n  // Network Error (i.e. Ethereum Network, such as an invalid chain ID)\n  //   - event (\"noNetwork\" is not re-thrown in provider.ready; otherwise thrown)\n  ErrorCode[\"NETWORK_ERROR\"] = \"NETWORK_ERROR\";\n  // Some sort of bad response from the server\n  ErrorCode[\"SERVER_ERROR\"] = \"SERVER_ERROR\";\n  // Timeout\n  ErrorCode[\"TIMEOUT\"] = \"TIMEOUT\";\n  ///////////////////\n  // Operational  Errors\n  // Buffer Overrun\n  ErrorCode[\"BUFFER_OVERRUN\"] = \"BUFFER_OVERRUN\";\n  // Numeric Fault\n  //   - operation: the operation being executed\n  //   - fault: the reason this faulted\n  ErrorCode[\"NUMERIC_FAULT\"] = \"NUMERIC_FAULT\";\n  ///////////////////\n  // Argument Errors\n  // Missing new operator to an object\n  //  - name: The name of the class\n  ErrorCode[\"MISSING_NEW\"] = \"MISSING_NEW\";\n  // Invalid argument (e.g. value is incompatible with type) to a function:\n  //   - argument: The argument name that was invalid\n  //   - value: The value of the argument\n  ErrorCode[\"INVALID_ARGUMENT\"] = \"INVALID_ARGUMENT\";\n  // Missing argument to a function:\n  //   - count: The number of arguments received\n  //   - expectedCount: The number of arguments expected\n  ErrorCode[\"MISSING_ARGUMENT\"] = \"MISSING_ARGUMENT\";\n  // Too many arguments\n  //   - count: The number of arguments received\n  //   - expectedCount: The number of arguments expected\n  ErrorCode[\"UNEXPECTED_ARGUMENT\"] = \"UNEXPECTED_ARGUMENT\";\n  ///////////////////\n  // Blockchain Errors\n  // Call exception\n  //  - transaction: the transaction\n  //  - address?: the contract address\n  //  - args?: The arguments passed into the function\n  //  - method?: The Solidity method signature\n  //  - errorSignature?: The EIP848 error signature\n  //  - errorArgs?: The EIP848 error parameters\n  //  - reason: The reason (only for EIP848 \"Error(string)\")\n  ErrorCode[\"CALL_EXCEPTION\"] = \"CALL_EXCEPTION\";\n  // Insufficient funds (< value + gasLimit * gasPrice)\n  //   - transaction: the transaction attempted\n  ErrorCode[\"INSUFFICIENT_FUNDS\"] = \"INSUFFICIENT_FUNDS\";\n  // Nonce has already been used\n  //   - transaction: the transaction attempted\n  ErrorCode[\"NONCE_EXPIRED\"] = \"NONCE_EXPIRED\";\n  // The replacement fee for the transaction is too low\n  //   - transaction: the transaction attempted\n  ErrorCode[\"REPLACEMENT_UNDERPRICED\"] = \"REPLACEMENT_UNDERPRICED\";\n  // The gas limit could not be estimated\n  //   - transaction: the transaction passed to estimateGas\n  ErrorCode[\"UNPREDICTABLE_GAS_LIMIT\"] = \"UNPREDICTABLE_GAS_LIMIT\";\n  // The transaction was replaced by one with a higher gas price\n  //   - reason: \"cancelled\", \"replaced\" or \"repriced\"\n  //   - cancelled: true if reason == \"cancelled\" or reason == \"replaced\")\n  //   - hash: original transaction hash\n  //   - replacement: the full TransactionsResponse for the replacement\n  //   - receipt: the receipt of the replacement\n  ErrorCode[\"TRANSACTION_REPLACED\"] = \"TRANSACTION_REPLACED\";\n  ///////////////////\n  // Interaction Errors\n  // The user rejected the action, such as signing a message or sending\n  // a transaction\n  ErrorCode[\"ACTION_REJECTED\"] = \"ACTION_REJECTED\";\n})(ErrorCode || (ErrorCode = {}));\n;\nvar HEX = \"0123456789abcdef\";\nexport var Logger = /*#__PURE__*/function () {\n  function Logger(version) {\n    _classCallCheck(this, Logger);\n    Object.defineProperty(this, \"version\", {\n      enumerable: true,\n      value: version,\n      writable: false\n    });\n  }\n  _createClass(Logger, [{\n    key: \"_log\",\n    value: function _log(logLevel, args) {\n      var level = logLevel.toLowerCase();\n      if (LogLevels[level] == null) {\n        this.throwArgumentError(\"invalid log level name\", \"logLevel\", logLevel);\n      }\n      if (_logLevel > LogLevels[level]) {\n        return;\n      }\n      console.log.apply(console, args);\n    }\n  }, {\n    key: \"debug\",\n    value: function debug() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      this._log(Logger.levels.DEBUG, args);\n    }\n  }, {\n    key: \"info\",\n    value: function info() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n      this._log(Logger.levels.INFO, args);\n    }\n  }, {\n    key: \"warn\",\n    value: function warn() {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n      this._log(Logger.levels.WARNING, args);\n    }\n  }, {\n    key: \"makeError\",\n    value: function makeError(message, code, params) {\n      // Errors are being censored\n      if (_censorErrors) {\n        return this.makeError(\"censored error\", code, {});\n      }\n      if (!code) {\n        code = Logger.errors.UNKNOWN_ERROR;\n      }\n      if (!params) {\n        params = {};\n      }\n      var messageDetails = [];\n      Object.keys(params).forEach(function (key) {\n        var value = params[key];\n        try {\n          if (value instanceof Uint8Array) {\n            var hex = \"\";\n            for (var i = 0; i < value.length; i++) {\n              hex += HEX[value[i] >> 4];\n              hex += HEX[value[i] & 0x0f];\n            }\n            messageDetails.push(key + \"=Uint8Array(0x\" + hex + \")\");\n          } else {\n            messageDetails.push(key + \"=\" + JSON.stringify(value));\n          }\n        } catch (error) {\n          messageDetails.push(key + \"=\" + JSON.stringify(params[key].toString()));\n        }\n      });\n      messageDetails.push(\"code=\".concat(code));\n      messageDetails.push(\"version=\".concat(this.version));\n      var reason = message;\n      var url = \"\";\n      switch (code) {\n        case ErrorCode.NUMERIC_FAULT:\n          {\n            url = \"NUMERIC_FAULT\";\n            var fault = message;\n            switch (fault) {\n              case \"overflow\":\n              case \"underflow\":\n              case \"division-by-zero\":\n                url += \"-\" + fault;\n                break;\n              case \"negative-power\":\n              case \"negative-width\":\n                url += \"-unsupported\";\n                break;\n              case \"unbound-bitwise-result\":\n                url += \"-unbound-result\";\n                break;\n            }\n            break;\n          }\n        case ErrorCode.CALL_EXCEPTION:\n        case ErrorCode.INSUFFICIENT_FUNDS:\n        case ErrorCode.MISSING_NEW:\n        case ErrorCode.NONCE_EXPIRED:\n        case ErrorCode.REPLACEMENT_UNDERPRICED:\n        case ErrorCode.TRANSACTION_REPLACED:\n        case ErrorCode.UNPREDICTABLE_GAS_LIMIT:\n          url = code;\n          break;\n      }\n      if (url) {\n        message += \" [ See: https:/\\/links.ethers.org/v5-errors-\" + url + \" ]\";\n      }\n      if (messageDetails.length) {\n        message += \" (\" + messageDetails.join(\", \") + \")\";\n      }\n      // @TODO: Any??\n      var error = new Error(message);\n      error.reason = reason;\n      error.code = code;\n      Object.keys(params).forEach(function (key) {\n        error[key] = params[key];\n      });\n      return error;\n    }\n  }, {\n    key: \"throwError\",\n    value: function throwError(message, code, params) {\n      throw this.makeError(message, code, params);\n    }\n  }, {\n    key: \"throwArgumentError\",\n    value: function throwArgumentError(message, name, value) {\n      return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {\n        argument: name,\n        value: value\n      });\n    }\n  }, {\n    key: \"assert\",\n    value: function assert(condition, message, code, params) {\n      if (!!condition) {\n        return;\n      }\n      this.throwError(message, code, params);\n    }\n  }, {\n    key: \"assertArgument\",\n    value: function assertArgument(condition, message, name, value) {\n      if (!!condition) {\n        return;\n      }\n      this.throwArgumentError(message, name, value);\n    }\n  }, {\n    key: \"checkNormalize\",\n    value: function checkNormalize(message) {\n      if (message == null) {\n        message = \"platform missing String.prototype.normalize\";\n      }\n      if (_normalizeError) {\n        this.throwError(\"platform missing String.prototype.normalize\", Logger.errors.UNSUPPORTED_OPERATION, {\n          operation: \"String.prototype.normalize\",\n          form: _normalizeError\n        });\n      }\n    }\n  }, {\n    key: \"checkSafeUint53\",\n    value: function checkSafeUint53(value, message) {\n      if (typeof value !== \"number\") {\n        return;\n      }\n      if (message == null) {\n        message = \"value not safe\";\n      }\n      if (value < 0 || value >= 0x1fffffffffffff) {\n        this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n          operation: \"checkSafeInteger\",\n          fault: \"out-of-safe-range\",\n          value: value\n        });\n      }\n      if (value % 1) {\n        this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n          operation: \"checkSafeInteger\",\n          fault: \"non-integer\",\n          value: value\n        });\n      }\n    }\n  }, {\n    key: \"checkArgumentCount\",\n    value: function checkArgumentCount(count, expectedCount, message) {\n      if (message) {\n        message = \": \" + message;\n      } else {\n        message = \"\";\n      }\n      if (count < expectedCount) {\n        this.throwError(\"missing argument\" + message, Logger.errors.MISSING_ARGUMENT, {\n          count: count,\n          expectedCount: expectedCount\n        });\n      }\n      if (count > expectedCount) {\n        this.throwError(\"too many arguments\" + message, Logger.errors.UNEXPECTED_ARGUMENT, {\n          count: count,\n          expectedCount: expectedCount\n        });\n      }\n    }\n  }, {\n    key: \"checkNew\",\n    value: function checkNew(target, kind) {\n      if (target === Object || target == null) {\n        this.throwError(\"missing new\", Logger.errors.MISSING_NEW, {\n          name: kind.name\n        });\n      }\n    }\n  }, {\n    key: \"checkAbstract\",\n    value: function checkAbstract(target, kind) {\n      if (target === kind) {\n        this.throwError(\"cannot instantiate abstract class \" + JSON.stringify(kind.name) + \" directly; use a sub-class\", Logger.errors.UNSUPPORTED_OPERATION, {\n          name: target.name,\n          operation: \"new\"\n        });\n      } else if (target === Object || target == null) {\n        this.throwError(\"missing new\", Logger.errors.MISSING_NEW, {\n          name: kind.name\n        });\n      }\n    }\n  }], [{\n    key: \"globalLogger\",\n    value: function globalLogger() {\n      if (!_globalLogger) {\n        _globalLogger = new Logger(version);\n      }\n      return _globalLogger;\n    }\n  }, {\n    key: \"setCensorship\",\n    value: function setCensorship(censorship, permanent) {\n      if (!censorship && permanent) {\n        this.globalLogger().throwError(\"cannot permanently disable censorship\", Logger.errors.UNSUPPORTED_OPERATION, {\n          operation: \"setCensorship\"\n        });\n      }\n      if (_permanentCensorErrors) {\n        if (!censorship) {\n          return;\n        }\n        this.globalLogger().throwError(\"error censorship permanent\", Logger.errors.UNSUPPORTED_OPERATION, {\n          operation: \"setCensorship\"\n        });\n      }\n      _censorErrors = !!censorship;\n      _permanentCensorErrors = !!permanent;\n    }\n  }, {\n    key: \"setLogLevel\",\n    value: function setLogLevel(logLevel) {\n      var level = LogLevels[logLevel.toLowerCase()];\n      if (level == null) {\n        Logger.globalLogger().warn(\"invalid log level - \" + logLevel);\n        return;\n      }\n      _logLevel = level;\n    }\n  }, {\n    key: \"from\",\n    value: function from(version) {\n      return new Logger(version);\n    }\n  }]);\n  return Logger;\n}();\nLogger.errors = ErrorCode;\nLogger.levels = LogLevel;","map":{"version":3,"sources":["../src.ts/index.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nlet _permanentCensorErrors = false;\nlet _censorErrors = false;\nconst LogLevels = { debug: 1, \"default\": 2, info: 2, warning: 3, error: 4, off: 5 };\nlet _logLevel = LogLevels[\"default\"];\nimport { version } from \"./_version\";\nlet _globalLogger = null;\nfunction _checkNormalize() {\n    try {\n        const missing = [];\n        // Make sure all forms of normalization are supported\n        [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].forEach((form) => {\n            try {\n                if (\"test\".normalize(form) !== \"test\") {\n                    throw new Error(\"bad normalize\");\n                }\n                ;\n            }\n            catch (error) {\n                missing.push(form);\n            }\n        });\n        if (missing.length) {\n            throw new Error(\"missing \" + missing.join(\", \"));\n        }\n        if (String.fromCharCode(0xe9).normalize(\"NFD\") !== String.fromCharCode(0x65, 0x0301)) {\n            throw new Error(\"broken implementation\");\n        }\n    }\n    catch (error) {\n        return error.message;\n    }\n    return null;\n}\nconst _normalizeError = _checkNormalize();\nexport var LogLevel;\n(function (LogLevel) {\n    LogLevel[\"DEBUG\"] = \"DEBUG\";\n    LogLevel[\"INFO\"] = \"INFO\";\n    LogLevel[\"WARNING\"] = \"WARNING\";\n    LogLevel[\"ERROR\"] = \"ERROR\";\n    LogLevel[\"OFF\"] = \"OFF\";\n})(LogLevel || (LogLevel = {}));\nexport var ErrorCode;\n(function (ErrorCode) {\n    ///////////////////\n    // Generic Errors\n    // Unknown Error\n    ErrorCode[\"UNKNOWN_ERROR\"] = \"UNKNOWN_ERROR\";\n    // Not Implemented\n    ErrorCode[\"NOT_IMPLEMENTED\"] = \"NOT_IMPLEMENTED\";\n    // Unsupported Operation\n    //   - operation\n    ErrorCode[\"UNSUPPORTED_OPERATION\"] = \"UNSUPPORTED_OPERATION\";\n    // Network Error (i.e. Ethereum Network, such as an invalid chain ID)\n    //   - event (\"noNetwork\" is not re-thrown in provider.ready; otherwise thrown)\n    ErrorCode[\"NETWORK_ERROR\"] = \"NETWORK_ERROR\";\n    // Some sort of bad response from the server\n    ErrorCode[\"SERVER_ERROR\"] = \"SERVER_ERROR\";\n    // Timeout\n    ErrorCode[\"TIMEOUT\"] = \"TIMEOUT\";\n    ///////////////////\n    // Operational  Errors\n    // Buffer Overrun\n    ErrorCode[\"BUFFER_OVERRUN\"] = \"BUFFER_OVERRUN\";\n    // Numeric Fault\n    //   - operation: the operation being executed\n    //   - fault: the reason this faulted\n    ErrorCode[\"NUMERIC_FAULT\"] = \"NUMERIC_FAULT\";\n    ///////////////////\n    // Argument Errors\n    // Missing new operator to an object\n    //  - name: The name of the class\n    ErrorCode[\"MISSING_NEW\"] = \"MISSING_NEW\";\n    // Invalid argument (e.g. value is incompatible with type) to a function:\n    //   - argument: The argument name that was invalid\n    //   - value: The value of the argument\n    ErrorCode[\"INVALID_ARGUMENT\"] = \"INVALID_ARGUMENT\";\n    // Missing argument to a function:\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    ErrorCode[\"MISSING_ARGUMENT\"] = \"MISSING_ARGUMENT\";\n    // Too many arguments\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    ErrorCode[\"UNEXPECTED_ARGUMENT\"] = \"UNEXPECTED_ARGUMENT\";\n    ///////////////////\n    // Blockchain Errors\n    // Call exception\n    //  - transaction: the transaction\n    //  - address?: the contract address\n    //  - args?: The arguments passed into the function\n    //  - method?: The Solidity method signature\n    //  - errorSignature?: The EIP848 error signature\n    //  - errorArgs?: The EIP848 error parameters\n    //  - reason: The reason (only for EIP848 \"Error(string)\")\n    ErrorCode[\"CALL_EXCEPTION\"] = \"CALL_EXCEPTION\";\n    // Insufficient funds (< value + gasLimit * gasPrice)\n    //   - transaction: the transaction attempted\n    ErrorCode[\"INSUFFICIENT_FUNDS\"] = \"INSUFFICIENT_FUNDS\";\n    // Nonce has already been used\n    //   - transaction: the transaction attempted\n    ErrorCode[\"NONCE_EXPIRED\"] = \"NONCE_EXPIRED\";\n    // The replacement fee for the transaction is too low\n    //   - transaction: the transaction attempted\n    ErrorCode[\"REPLACEMENT_UNDERPRICED\"] = \"REPLACEMENT_UNDERPRICED\";\n    // The gas limit could not be estimated\n    //   - transaction: the transaction passed to estimateGas\n    ErrorCode[\"UNPREDICTABLE_GAS_LIMIT\"] = \"UNPREDICTABLE_GAS_LIMIT\";\n    // The transaction was replaced by one with a higher gas price\n    //   - reason: \"cancelled\", \"replaced\" or \"repriced\"\n    //   - cancelled: true if reason == \"cancelled\" or reason == \"replaced\")\n    //   - hash: original transaction hash\n    //   - replacement: the full TransactionsResponse for the replacement\n    //   - receipt: the receipt of the replacement\n    ErrorCode[\"TRANSACTION_REPLACED\"] = \"TRANSACTION_REPLACED\";\n    ///////////////////\n    // Interaction Errors\n    // The user rejected the action, such as signing a message or sending\n    // a transaction\n    ErrorCode[\"ACTION_REJECTED\"] = \"ACTION_REJECTED\";\n})(ErrorCode || (ErrorCode = {}));\n;\nconst HEX = \"0123456789abcdef\";\nexport class Logger {\n    constructor(version) {\n        Object.defineProperty(this, \"version\", {\n            enumerable: true,\n            value: version,\n            writable: false\n        });\n    }\n    _log(logLevel, args) {\n        const level = logLevel.toLowerCase();\n        if (LogLevels[level] == null) {\n            this.throwArgumentError(\"invalid log level name\", \"logLevel\", logLevel);\n        }\n        if (_logLevel > LogLevels[level]) {\n            return;\n        }\n        console.log.apply(console, args);\n    }\n    debug(...args) {\n        this._log(Logger.levels.DEBUG, args);\n    }\n    info(...args) {\n        this._log(Logger.levels.INFO, args);\n    }\n    warn(...args) {\n        this._log(Logger.levels.WARNING, args);\n    }\n    makeError(message, code, params) {\n        // Errors are being censored\n        if (_censorErrors) {\n            return this.makeError(\"censored error\", code, {});\n        }\n        if (!code) {\n            code = Logger.errors.UNKNOWN_ERROR;\n        }\n        if (!params) {\n            params = {};\n        }\n        const messageDetails = [];\n        Object.keys(params).forEach((key) => {\n            const value = params[key];\n            try {\n                if (value instanceof Uint8Array) {\n                    let hex = \"\";\n                    for (let i = 0; i < value.length; i++) {\n                        hex += HEX[value[i] >> 4];\n                        hex += HEX[value[i] & 0x0f];\n                    }\n                    messageDetails.push(key + \"=Uint8Array(0x\" + hex + \")\");\n                }\n                else {\n                    messageDetails.push(key + \"=\" + JSON.stringify(value));\n                }\n            }\n            catch (error) {\n                messageDetails.push(key + \"=\" + JSON.stringify(params[key].toString()));\n            }\n        });\n        messageDetails.push(`code=${code}`);\n        messageDetails.push(`version=${this.version}`);\n        const reason = message;\n        let url = \"\";\n        switch (code) {\n            case ErrorCode.NUMERIC_FAULT: {\n                url = \"NUMERIC_FAULT\";\n                const fault = message;\n                switch (fault) {\n                    case \"overflow\":\n                    case \"underflow\":\n                    case \"division-by-zero\":\n                        url += \"-\" + fault;\n                        break;\n                    case \"negative-power\":\n                    case \"negative-width\":\n                        url += \"-unsupported\";\n                        break;\n                    case \"unbound-bitwise-result\":\n                        url += \"-unbound-result\";\n                        break;\n                }\n                break;\n            }\n            case ErrorCode.CALL_EXCEPTION:\n            case ErrorCode.INSUFFICIENT_FUNDS:\n            case ErrorCode.MISSING_NEW:\n            case ErrorCode.NONCE_EXPIRED:\n            case ErrorCode.REPLACEMENT_UNDERPRICED:\n            case ErrorCode.TRANSACTION_REPLACED:\n            case ErrorCode.UNPREDICTABLE_GAS_LIMIT:\n                url = code;\n                break;\n        }\n        if (url) {\n            message += \" [ See: https:/\\/links.ethers.org/v5-errors-\" + url + \" ]\";\n        }\n        if (messageDetails.length) {\n            message += \" (\" + messageDetails.join(\", \") + \")\";\n        }\n        // @TODO: Any??\n        const error = new Error(message);\n        error.reason = reason;\n        error.code = code;\n        Object.keys(params).forEach(function (key) {\n            error[key] = params[key];\n        });\n        return error;\n    }\n    throwError(message, code, params) {\n        throw this.makeError(message, code, params);\n    }\n    throwArgumentError(message, name, value) {\n        return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {\n            argument: name,\n            value: value\n        });\n    }\n    assert(condition, message, code, params) {\n        if (!!condition) {\n            return;\n        }\n        this.throwError(message, code, params);\n    }\n    assertArgument(condition, message, name, value) {\n        if (!!condition) {\n            return;\n        }\n        this.throwArgumentError(message, name, value);\n    }\n    checkNormalize(message) {\n        if (message == null) {\n            message = \"platform missing String.prototype.normalize\";\n        }\n        if (_normalizeError) {\n            this.throwError(\"platform missing String.prototype.normalize\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"String.prototype.normalize\", form: _normalizeError\n            });\n        }\n    }\n    checkSafeUint53(value, message) {\n        if (typeof (value) !== \"number\") {\n            return;\n        }\n        if (message == null) {\n            message = \"value not safe\";\n        }\n        if (value < 0 || value >= 0x1fffffffffffff) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"out-of-safe-range\",\n                value: value\n            });\n        }\n        if (value % 1) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"non-integer\",\n                value: value\n            });\n        }\n    }\n    checkArgumentCount(count, expectedCount, message) {\n        if (message) {\n            message = \": \" + message;\n        }\n        else {\n            message = \"\";\n        }\n        if (count < expectedCount) {\n            this.throwError(\"missing argument\" + message, Logger.errors.MISSING_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n        if (count > expectedCount) {\n            this.throwError(\"too many arguments\" + message, Logger.errors.UNEXPECTED_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n    }\n    checkNew(target, kind) {\n        if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n    checkAbstract(target, kind) {\n        if (target === kind) {\n            this.throwError(\"cannot instantiate abstract class \" + JSON.stringify(kind.name) + \" directly; use a sub-class\", Logger.errors.UNSUPPORTED_OPERATION, { name: target.name, operation: \"new\" });\n        }\n        else if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n    static globalLogger() {\n        if (!_globalLogger) {\n            _globalLogger = new Logger(version);\n        }\n        return _globalLogger;\n    }\n    static setCensorship(censorship, permanent) {\n        if (!censorship && permanent) {\n            this.globalLogger().throwError(\"cannot permanently disable censorship\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n        if (_permanentCensorErrors) {\n            if (!censorship) {\n                return;\n            }\n            this.globalLogger().throwError(\"error censorship permanent\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n        _censorErrors = !!censorship;\n        _permanentCensorErrors = !!permanent;\n    }\n    static setLogLevel(logLevel) {\n        const level = LogLevels[logLevel.toLowerCase()];\n        if (level == null) {\n            Logger.globalLogger().warn(\"invalid log level - \" + logLevel);\n            return;\n        }\n        _logLevel = level;\n    }\n    static from(version) {\n        return new Logger(version);\n    }\n}\nLogger.errors = ErrorCode;\nLogger.levels = LogLevel;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}