import { ethers } from "ethers";
import Operation from "./Operation";
import SuperfluidABI from "./abi/Superfluid.json";
/**
 * Host Helper Class
 * @description A helper class which can be used as a standalone class to populate call agreement transactions.
 */
export default class Host {
    constructor(hostAddress) {
        /**
         * Creates an Operation of the `callAgreement` function on the host contract.
         * @param agreementAddress the agreement address (cfa or ida address)
         * @param callData the encoded callData for the function
         * @param userData any additional user data
         * @param overrides ethers overrides object for more control over the transaction sent.
         * @returns {Operation} an `Operation` class
         */
        this.populateCallAgreementTxnAndReturnOperation = (agreementAddress, callData, userData, overrides) => {
            const txn = this.contract.populateTransaction.callAgreement(agreementAddress, callData, userData || "0x", overrides || {});
            return new Operation(txn, "SUPERFLUID_CALL_AGREEMENT");
        };
        this.contract = new ethers.Contract(hostAddress, SuperfluidABI.abi);
    }
}
//# sourceMappingURL=Host.js.map