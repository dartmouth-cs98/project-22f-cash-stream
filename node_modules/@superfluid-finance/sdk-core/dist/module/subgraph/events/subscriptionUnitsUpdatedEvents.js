import { mapGetAllEventsQueryEvents } from "../../mapGetAllEventsQueryEvents";
import { SubgraphQueryHandler, } from "../subgraphQueryHandler";
import { SubscriptionUnitsUpdatedEventsDocument, } from "./events.generated";
export class SubscriptionUnitsUpdatedEventQueryHandler extends SubgraphQueryHandler {
    constructor() {
        super(...arguments);
        this.getAddressFieldKeysFromFilter = () => ({
            accountKeys: ["publisher", "subscriber"],
            tokenKeys: ["token"],
        });
        this.requestDocument = SubscriptionUnitsUpdatedEventsDocument;
    }
    getRelevantAddressesFromResultCore(result) {
        return {
            accounts: [result.publisher, result.subscriber],
            tokens: [result.token],
        };
    }
    mapFromSubgraphResponse(response) {
        return mapGetAllEventsQueryEvents(response.subscriptionUnitsUpdatedEvents);
    }
}
//# sourceMappingURL=subscriptionUnitsUpdatedEvents.js.map