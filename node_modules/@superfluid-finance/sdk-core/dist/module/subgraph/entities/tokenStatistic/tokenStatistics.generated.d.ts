import * as Types from '../../schema.generated';
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';
export declare type TokenStatisticsQueryVariables = Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    orderBy?: Types.InputMaybe<Types.TokenStatistic_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.TokenStatistic_Filter>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>;
export declare type TokenStatisticsQuery = {
    tokenStatistics: Array<{
        id: string;
        totalAmountDistributedUntilUpdatedAt: string;
        totalAmountStreamedUntilUpdatedAt: string;
        totalAmountTransferredUntilUpdatedAt: string;
        totalApprovedSubscriptions: number;
        totalNumberOfActiveIndexes: number;
        totalNumberOfActiveStreams: number;
        totalNumberOfIndexes: number;
        totalNumberOfClosedStreams: number;
        totalOutflowRate: string;
        totalSubscriptionsWithUnits: number;
        totalSupply: string;
        updatedAtTimestamp: string;
        updatedAtBlockNumber: string;
    }>;
};
export declare const TokenStatisticsDocument: DocumentNode<TokenStatisticsQuery, Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    orderBy?: Types.InputMaybe<Types.TokenStatistic_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.TokenStatistic_Filter>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>>;
//# sourceMappingURL=tokenStatistics.generated.d.ts.map