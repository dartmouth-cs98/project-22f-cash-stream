import { SubgraphQueryHandler, } from "../../subgraphQueryHandler";
import { AccountsDocument, } from "./accounts.generated";
export class AccountQueryHandler extends SubgraphQueryHandler {
    constructor() {
        super(...arguments);
        this.getAddressFieldKeysFromFilter = () => ({
            accountKeys: ["id"],
            tokenKeys: [],
        });
        this.getRelevantAddressesFromResultCore = (result) => ({
            accounts: [result.id],
            tokens: [],
        });
        this.mapFromSubgraphResponse = (response) => response.accounts.map((x) => ({
            ...x,
            createdAtTimestamp: Number(x.createdAtTimestamp),
            createdAtBlockNumber: Number(x.createdAtBlockNumber),
            updatedAtTimestamp: Number(x.updatedAtTimestamp),
            updatedAtBlockNumber: Number(x.updatedAtBlockNumber),
        }));
        this.requestDocument = AccountsDocument;
    }
}
//# sourceMappingURL=account.js.map