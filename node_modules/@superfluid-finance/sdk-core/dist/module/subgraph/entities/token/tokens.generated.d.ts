import * as Types from '../../schema.generated';
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';
export declare type TokensQueryVariables = Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    orderBy?: Types.InputMaybe<Types.Token_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.Token_Filter>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>;
export declare type TokensQuery = {
    tokens: Array<{
        createdAtBlockNumber: string;
        createdAtTimestamp: string;
        decimals: number;
        id: string;
        isListed: boolean;
        isSuperToken: boolean;
        name: string;
        symbol: string;
        underlyingAddress: string;
    }>;
};
export declare const TokensDocument: DocumentNode<TokensQuery, Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    orderBy?: Types.InputMaybe<Types.Token_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.Token_Filter>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>>;
//# sourceMappingURL=tokens.generated.d.ts.map