import * as Types from '../../schema.generated';
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';
export declare type TokenStatisticLogsQueryVariables = Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    orderBy?: Types.InputMaybe<Types.TokenStatisticLog_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    where?: Types.InputMaybe<Types.TokenStatisticLog_Filter>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>;
export declare type TokenStatisticLogsQuery = {
    tokenStatisticLogs: Array<{
        id: string;
        timestamp: string;
        blockNumber: string;
        transactionHash: string;
        logIndex: string;
        order: string;
        triggeredByEventName: string;
        totalNumberOfActiveStreams: number;
        totalNumberOfClosedStreams: number;
        totalNumberOfIndexes: number;
        totalNumberOfActiveIndexes: number;
        totalSubscriptionsWithUnits: number;
        totalApprovedSubscriptions: number;
        totalDeposit: string;
        totalOutflowRate: string;
        totalAmountStreamed: string;
        totalAmountTransferred: string;
        totalAmountDistributed: string;
        totalSupply: string;
        token: {
            id: string;
            symbol: string;
        };
    }>;
};
export declare const TokenStatisticLogsDocument: DocumentNode<TokenStatisticLogsQuery, Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    orderBy?: Types.InputMaybe<Types.TokenStatisticLog_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    where?: Types.InputMaybe<Types.TokenStatisticLog_Filter>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>>;
//# sourceMappingURL=tokenStatisticLogs.generated.d.ts.map