import { SubgraphQueryHandler, } from "../../subgraphQueryHandler";
import { AccountTokenSnapshotsDocument, } from "./accountTokenSnapshots.generated";
export class AccountTokenSnapshotQueryHandler extends SubgraphQueryHandler {
    constructor() {
        super(...arguments);
        this.getAddressFieldKeysFromFilter = () => ({
            accountKeys: ["account"],
            tokenKeys: ["token"],
        });
        this.getRelevantAddressesFromResultCore = (result) => ({
            tokens: [result.token],
            accounts: [result.account],
        });
        this.mapFromSubgraphResponse = (response) => response.accountTokenSnapshots.map((x) => ({
            ...x,
            account: x.account.id,
            token: x.token.id,
            tokenSymbol: x.token.symbol,
            maybeCriticalAtTimestamp: x.maybeCriticalAtTimestamp != null
                ? Number(x.maybeCriticalAtTimestamp)
                : null,
            updatedAtBlockNumber: Number(x.updatedAtBlockNumber),
            updatedAtTimestamp: Number(x.updatedAtTimestamp),
        }));
        this.requestDocument = AccountTokenSnapshotsDocument;
    }
}
//# sourceMappingURL=accountTokenSnapshot.js.map