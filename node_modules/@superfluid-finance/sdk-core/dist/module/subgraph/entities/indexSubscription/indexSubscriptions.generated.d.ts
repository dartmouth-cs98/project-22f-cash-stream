import * as Types from '../../schema.generated';
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';
export declare type IndexSubscriptionsQueryVariables = Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    orderBy?: Types.InputMaybe<Types.IndexSubscription_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.IndexSubscription_Filter>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>;
export declare type IndexSubscriptionsQuery = {
    indexSubscriptions: Array<{
        approved: boolean;
        createdAtBlockNumber: string;
        createdAtTimestamp: string;
        id: string;
        indexValueUntilUpdatedAt: string;
        totalAmountReceivedUntilUpdatedAt: string;
        units: string;
        updatedAtBlockNumber: string;
        updatedAtTimestamp: string;
        index: {
            id: string;
            indexValue: string;
            totalUnits: string;
            token: {
                id: string;
                symbol: string;
            };
            publisher: {
                id: string;
            };
        };
        subscriber: {
            id: string;
        };
    }>;
};
export declare const IndexSubscriptionsDocument: DocumentNode<IndexSubscriptionsQuery, Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    orderBy?: Types.InputMaybe<Types.IndexSubscription_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.IndexSubscription_Filter>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>>;
//# sourceMappingURL=indexSubscriptions.generated.d.ts.map