import { SubgraphQueryHandler, } from "../../subgraphQueryHandler";
import { IndexesDocument, } from "./indexes.generated";
export class IndexQueryHandler extends SubgraphQueryHandler {
    constructor() {
        super(...arguments);
        this.getAddressFieldKeysFromFilter = () => ({
            accountKeys: ["publisher"],
            tokenKeys: ["token"],
        });
        this.getRelevantAddressesFromResultCore = (result) => ({
            tokens: [result.token],
            accounts: [result.publisher],
        });
        this.mapFromSubgraphResponse = (response) => response.indexes.map((x) => ({
            ...x,
            createdAtTimestamp: Number(x.createdAtTimestamp),
            createdAtBlockNumber: Number(x.createdAtBlockNumber),
            updatedAtTimestamp: Number(x.updatedAtTimestamp),
            updatedAtBlockNumber: Number(x.updatedAtBlockNumber),
            indexCreatedEvent: x.indexCreatedEvent.id,
            publisher: x.publisher.id,
            token: x.token.id,
            tokenSymbol: x.token.symbol,
        }));
        this.requestDocument = IndexesDocument;
    }
}
//# sourceMappingURL=index.js.map