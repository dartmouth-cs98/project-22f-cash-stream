import { ethers } from "ethers";
import Host from "./Host";
import Operation from "./Operation";
interface IBatchCallOptions {
    hostAddress: string;
    operations: ReadonlyArray<Operation>;
}
interface OperationStruct {
    readonly operationType: number;
    readonly target: string;
    readonly data: string;
}
/**
 * BatchCall Helper Class
 * @description A helper class to create `BatchCall` objects which can be executed.
 */
export default class BatchCall {
    options: IBatchCallOptions;
    host: Host;
    constructor(options: IBatchCallOptions);
    /**
     * Gets the call agreement function arguments.
     * @param callData callData of the function
     * @returns {ethers.utils.Result} call agreement function arguments
     */
    getCallAgreementFunctionArgs: (callData: string) => ethers.utils.Result;
    /**
     * Given an `Operation` object, gets the `OperationStruct` object.
     * @param operation an `Operation` object
     * @param index the index of the `Operation` in the batchCall
     * @returns {Promise<OperationStruct>} OperationStruct object for batchCall
     */
    getOperationStruct: (operation: Operation, index: number) => Promise<OperationStruct>;
    /**
     * Gets an array of `OperationStruct` objects to be passed to batchCall.
     * @returns {Promise<OperationStruct>[]} array of operation struct promises
     */
    get getOperationStructArrayPromises(): Promise<OperationStruct>[];
    /**
     * Executes a batch call given the operations on this class.
     * @param signer the signer of the transaction
     * @returns {Promise<ethers.ContractTransaction>} ContractTransaction object
     */
    exec: (signer: ethers.Signer) => Promise<ethers.ContractTransaction>;
    /**
     * Executes a forward batch call given the operations on this class.
     * @param signer the signer of the transaction
     * @returns {Promise<ethers.ContractTransaction>} ContractTransaction object
     */
    execForward: (signer: ethers.Signer) => Promise<ethers.ContractTransaction>;
}
export {};
//# sourceMappingURL=BatchCall.d.ts.map