"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.networkNameToChainIdMap = exports.chainIdToResolverDataMap = exports.AUTHORIZE_FULL_CONTROL = exports.AUTHORIZE_FLOW_OPERATOR_DELETE = exports.AUTHORIZE_FLOW_OPERATOR_UPDATE = exports.AUTHORIZE_FLOW_OPERATOR_CREATE = exports.chainIds = exports.BSC_MAINNET_CHAIN_ID = exports.AVALANCHE_C_CHAIN_ID = exports.AVALANCHE_FUJI_CHAIN_ID = exports.ARBITRUM_RINKEBY_CHAIN_ID = exports.ARBITRUM_ONE_CHAIN_ID = exports.OPTIMISM_KOVAN_CHAIN_ID = exports.OPTIMISM_MAINNET_CHAIN_ID = exports.MUMBAI_CHAIN_ID = exports.MATIC_CHAIN_ID = exports.GNOSIS_CHAIN_ID = exports.ETH_KOVAN_CHAIN_ID = exports.ETH_GOERLI_CHAIN_ID = exports.ETH_RINKEBY_CHAIN_ID = exports.ETH_ROPSTEN_CHAIN_ID = exports.BSC_MAINNET = exports.AVALANCHE_FUJI = exports.AVALANCHE_C = exports.ARBITRUM_RINKEBY = exports.ARBITRUM_ONE = exports.OPTIMISM_KOVAN = exports.OPTIMISM_MAINNET = exports.XDAI_MAINNET = exports.POLYGON_MUMBAI = exports.POLYGON_MAINNET = exports.ETH_KOVAN = exports.ETH_GOERLI = exports.ETH_RINKEBY = exports.ETH_ROPSTEN = exports.BASE_18 = exports.YEAR_IN_SECONDS = exports.MONTH_IN_SECONDS = exports.WEEK_IN_SECONDS = exports.DAY_IN_SECONDS = exports.HOUR_IN_SECONDS = exports.MINUTE_IN_SECONDS = exports.MINUTES_PER_HOUR = exports.HOURS_PER_DAY = exports.DAYS_PER_WEEK = exports.DAYS_PER_MONTH = exports.MONTHS_PER_YEAR = void 0;
const defaultSubgraphReleaseTag_json_1 = __importDefault(require("./defaultSubgraphReleaseTag.json"));
/******* TIME CONSTANTS *******/
exports.MONTHS_PER_YEAR = 12;
exports.DAYS_PER_MONTH = 30;
exports.DAYS_PER_WEEK = 7;
exports.HOURS_PER_DAY = 24;
exports.MINUTES_PER_HOUR = 60;
exports.MINUTE_IN_SECONDS = 60;
exports.HOUR_IN_SECONDS = exports.MINUTE_IN_SECONDS * exports.MINUTES_PER_HOUR;
exports.DAY_IN_SECONDS = exports.HOUR_IN_SECONDS * exports.HOURS_PER_DAY;
exports.WEEK_IN_SECONDS = exports.DAY_IN_SECONDS * exports.DAYS_PER_WEEK;
exports.MONTH_IN_SECONDS = exports.DAY_IN_SECONDS * exports.DAYS_PER_MONTH;
exports.YEAR_IN_SECONDS = exports.MONTH_IN_SECONDS * exports.MONTHS_PER_YEAR; // NOTE: Is 360 days (misses 5-6 days)
exports.BASE_18 = 1e18;
/******* NETWORK NAMES *******/
exports.ETH_ROPSTEN = "eth-ropsten";
exports.ETH_RINKEBY = "eth-rinkeby";
exports.ETH_GOERLI = "eth-goerli";
exports.ETH_KOVAN = "eth-kovan";
exports.POLYGON_MAINNET = "polygon-mainnet";
exports.POLYGON_MUMBAI = "polygon-mumbai";
exports.XDAI_MAINNET = "xdai-mainnet";
exports.OPTIMISM_MAINNET = "optimism-mainnet";
exports.OPTIMISM_KOVAN = "optimism-kovan";
exports.ARBITRUM_ONE = "arbitrum-one";
exports.ARBITRUM_RINKEBY = "arbitrum-rinkeby";
exports.AVALANCHE_C = "avalanche-c";
exports.AVALANCHE_FUJI = "avalanche-fuji";
exports.BSC_MAINNET = "bsc-mainnet";
/******* CHAIN IDS *******/
exports.ETH_ROPSTEN_CHAIN_ID = 3;
exports.ETH_RINKEBY_CHAIN_ID = 4;
exports.ETH_GOERLI_CHAIN_ID = 5;
exports.ETH_KOVAN_CHAIN_ID = 42;
exports.GNOSIS_CHAIN_ID = 100;
exports.MATIC_CHAIN_ID = 137;
exports.MUMBAI_CHAIN_ID = 80001;
exports.OPTIMISM_MAINNET_CHAIN_ID = 10;
exports.OPTIMISM_KOVAN_CHAIN_ID = 69;
exports.ARBITRUM_ONE_CHAIN_ID = 42161;
exports.ARBITRUM_RINKEBY_CHAIN_ID = 421611;
exports.AVALANCHE_FUJI_CHAIN_ID = 43113;
exports.AVALANCHE_C_CHAIN_ID = 43114;
exports.BSC_MAINNET_CHAIN_ID = 56;
exports.chainIds = [
    exports.ETH_ROPSTEN_CHAIN_ID,
    exports.ETH_RINKEBY_CHAIN_ID,
    exports.ETH_GOERLI_CHAIN_ID,
    exports.ETH_KOVAN_CHAIN_ID,
    exports.MATIC_CHAIN_ID,
    exports.MUMBAI_CHAIN_ID,
    exports.GNOSIS_CHAIN_ID,
    exports.OPTIMISM_MAINNET_CHAIN_ID,
    exports.OPTIMISM_KOVAN_CHAIN_ID,
    exports.ARBITRUM_ONE_CHAIN_ID,
    exports.ARBITRUM_RINKEBY_CHAIN_ID,
    exports.AVALANCHE_FUJI_CHAIN_ID,
    exports.AVALANCHE_C_CHAIN_ID,
    exports.BSC_MAINNET_CHAIN_ID, // BNB MAINNET
];
/******* ACL AUTHORIZATION BIT OPERATIONS *******/
exports.AUTHORIZE_FLOW_OPERATOR_CREATE = 1 << 0;
exports.AUTHORIZE_FLOW_OPERATOR_UPDATE = 1 << 1;
exports.AUTHORIZE_FLOW_OPERATOR_DELETE = 1 << 2;
exports.AUTHORIZE_FULL_CONTROL = exports.AUTHORIZE_FLOW_OPERATOR_CREATE |
    exports.AUTHORIZE_FLOW_OPERATOR_UPDATE |
    exports.AUTHORIZE_FLOW_OPERATOR_DELETE;
const subgraphReleaseTag = process.env.SUBGRAPH_RELEASE_TAG || defaultSubgraphReleaseTag_json_1.default.value;
const baseUrl = `https://api.thegraph.com/subgraphs/name/superfluid-finance/protocol-${subgraphReleaseTag}`;
exports.chainIdToResolverDataMap = new Map([
    [
        exports.ETH_ROPSTEN_CHAIN_ID,
        {
            subgraphAPIEndpoint: `${baseUrl}-ropsten`,
            networkName: exports.ETH_ROPSTEN,
            resolverAddress: "0x3b44e06D96BcA9412CBc23F80F41B9e30933571a",
            nativeTokenSymbol: "ETH",
        },
    ],
    [
        exports.ETH_RINKEBY_CHAIN_ID,
        {
            subgraphAPIEndpoint: `${baseUrl}-rinkeby`,
            networkName: exports.ETH_RINKEBY,
            resolverAddress: "0x659635Fab0A0cef1293f7eb3c7934542B6A6B31A",
            nativeTokenSymbol: "ETH",
        },
    ],
    [
        exports.ETH_GOERLI_CHAIN_ID,
        {
            subgraphAPIEndpoint: `${baseUrl}-goerli`,
            networkName: exports.ETH_GOERLI,
            resolverAddress: "0x3710AB3fDE2B61736B8BB0CE845D6c61F667a78E",
            nativeTokenSymbol: "ETH",
        },
    ],
    [
        exports.OPTIMISM_MAINNET_CHAIN_ID,
        {
            subgraphAPIEndpoint: `${baseUrl}-optimism-mainnet`,
            networkName: exports.OPTIMISM_MAINNET,
            resolverAddress: "0x743B5f46BC86caF41bE4956d9275721E0531B186",
            nativeTokenSymbol: "ETH",
        },
    ],
    [
        exports.ETH_KOVAN_CHAIN_ID,
        {
            subgraphAPIEndpoint: `${baseUrl}-kovan`,
            networkName: exports.ETH_KOVAN,
            resolverAddress: "0x851d3dd9dc97c1df1DA73467449B3893fc76D85B",
            nativeTokenSymbol: "ETH",
        },
    ],
    [
        exports.OPTIMISM_KOVAN_CHAIN_ID,
        {
            subgraphAPIEndpoint: `${baseUrl}-optimism-kovan`,
            networkName: exports.OPTIMISM_KOVAN,
            resolverAddress: "0x218B65780615Ff134f9Ad810CB98839534D3C0D6",
            nativeTokenSymbol: "ETH",
        },
    ],
    [
        exports.GNOSIS_CHAIN_ID,
        {
            subgraphAPIEndpoint: `${baseUrl}-xdai`,
            networkName: exports.XDAI_MAINNET,
            resolverAddress: "0xD2009765189164b495c110D61e4D301729079911",
            nativeTokenSymbol: "xDAI",
        },
    ],
    [
        exports.MATIC_CHAIN_ID,
        {
            subgraphAPIEndpoint: `${baseUrl}-matic`,
            networkName: exports.POLYGON_MAINNET,
            resolverAddress: "0xE0cc76334405EE8b39213E620587d815967af39C",
            nativeTokenSymbol: "MATIC",
        },
    ],
    [
        exports.ARBITRUM_ONE_CHAIN_ID,
        {
            subgraphAPIEndpoint: `${baseUrl}-arbitrum-one`,
            networkName: exports.ARBITRUM_ONE,
            resolverAddress: "0x609b9d9d6Ee9C3200745A79B9d3398DBd63d509F",
            nativeTokenSymbol: "ETH",
        },
    ],
    [
        exports.AVALANCHE_FUJI_CHAIN_ID,
        {
            subgraphAPIEndpoint: `${baseUrl}-avalanche-fuji`,
            networkName: exports.AVALANCHE_FUJI,
            resolverAddress: "0x141920741bC45b962B59c833cd849bA617F7ef38",
            nativeTokenSymbol: "AVAX",
        },
    ],
    [
        exports.AVALANCHE_C_CHAIN_ID,
        {
            subgraphAPIEndpoint: `${baseUrl}-avalanche-c`,
            networkName: exports.AVALANCHE_C,
            resolverAddress: "0x24a3F04F70B7f07B9673EadD3e146391BcfEa5c1",
            nativeTokenSymbol: "AVAX",
        },
    ],
    [
        exports.BSC_MAINNET_CHAIN_ID,
        {
            subgraphAPIEndpoint: `${baseUrl}-bsc-mainnet`,
            networkName: exports.BSC_MAINNET,
            resolverAddress: "0x69604aA4e9e8BF44A73C680997205Edb03A92E41",
            nativeTokenSymbol: "BNB",
        },
    ],
    [
        exports.MUMBAI_CHAIN_ID,
        {
            subgraphAPIEndpoint: `${baseUrl}-mumbai`,
            networkName: exports.POLYGON_MUMBAI,
            resolverAddress: "0x8C54C83FbDe3C59e59dd6E324531FB93d4F504d3",
            nativeTokenSymbol: "MATIC",
        },
    ],
    [
        exports.ARBITRUM_RINKEBY_CHAIN_ID,
        {
            subgraphAPIEndpoint: `${baseUrl}-arbitrum-rinkeby`,
            networkName: exports.ARBITRUM_RINKEBY,
            resolverAddress: "0xa2C0C70A1E922f5f060ec20EE3aF002C163b4567",
            nativeTokenSymbol: "ETH",
        },
    ],
]);
exports.networkNameToChainIdMap = new Map([
    [exports.ETH_ROPSTEN, exports.ETH_ROPSTEN_CHAIN_ID],
    [exports.ETH_RINKEBY, exports.ETH_RINKEBY_CHAIN_ID],
    [exports.ETH_GOERLI, exports.ETH_GOERLI_CHAIN_ID],
    [exports.ETH_KOVAN, exports.ETH_KOVAN_CHAIN_ID],
    [exports.XDAI_MAINNET, exports.GNOSIS_CHAIN_ID],
    [exports.POLYGON_MAINNET, exports.MATIC_CHAIN_ID],
    [exports.POLYGON_MUMBAI, exports.MUMBAI_CHAIN_ID],
    [exports.OPTIMISM_KOVAN, exports.OPTIMISM_KOVAN_CHAIN_ID],
    [exports.OPTIMISM_MAINNET, exports.OPTIMISM_MAINNET_CHAIN_ID],
    [exports.ARBITRUM_ONE, exports.ARBITRUM_ONE_CHAIN_ID],
    [exports.ARBITRUM_RINKEBY, exports.ARBITRUM_RINKEBY_CHAIN_ID],
    [exports.AVALANCHE_C, exports.AVALANCHE_C_CHAIN_ID],
    [exports.AVALANCHE_FUJI, exports.AVALANCHE_FUJI_CHAIN_ID],
    [exports.BSC_MAINNET, exports.BSC_MAINNET_CHAIN_ID],
]);
//# sourceMappingURL=constants.js.map