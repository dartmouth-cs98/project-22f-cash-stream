import { Address, BigNumber, BlockNumber, SubgraphId, Timestamp } from "../../mappedSubgraphTypes";
import { TokenStatisticLog_Filter, TokenStatisticLog_OrderBy } from "../../schema.generated";
import { RelevantAddressesIntermediate, SubgraphListQuery, SubgraphQueryHandler } from "../../subgraphQueryHandler";
import { TokenStatisticLogsQuery, TokenStatisticLogsQueryVariables } from "./tokenStatisticLogs.generated";
export interface TokenStatisticLog {
    id: SubgraphId;
    timestamp: Timestamp;
    blockNumber: BlockNumber;
    logIndex: BigNumber;
    order: BigNumber;
    triggeredByEventName: string;
    totalNumberOfActiveStreams: number;
    totalNumberOfClosedStreams: number;
    totalNumberOfIndexes: number;
    totalNumberOfActiveIndexes: number;
    totalSubscriptionsWithUnits: number;
    totalApprovedSubscriptions: number;
    totalDeposit: BigNumber;
    totalOutflowRate: BigNumber;
    totalAmountStreamed: BigNumber;
    totalAmountTransferred: BigNumber;
    totalAmountDistributed: BigNumber;
    totalSupply: BigNumber;
    token: Address;
}
export declare type TokenStatisticLogListQuery = SubgraphListQuery<TokenStatisticLog_Filter, TokenStatisticLog_OrderBy>;
export declare class TokenStatisticLogQueryHandler extends SubgraphQueryHandler<TokenStatisticLog, TokenStatisticLogListQuery, TokenStatisticLogsQuery, TokenStatisticLogsQueryVariables> {
    getAddressFieldKeysFromFilter: () => {
        accountKeys: (keyof TokenStatisticLog_Filter)[];
        tokenKeys: (keyof TokenStatisticLog_Filter)[];
    };
    getRelevantAddressesFromResultCore: (result: TokenStatisticLog) => RelevantAddressesIntermediate;
    mapFromSubgraphResponse: (response: TokenStatisticLogsQuery) => TokenStatisticLog[];
    requestDocument: import("@graphql-typed-document-node/core").TypedDocumentNode<TokenStatisticLogsQuery, import("../../schema.generated").Exact<{
        first?: import("../../schema.generated").InputMaybe<number>;
        skip?: import("../../schema.generated").InputMaybe<number>;
        orderBy?: import("../../schema.generated").InputMaybe<TokenStatisticLog_OrderBy>;
        orderDirection?: import("../../schema.generated").InputMaybe<import("../../schema.generated").OrderDirection>;
        where?: import("../../schema.generated").InputMaybe<TokenStatisticLog_Filter>;
        block?: import("../../schema.generated").InputMaybe<import("../../schema.generated").Block_Height>;
    }>>;
}
//# sourceMappingURL=tokenStatisticLog.d.ts.map