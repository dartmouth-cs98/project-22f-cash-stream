"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.StreamQueryHandler = void 0;
const subgraphQueryHandler_1 = require("../../subgraphQueryHandler");
const streams_generated_1 = require("./streams.generated");
class StreamQueryHandler extends subgraphQueryHandler_1.SubgraphQueryHandler {
    constructor() {
        super(...arguments);
        this.getAddressFieldKeysFromFilter = () => ({
            accountKeys: ["sender", "receiver"],
            tokenKeys: ["token"],
        });
        this.getRelevantAddressesFromResultCore = (result) => ({
            tokens: [result.token],
            accounts: [result.sender, result.receiver],
        });
        this.mapFromSubgraphResponse = (response) => response.streams.map((x) => ({
            ...x,
            createdAtTimestamp: Number(x.createdAtTimestamp),
            createdAtBlockNumber: Number(x.createdAtBlockNumber),
            updatedAtTimestamp: Number(x.updatedAtTimestamp),
            updatedAtBlockNumber: Number(x.updatedAtBlockNumber),
            receiver: x.receiver.id,
            token: x.token.id,
            tokenSymbol: x.token.symbol,
            sender: x.sender.id,
        }));
        this.requestDocument = streams_generated_1.StreamsDocument;
    }
}
exports.StreamQueryHandler = StreamQueryHandler;
//# sourceMappingURL=stream.js.map