import * as Types from '../../schema.generated';
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';
export declare type IndexesQueryVariables = Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    orderBy?: Types.InputMaybe<Types.Index_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.Index_Filter>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>;
export declare type IndexesQuery = {
    indexes: Array<{
        createdAtBlockNumber: string;
        createdAtTimestamp: string;
        id: string;
        indexId: string;
        indexValue: string;
        totalAmountDistributedUntilUpdatedAt: string;
        totalSubscriptionsWithUnits: number;
        totalUnits: string;
        totalUnitsApproved: string;
        totalUnitsPending: string;
        updatedAtBlockNumber: string;
        updatedAtTimestamp: string;
        indexCreatedEvent: {
            id: string;
        };
        publisher: {
            id: string;
        };
        token: {
            id: string;
            symbol: string;
        };
    }>;
};
export declare const IndexesDocument: DocumentNode<IndexesQuery, Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    orderBy?: Types.InputMaybe<Types.Index_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.Index_Filter>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>>;
//# sourceMappingURL=indexes.generated.d.ts.map