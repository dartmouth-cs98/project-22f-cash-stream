"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.IndexQueryHandler = void 0;
const subgraphQueryHandler_1 = require("../../subgraphQueryHandler");
const indexes_generated_1 = require("./indexes.generated");
class IndexQueryHandler extends subgraphQueryHandler_1.SubgraphQueryHandler {
    constructor() {
        super(...arguments);
        this.getAddressFieldKeysFromFilter = () => ({
            accountKeys: ["publisher"],
            tokenKeys: ["token"],
        });
        this.getRelevantAddressesFromResultCore = (result) => ({
            tokens: [result.token],
            accounts: [result.publisher],
        });
        this.mapFromSubgraphResponse = (response) => response.indexes.map((x) => ({
            ...x,
            createdAtTimestamp: Number(x.createdAtTimestamp),
            createdAtBlockNumber: Number(x.createdAtBlockNumber),
            updatedAtTimestamp: Number(x.updatedAtTimestamp),
            updatedAtBlockNumber: Number(x.updatedAtBlockNumber),
            indexCreatedEvent: x.indexCreatedEvent.id,
            publisher: x.publisher.id,
            token: x.token.id,
            tokenSymbol: x.token.symbol,
        }));
        this.requestDocument = indexes_generated_1.IndexesDocument;
    }
}
exports.IndexQueryHandler = IndexQueryHandler;
//# sourceMappingURL=index.js.map