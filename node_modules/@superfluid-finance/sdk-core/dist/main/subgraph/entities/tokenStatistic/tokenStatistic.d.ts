import { BigNumber, BlockNumber, SubgraphId, Timestamp } from "../../mappedSubgraphTypes";
import { TokenStatistic_Filter, TokenStatistic_OrderBy } from "../../schema.generated";
import { RelevantAddressesIntermediate, SubgraphListQuery, SubgraphQueryHandler } from "../../subgraphQueryHandler";
import { TokenStatisticsQuery, TokenStatisticsQueryVariables } from "./tokenStatistics.generated";
export interface TokenStatistic {
    id: SubgraphId;
    updatedAtTimestamp: Timestamp;
    updatedAtBlockNumber: BlockNumber;
    totalAmountDistributedUntilUpdatedAt: BigNumber;
    totalAmountStreamedUntilUpdatedAt: BigNumber;
    totalAmountTransferredUntilUpdatedAt: BigNumber;
    totalApprovedSubscriptions: number;
    totalNumberOfActiveIndexes: number;
    totalNumberOfActiveStreams: number;
    totalNumberOfIndexes: number;
    totalNumberOfClosedStreams: number;
    totalOutflowRate: BigNumber;
    totalSubscriptionsWithUnits: number;
    totalSupply: BigNumber;
}
export declare type TokenStatisticListQuery = SubgraphListQuery<TokenStatistic_Filter, TokenStatistic_OrderBy>;
export declare class TokenStatisticQueryHandler extends SubgraphQueryHandler<TokenStatistic, TokenStatisticListQuery, TokenStatisticsQuery, TokenStatisticsQueryVariables> {
    getAddressFieldKeysFromFilter: () => {
        accountKeys: (keyof TokenStatistic_Filter)[];
        tokenKeys: (keyof TokenStatistic_Filter)[];
    };
    getRelevantAddressesFromResultCore: (result: TokenStatistic) => RelevantAddressesIntermediate;
    mapFromSubgraphResponse: (response: TokenStatisticsQuery) => TokenStatistic[];
    requestDocument: import("@graphql-typed-document-node/core").TypedDocumentNode<TokenStatisticsQuery, import("../../schema.generated").Exact<{
        first?: import("../../schema.generated").InputMaybe<number>;
        orderBy?: import("../../schema.generated").InputMaybe<TokenStatistic_OrderBy>;
        orderDirection?: import("../../schema.generated").InputMaybe<import("../../schema.generated").OrderDirection>;
        skip?: import("../../schema.generated").InputMaybe<number>;
        where?: import("../../schema.generated").InputMaybe<TokenStatistic_Filter>;
        block?: import("../../schema.generated").InputMaybe<import("../../schema.generated").Block_Height>;
    }>>;
}
//# sourceMappingURL=tokenStatistic.d.ts.map