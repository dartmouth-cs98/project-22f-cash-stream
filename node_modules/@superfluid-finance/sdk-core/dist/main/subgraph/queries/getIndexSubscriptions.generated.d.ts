import * as Types from '../schema.generated';
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';
export declare type GetIndexSubscriptionsQueryVariables = Types.Exact<{
    where?: Types.IndexSubscription_Filter;
    skip?: Types.Scalars['Int'];
    first?: Types.Scalars['Int'];
    orderBy?: Types.IndexSubscription_OrderBy;
    orderDirection?: Types.OrderDirection;
}>;
export declare type GetIndexSubscriptionsQuery = {
    result: Array<{
        id: string;
        createdAtTimestamp: string;
        createdAtBlockNumber: string;
        updatedAtTimestamp: string;
        updatedAtBlockNumber: string;
        approved: boolean;
        units: string;
        totalAmountReceivedUntilUpdatedAt: string;
        indexValueUntilUpdatedAt: string;
        subscriber: {
            id: string;
        };
        index: {
            id: string;
            indexId: string;
            indexValue: string;
            token: {
                id: string;
                createdAtTimestamp: string;
                createdAtBlockNumber: string;
                name: string;
                symbol: string;
                isListed: boolean;
                underlyingAddress: string;
            };
        };
    }>;
};
export declare const GetIndexSubscriptionsDocument: DocumentNode<GetIndexSubscriptionsQuery, Types.Exact<{
    where?: Types.IndexSubscription_Filter | undefined;
    skip?: number | undefined;
    first?: number | undefined;
    orderBy?: Types.IndexSubscription_OrderBy | undefined;
    orderDirection?: Types.OrderDirection | undefined;
}>>;
//# sourceMappingURL=getIndexSubscriptions.generated.d.ts.map