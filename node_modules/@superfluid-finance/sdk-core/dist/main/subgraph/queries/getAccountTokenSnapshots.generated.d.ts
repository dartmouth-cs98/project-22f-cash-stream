import * as Types from '../schema.generated';
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';
export declare type GetAccountTokenSnapshotsQueryVariables = Types.Exact<{
    where?: Types.AccountTokenSnapshot_Filter;
    skip?: Types.Scalars['Int'];
    first?: Types.Scalars['Int'];
    orderBy?: Types.AccountTokenSnapshot_OrderBy;
    orderDirection?: Types.OrderDirection;
}>;
export declare type GetAccountTokenSnapshotsQuery = {
    result: Array<{
        id: string;
        updatedAtTimestamp: string;
        updatedAtBlockNumber: string;
        totalNumberOfActiveStreams: number;
        totalNumberOfClosedStreams: number;
        totalSubscriptionsWithUnits: number;
        totalApprovedSubscriptions: number;
        balanceUntilUpdatedAt: string;
        totalNetFlowRate: string;
        totalInflowRate: string;
        totalOutflowRate: string;
        totalAmountStreamedUntilUpdatedAt: string;
        totalAmountTransferredUntilUpdatedAt: string;
        account: {
            id: string;
        };
        token: {
            id: string;
            createdAtTimestamp: string;
            createdAtBlockNumber: string;
            name: string;
            symbol: string;
            isListed: boolean;
            underlyingAddress: string;
        };
    }>;
};
export declare const GetAccountTokenSnapshotsDocument: DocumentNode<GetAccountTokenSnapshotsQuery, Types.Exact<{
    where?: Types.AccountTokenSnapshot_Filter | undefined;
    skip?: number | undefined;
    first?: number | undefined;
    orderBy?: Types.AccountTokenSnapshot_OrderBy | undefined;
    orderDirection?: Types.OrderDirection | undefined;
}>>;
//# sourceMappingURL=getAccountTokenSnapshots.generated.d.ts.map