import * as Types from '../schema.generated';
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';
export declare type GetIndexesQueryVariables = Types.Exact<{
    where?: Types.Index_Filter;
    skip?: Types.Scalars['Int'];
    first?: Types.Scalars['Int'];
    orderBy?: Types.Index_OrderBy;
    orderDirection?: Types.OrderDirection;
}>;
export declare type GetIndexesQuery = {
    result: Array<{
        id: string;
        createdAtTimestamp: string;
        createdAtBlockNumber: string;
        updatedAtTimestamp: string;
        updatedAtBlockNumber: string;
        indexId: string;
        indexValue: string;
        totalSubscriptionsWithUnits: number;
        totalUnitsPending: string;
        totalUnitsApproved: string;
        totalUnits: string;
        totalAmountDistributedUntilUpdatedAt: string;
        token: {
            id: string;
            createdAtTimestamp: string;
            createdAtBlockNumber: string;
            name: string;
            symbol: string;
            isListed: boolean;
            underlyingAddress: string;
        };
        publisher: {
            id: string;
        };
    }>;
};
export declare const GetIndexesDocument: DocumentNode<GetIndexesQuery, Types.Exact<{
    where?: Types.Index_Filter | undefined;
    skip?: number | undefined;
    first?: number | undefined;
    orderBy?: Types.Index_OrderBy | undefined;
    orderDirection?: Types.OrderDirection | undefined;
}>>;
//# sourceMappingURL=getIndexes.generated.d.ts.map