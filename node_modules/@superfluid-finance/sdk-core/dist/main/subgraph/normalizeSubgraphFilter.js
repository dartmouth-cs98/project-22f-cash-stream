"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.normalizeSubgraphFilterValue = exports.normalizeSubgraphFilter = void 0;
const normalizeSubgraphFilter = (value) => {
    return Object.keys(value)
        .sort()
        .reduce((acc, key) => {
        acc[key] = (0, exports.normalizeSubgraphFilterValue)(value[key]);
        return acc;
    }, {});
};
exports.normalizeSubgraphFilter = normalizeSubgraphFilter;
/**
 * NOTE: Regex taken from Ethers.
 */
const isAddressRegex = /^(0x)?[0-9a-fA-F]{40}$/;
/**
 * Normalize addresses and empty strings for cache keys.
 */
const normalizeSubgraphFilterValue = (value) => lowerCaseIfAddress(undefinedIfEmpty(value));
exports.normalizeSubgraphFilterValue = normalizeSubgraphFilterValue;
const undefinedIfEmpty = (value) => {
    if (value === "") {
        return undefined;
    }
    return value;
};
const lowerCaseIfAddress = (value) => {
    if (typeof value === "string") {
        if (value.match(isAddressRegex)) {
            return value.toLowerCase();
        }
    }
    if (Array.isArray(value)) {
        return value.map((x) => lowerCaseIfAddress(x));
    }
    return value;
};
//# sourceMappingURL=normalizeSubgraphFilter.js.map